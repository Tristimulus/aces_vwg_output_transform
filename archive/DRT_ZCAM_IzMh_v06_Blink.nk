set cut_paste_input [stack 0]
version 12.0 v8
push $cut_paste_input
Group {
 name DRT_ZCAM_IzMh_v06_Blink1
 label "\[value colorspace_out]/\[value illuminant_out]/\[value primary_out]\n\[value ssts_luminance.2]Cd/sqm"
 note_font "Bitstream Vera Sans"
 selected true
 xpos -211
 ypos 81
 addUserKnob {20 User}
 addUserKnob {26 div_input l Input}
 addUserKnob {41 colorspace_in l colorspace T Colorspace1.colorspace_in}
 addUserKnob {41 illuminant_in l "" -STARTLINE T Colorspace1.illuminant_in}
 addUserKnob {41 primary_in l "" -STARTLINE T Colorspace1.primary_in}
 addUserKnob {26 div_ssts l SSTS}
 addUserKnob {78 ssts_luminance l luminance n 3}
 ssts_luminance {0.0001 10 100}
 addUserKnob {26 ssts_label l "" -STARTLINE T "  min / mid / peak"}
 addUserKnob {26 div_gamutmap l "Gamut Mapping"}
 addUserKnob {41 white T ZCAM_GamutBoundaryBlink1.boundaryWhite}
 addUserKnob {41 gamut -STARTLINE T ZCAM_GamutBoundaryBlink1.boundaryGamut}
 addUserKnob {78 compression n 3}
 compression {0.8 1.3 1.2}
 addUserKnob {26 compression_label l "" -STARTLINE T " threshold / limit / power"}
 addUserKnob {7 desatHighlights l "de-sat highlights" R 0 5}
 desatHighlights 2.5
 addUserKnob {3 lut_size_Iz l "LUT size Iz"}
 lut_size_Iz 512
 addUserKnob {3 lut_size_m l M -STARTLINE}
 lut_size_m 512
 addUserKnob {3 lut_size_h l h -STARTLINE}
 lut_size_h 512
 addUserKnob {26 lut_size_label l "" -STARTLINE T " (for gamut boundary)"}
 addUserKnob {26 div_output l Output}
 addUserKnob {41 colorspace_out l colorspace T Colorspace3.colorspace_out}
 addUserKnob {41 illuminant_out l "" -STARTLINE T Colorspace3.illuminant_out}
 addUserKnob {41 primary_out l "" -STARTLINE T Colorspace3.primary_out}
 addUserKnob {41 viewingConditions_1 l viewingConditions T ZCAM_JMh_Blink1.viewingConditions}
 addUserKnob {78 reference_luminance l "luminance reference" -STARTLINE n 1}
 reference_luminance 100
 addUserKnob {78 background_luminance l background -STARTLINE n 1}
 background_luminance 10
 addUserKnob {26 direction}
 addUserKnob {6 invert +STARTLINE}
}
 BackdropNode {
  inputs 0
  name BackdropNode1
  label "Generate\nGamut Boundary\n2D LUT"
  note_font "Bitstream Vera Sans"
  note_font_size 20
  xpos -777
  ypos -704
  bdwidth 237
  bdheight 931
 }
 BackdropNode {
  inputs 0
  name BackdropNode10
  label "Convert J component to linearised Iz component\nand apply inverse ACES SSTS\n"
  note_font "Bitstream Vera Sans"
  note_font_size 20
  xpos -416
  ypos -388
  bdwidth 829
  bdheight 599
 }
 BackdropNode {
  inputs 0
  name BackdropNode11
  label "IzMh (ZCAM) to Output\n"
  note_font "Bitstream Vera Sans"
  note_font_size 20
  xpos -413
  ypos 233
  bdwidth 822
  bdheight 269
 }
 BackdropNode {
  inputs 0
  name BackdropNode2
  label "Compress Colourfulness (M) to Target Gamut\n"
  note_font "Bitstream Vera Sans"
  note_font_size 20
  xpos -1364
  ypos -76
  bdwidth 577
  bdheight 299
 }
 BackdropNode {
  inputs 0
  name BackdropNode3
  label "Apply ACES SSTS to linearised Iz component\nand convert to J component"
  note_font "Bitstream Vera Sans"
  note_font_size 20
  xpos -1366
  ypos -703
  bdwidth 576
  bdheight 620
 }
 BackdropNode {
  inputs 0
  name BackdropNode4
  label "Input to IzMh (ZCAM)\n"
  note_font "Bitstream Vera Sans"
  note_font_size 20
  xpos -1366
  ypos -983
  bdwidth 822
  bdheight 269
 }
 BackdropNode {
  inputs 0
  name BackdropNode5
  label "JMh (ZCAM) to Output\n"
  note_font "Bitstream Vera Sans"
  note_font_size 20
  xpos -1363
  ypos 236
  bdwidth 822
  bdheight 269
 }
 BackdropNode {
  inputs 0
  name BackdropNode6
  label "Very handwavy attempt at basing \na highlight de-sat on tonescale"
  note_font "Bitstream Vera Sans"
  note_font_size 20
  xpos -1928
  ypos -699
  bdwidth 554
  bdheight 916
 }
 BackdropNode {
  inputs 0
  name BackdropNode7
  label "Input to JMh (ZCAM)\n"
  note_font "Bitstream Vera Sans"
  note_font_size 20
  xpos -417
  ypos -990
  bdwidth 822
  bdheight 269
 }
 BackdropNode {
  inputs 0
  name BackdropNode8
  label "Very handwavy attempt at basing \na highlight de-sat on tonescale"
  note_font "Bitstream Vera Sans"
  note_font_size 20
  xpos 432
  ypos -705
  bdwidth 595
  bdheight 919
 }
 BackdropNode {
  inputs 0
  name BackdropNode9
  label "Un-Compress Colourfulness (M) from Target Gamut\n"
  note_font "Bitstream Vera Sans"
  note_font_size 20
  xpos -416
  ypos -704
  bdwidth 822
  bdheight 299
 }
 Constant {
  inputs 0
  format "256 256 0 0 256 256 1 square_256"
  name Constant1
  xpos -693
  ypos -607
 }
 Reformat {
  type "to box"
  box_width {{Expression2.lookupResolution.y}}
  box_height {{Expression2.lookupResolution.x}}
  box_fixed true
  resize distort
  name Reformat1
  label "To Lookup Resolution"
  xpos -693
  ypos -535
 }
 Expression {
  temp_name0 vx
  temp_expr0 x/(input.width-1)
  temp_name1 vy
  temp_expr1 y/(input.height-1)
  expr0 vy
  expr1 vx
  expr2 1
  expr3 0
  name Expression1
  label "Generate Ramps"
  note_font "Bitstream Vera Sans"
  xpos -693
  ypos -497
 }
 Multiply {
  channels rgb
  value {{Expression2.lookupNormJ} {Expression2.lookupNormM} 1 1}
  name Multiply3
  label "Scale IzMh"
  xpos -693
  ypos -459
 }
 Group {
  name ZCAM_GamutBoundaryBlink1
  note_font "Bitstream Vera Sans"
  xpos -693
  ypos -421
  addUserKnob {20 User}
  addUserKnob {7 boundaryLuminance R 0 1000}
  boundaryLuminance {{parent.ssts_luminance.2}}
  addUserKnob {41 boundaryWhite T XYZ_to_RGB.illuminant_out}
  addUserKnob {41 boundaryGamut -STARTLINE T XYZ_to_RGB.primary_out}
  addUserKnob {41 referenceWhite T RefWhite.illuminant_in}
  addUserKnob {7 referenceLuminance -STARTLINE R 0 1000}
  referenceLuminance {{parent.reference_luminance}}
  addUserKnob {4 viewingConditions M {dark dim average}}
  viewingConditions {{parent.ZCAM_JMh_Blink1.viewingConditions}}
  addUserKnob {7 backgroundLuminance -STARTLINE R 0 100}
  backgroundLuminance {{parent.background_luminance}}
  addUserKnob {6 discountIlluminant +STARTLINE}
 }
  BackdropNode {
   inputs 0
   name BackdropNode1
   label "Helper Nodes"
   note_font "Bitstream Vera Sans"
   note_font_size 20
   xpos 991
   ypos 100
   bdwidth 275
   bdheight 249
  }
  Constant {
   inputs 0
   format "3 1 0 0 3 1 1 3x1px"
   name Constant1
   label "3x1 px"
   note_font "Bitstream Vera Sans"
   xpos 1138
   ypos 184
  }
  Expression {
   expr0 "x == 0 ? 1 : 0"
   expr1 "x == 1 ? 1 : 0"
   expr2 "x == 2 ? 1 : 0"
   name Expression1
   label "RGB pix"
   note_font "Bitstream Vera Sans"
   xpos 1138
   ypos 268
  }
  Colorspace {
   colorspace_in CIE-XYZ
   name XYZ_to_RGB
   note_font "Bitstream Vera Sans"
   xpos 1015
   ypos 268
  }
  Input {
   inputs 0
   name Input1
   xpos 828
   ypos 71
  }
  Dot {
   name Dot1
   note_font "Bitstream Vera Sans"
   xpos 862
   ypos 153
  }
set Ned516250 [stack 0]
  Shuffle {
   red white
   green white
   blue white
   alpha white
   name Shuffle2
   label "\[value in]-->\[value out]"
   note_font "Bitstream Vera Sans"
   xpos 1015
   ypos 144
  }
set N48affb50 [stack 0]
  Colorspace {
   colorspace_out CIE-XYZ
   name D65White
   note_font "Bitstream Vera Sans"
   xpos 1015
   ypos 243
   addUserKnob {20 User}
   addUserKnob {13 value}
   value {{colormatrix.0+colormatrix.1+colormatrix.2} {colormatrix.3+colormatrix.4+colormatrix.5} {colormatrix.6+colormatrix.7+colormatrix.8}}
  }
push $N48affb50
  Colorspace {
   illuminant_in {{parent.parent.white}}
   colorspace_out CIE-XYZ
   name RefWhite
   note_font "Bitstream Vera Sans"
   xpos 1015
   ypos 216
   addUserKnob {20 User}
   addUserKnob {13 value}
   value {{"\[python nuke.thisNode().knob('colormatrix').getValue(0)\\ +\\ nuke.thisNode().knob('colormatrix').getValue(1)\\ +\\ nuke.thisNode().knob('colormatrix').getValue(2)]"} {"\[python nuke.thisNode().knob('colormatrix').getValue(3) + nuke.thisNode().knob('colormatrix').getValue(4) + nuke.thisNode().knob('colormatrix').getValue(5)]"} {"\[python nuke.thisNode().knob('colormatrix').getValue(6) + nuke.thisNode().knob('colormatrix').getValue(7) + nuke.thisNode().knob('colormatrix').getValue(8)]"}}
  }
push $Ned516250
  BlinkScript {
   inputs 4
   recompileCount 90
   ProgramGroup 1
   KernelDescription "2 \"Gamut_Boundary_Kernel\" iterate pixelWise 1d613777f9e0e67c6d1ddfd0df86eb37910738072e0122d56fd6adb0aa37af1b 5 \"src\" Read Random \"refWhite\" Read Point \"d65White\" Read Point \"XYZtoRGB\" Read Random \"dst\" Write Random 11 \"boundaryLuminance\" Float 1 AAAAAA== \"referenceLuminance\" Float 1 AAAAAA== \"F\" Float 1 AAAAAA== \"F_s\" Float 1 AAAAAA== \"L_A\" Float 1 AAAAAA== \"F_b\" Float 1 AAAAAA== \"F_L\" Float 1 AAAAAA== \"adaptDegree\" Float 1 AAAAAA== \"CAT02_XYZ_to_LMS\" Float 9 AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA \"ZCAM_XYZ_to_LMS\" Float 9 AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA \"ZCAM_LMS_to_Izazbz\" Float 9 AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA 11 \"boundaryLuminance\" 1 1 \"referenceLuminance\" 1 1 \"F\" 1 1 \"F_s\" 1 1 \"L_A\" 1 1 \"F_b\" 1 1 \"F_L\" 1 1 \"adaptDegree\" 1 1 \"CAT02_XYZ_to_LMS\" 9 1 \"ZCAM_XYZ_to_LMS\" 9 1 \"ZCAM_LMS_to_Izazbz\" 9 1 8 \"cb\" Float 1 1 AAAAAA== \"cg\" Float 1 1 AAAAAA== \"c1\" Float 1 1 AAAAAA== \"c2\" Float 1 1 AAAAAA== \"c3\" Float 1 1 AAAAAA== \"eta\" Float 1 1 AAAAAA== \"rho\" Float 1 1 AAAAAA== \"boundaryRGB\" Float 1 1 AAAAAA=="
   kernelSource "\nkernel Gamut_Boundary_Kernel : ImageComputationKernel<ePixelWise>\n\{\n  Image<eRead, eAccessRandom, eEdgeClamped> src; // the input image\n  Image<eRead, eAccessPoint, eEdgeClamped> refWhite; // reference white image\n  Image<eRead, eAccessPoint, eEdgeClamped> d65White; // D65 white image\n  Image<eRead, eAccessRandom, eEdgeClamped> XYZtoRGB; // RGB values of X, Y & Z to sample matrix values from\n  Image<eWrite, eAccessRandom> dst; // the output image\n\n  param:\n    float boundaryLuminance;\n    float referenceLuminance;\n    float F;\n    float F_s;\n    float L_A;\n    float F_b;\n    float F_L;\n    float adaptDegree;\n    float3x3 CAT02_XYZ_to_LMS;\n    float3x3 ZCAM_XYZ_to_LMS;\n    float3x3 ZCAM_LMS_to_Izazbz;\n\n  local:\n    float cb;\n    float cg;\n    float c1;\n    float c2;\n    float c3;\n    float eta;\n    float rho;\n    float boundaryRGB;\n\n  void define()\n  \{\n\n  \}\n\n\n  void init()\n  \{\n    cb  = 1.15f;\n    cg  = 0.66f;\n    c1  = 3424.0f / pow(2.0f,12.0f);\n    c2  = 2413.0f / pow(2.0f, 7.0f);\n    c3  = 2392.0f / pow(2.0f, 7.0f);\n    eta = 2610.0f / pow(2.0f,14.0f);\n    rho = 1.7f * 2523.0f / pow(2.0f,5.0f);\n    boundaryRGB = boundaryLuminance / referenceLuminance;\n  \}\n\n\n  float3 vector_dot( float3x3 m, float3 v)\n  \{\n    float3 r = 1.0f;\n    for(int c = 0; c<3; c++)\n    \{\n      r\[c] = m\[c]\[0]*v.x + m\[c]\[1]*v.y + m\[c]\[2]*v.z;\n    \}\n\n    return r;\n  \}\n\n\n  float3 CAT_Zhai2018( float3 XYZ_b, float3 XYZ_wb, float3 XYZ_wd, float D_b, float D_d, float3x3 M)\n  \{\n    float3 XYZ_wo = 100.0f;\n    float3 RGB_b = vector_dot(M, XYZ_b);\n    float3 RGB_wb = vector_dot(M, XYZ_wb);\n    float3 RGB_wd = vector_dot(M, XYZ_wd);\n    float3 RGB_wo = vector_dot(M, XYZ_wo);\n    \n    float3 D_RGB_b = D_b * (XYZ_wb.y / XYZ_wo.y) * (RGB_wo / RGB_wb) + 1 - D_b;\n    float3 D_RGB_d = D_d * (XYZ_wd.y / XYZ_wo.y) * (RGB_wo / RGB_wd) + 1 - D_d;\n    float3 D_RGB = D_RGB_b / D_RGB_d;\n    \n    float3 RGB_d = D_RGB * RGB_b;\n    float3 XYZ_d = vector_dot(M.invert(), RGB_d);\n    \n    return XYZ_d;\n  \}\n\n\n  float3 XYZ_to_Izazbz( float3 XYZD65 )\n  \{\n    float3 XYZpD65 = XYZD65;\n    XYZpD65.x = cb * XYZD65.x - (cb - 1.0f) * XYZD65.z;\n    XYZpD65.y = cg * XYZD65.y - (cg - 1.0f) * XYZD65.x;\n    float3 LMS = vector_dot(ZCAM_XYZ_to_LMS, XYZpD65);\n    float3 LMSp = 0.0f;\n    LMSp.x = pow( ( c1 + c2 * pow((LMS.x/10000.0f),eta) ) / ( 1.0f + c3 * pow((LMS.x/10000.0f),eta) ), rho);\n    LMSp.y = pow( ( c1 + c2 * pow((LMS.y/10000.0f),eta) ) / ( 1.0f + c3 * pow((LMS.y/10000.0f),eta) ), rho);\n    LMSp.z = pow( ( c1 + c2 * pow((LMS.z/10000.0f),eta) ) / ( 1.0f + c3 * pow((LMS.z/10000.0f),eta) ), rho);\n    float3 Izazbz = vector_dot(ZCAM_LMS_to_Izazbz, LMSp);\n    return Izazbz;\n  \}\n\n\n  float degrees( float radians )\n  \{\n    return radians * 180.0f / PI;\n  \}\n\n\n  float radians( float degrees )\n  \{\n    return degrees / 180.0f * PI;\n  \}\n\n\n  float3 Izazbz_to_JMh( float3 Izazbz, float refWhiteIz )\n  \{\n    float3 JMh = 0.0f;\n\n    JMh.z = fmod(degrees(atan2(Izazbz.z,Izazbz.y))+360.0f,360.0f);\n    float ez = 1.015f + cos(radians(89.038f+JMh.z));\n    float Qz = 2700.0f * pow(Izazbz.x, (1.6f * F_s) / pow(F_b, 0.12f)) * pow(F_s, 2.2f) * pow(F_b, 0.5f) * pow(F_L, 0.2f);\n    float Qzw = 2700.0f * pow(refWhiteIz, (1.6f * F_s) / pow(F_b, 0.12f)) * pow(F_s, 2.2f) * pow(F_b, 0.5f) * pow(F_L, 0.2f);\n    JMh.x = 100.0f * (Qz / Qzw);\n    JMh.y = 100.0f * pow((pow(Izazbz.y, 2.0f) + pow(Izazbz.z, 2.0f)), 0.37f) * ((pow(ez, 0.068f) * pow(F_L, 0.2f)) / (pow(F_b, 0.1f) * pow(refWhiteIz, 0.78f)));\n\n    return JMh;\n  \}\n\n\n  float3 JMh_to_Izazbz( float3 JMh, float refWhiteIz)\n  \{\n    float Qzm = pow(F_s, 2.2f) * pow(F_b, 0.5f) * pow(F_L, 0.2f);\n    float Qzw = 2700.0f * pow(refWhiteIz, (1.6f * F_s) / pow(F_b, 0.12f)) * Qzm;\n    float Izp = pow(F_b, 0.12f) / (1.6f * F_s);\n    float Izd = 2700.0f * 100.0f * Qzm;\n    float ez = 1.015f + cos(radians(89.038f+JMh.z));\n    float hzr = radians(JMh.z);\n    float Czp = pow((JMh.y * pow(refWhiteIz, 0.78f) * pow(F_b, 0.1f)) / (100.0f * pow(ez, 0.068f) * pow(F_L, 0.2f)), 50.0f / 37.0f);\n\n    return float3( pow((JMh.x * Qzw) / Izd, Izp), Czp * cos(hzr), Czp * sin(hzr));\n  \}\n\n\n  float3 Izazbz_to_XYZ( float3 Izazbz )\n  \{\n    float3 LMSp = vector_dot(ZCAM_LMS_to_Izazbz.invert(), Izazbz);\n    float3 LMS = 0.0f;\n    LMS.x = 10000.0f*pow((c1-pow(LMSp.x,1.0f/rho)) / (c3*pow(LMSp.x,1.0f/rho)-c2),1.0f/eta);\n    LMS.y = 10000.0f*pow((c1-pow(LMSp.y,1.0f/rho)) / (c3*pow(LMSp.y,1.0f/rho)-c2),1.0f/eta);\n    LMS.z = 10000.0f*pow((c1-pow(LMSp.z,1.0f/rho)) / (c3*pow(LMSp.z,1.0f/rho)-c2),1.0f/eta);\n    float3 XYZpD65 = vector_dot(ZCAM_XYZ_to_LMS.invert(), LMS);\n    float3 XYZD65 = XYZpD65;\n    XYZD65.x = (XYZpD65.x+(cb-1.0f)*XYZpD65.z)/cb;\n    XYZD65.y = (XYZpD65.y+(cg-1.0f)*XYZD65.x)/cg;\n    return XYZD65;\n  \}\n\n\n  float3 ZCAM_JMh_to_XYZ( float3 JMh, float3 refWhite, float3 d65White )\n  \{\n    float3 refWhiteIzazbz = XYZ_to_Izazbz(refWhite*referenceLuminance/refWhite.y);\n    return CAT_Zhai2018(Izazbz_to_XYZ(JMh_to_Izazbz(JMh, refWhiteIzazbz.x)), d65White, refWhite, adaptDegree, adaptDegree, CAT02_XYZ_to_LMS);\n  \}\n\n\n  void process(int2 pos)\n  \{\n    // All the work will be done in the first pixel of each scanline.\n    if( pos.x != src.bounds.x1)\n    \{\n      return;\n    \}\n\n    SampleType(refWhite) inputRefWhite = refWhite();\n    SampleType(d65White) inputD65White = d65White();\n\n    float3x3 XYZ_to_RGB;\n    for( int x = 0; x < 3; x++)\n    \{\n      SampleType(XYZtoRGB) inputXYZtoRGB = XYZtoRGB(x,0);\n      XYZ_to_RGB\[0]\[x] = inputXYZtoRGB.x;\n      XYZ_to_RGB\[1]\[x] = inputXYZtoRGB.y;\n      XYZ_to_RGB\[2]\[x] = inputXYZtoRGB.z;\n    \}\n\n\n    int width = src.bounds.x2 - src.bounds.x1;\n\n    for( int x = src.bounds.x1; x < src.bounds.x2; x++)\n    \{\n      float J = 0.0f;\n      float maxM = 0.0f;\n      float h = float(x-src.bounds.x1)/float(width-1) * 360.0f;\n\n      for( int xx = src.bounds.x1; xx < src.bounds.x2; xx++)\n      \{\n        SampleType(src) input = src(xx, pos.y);\n        float3 JMh = float3(input.x, input.y, h);\n        J = JMh.x;\n        float3 XYZ = ZCAM_JMh_to_XYZ( JMh, float3(inputRefWhite.x, inputRefWhite.y, inputRefWhite.z), float3(inputD65White.x, inputD65White.y, inputD65White.z) );\n        // Luminance to Linear\n        XYZ = XYZ / referenceLuminance;\n        float3 RGB = vector_dot(XYZ_to_RGB, XYZ);\n\n        float minRGB = min(RGB.x, min(RGB.y, RGB.z));\n        float maxRGB = max(RGB.x, max(RGB.y, RGB.z));\n\n        if( minRGB >= 0.0f && maxRGB <= boundaryRGB )\n        \{\n          maxM = max(maxM, JMh.y);\n        \}\n      \}\n\n      float3 boundaryXYZ = ZCAM_JMh_to_XYZ( float3(J, maxM, h), float3(inputRefWhite.x, inputRefWhite.y, inputRefWhite.z), float3(inputD65White.x, inputD65White.y, inputD65White.z) );\n      float3 boundaryRGB = vector_dot(XYZ_to_RGB, boundaryXYZ);\n\n      \n      \n      \n      dst(x, pos.y) = float4(boundaryRGB.x, boundaryRGB.y, boundaryRGB.z, maxM); \n    \}\n  \}\n\};\n"
   rebuild ""
   Gamut_Boundary_Kernel_boundaryLuminance {{parent.boundaryLuminance}}
   Gamut_Boundary_Kernel_referenceLuminance {{parent.referenceLuminance}}
   Gamut_Boundary_Kernel_F {{"\[python (0.8, 0.9, 1.0)\\\[\[numvalue viewingConditions]\\]]"}}
   Gamut_Boundary_Kernel_F_s {{"\[python (0.525, 0.59, 0.69)\\\[\[numvalue viewingConditions]\\]]"}}
   Gamut_Boundary_Kernel_L_A {{"referenceLuminance * backgroundLuminance / 100"}}
   Gamut_Boundary_Kernel_F_b {{sqrt(backgroundLuminance/referenceLuminance)}}
   Gamut_Boundary_Kernel_F_L {{"0.171*pow(Gamut_Boundary_Kernel_L_A, 1/3) * (1-exp(-48/9*Gamut_Boundary_Kernel_L_A))"}}
   Gamut_Boundary_Kernel_adaptDegree {{"parent.discountIlluminant ? 1 : Gamut_Boundary_Kernel_F * (1 - (1 / 3.6) * exp((-Gamut_Boundary_Kernel_L_A - 42) / 92))"}}
   Gamut_Boundary_Kernel_CAT02_XYZ_to_LMS {
       {0.7328 0.4296 -0.1624}
       {-0.7036 1.6975 0.0061}
       {0.003 0.0136 0.9834}
     }
   Gamut_Boundary_Kernel_ZCAM_XYZ_to_LMS {
       {0.41478972 0.579999 0.014648}
       {-0.20151 1.120649 0.0531008}
       {-0.0166008 0.2648 0.6684799}
     }
   Gamut_Boundary_Kernel_ZCAM_LMS_to_Izazbz {
       {0 {1-epsilon} 0}
       {3.524 -4.066708 0.542708}
       {0.199076 1.096799 -1.295875}
     }
   rebuild_finalise ""
   name BlinkScript1
   note_font "Bitstream Vera Sans"
   selected true
   xpos 828
   ypos 221
   addUserKnob {20 User}
   addUserKnob {7 epsilon}
   epsilon 3.703522621e-11
  }
  Output {
   name Output1
   xpos 828
   ypos 335
  }
 end_group
 Toe2 {
  channels alpha
  lift 1
  name Toe1
  label "avoid compressing M to zero\nto preserve invertibility\n"
  note_font "Bitstream Vera Sans"
  xpos -693
  ypos -397
 }
 Dot {
  name Dot23
  note_font "Bitstream Vera Sans"
  xpos -659
  ypos -211
 }
set Nda68db50 [stack 0]
 Dot {
  name Dot24
  note_font "Bitstream Vera Sans"
  xpos -484
  ypos -211
 }
 Dot {
  name Dot25
  note_font "Bitstream Vera Sans"
  xpos -484
  ypos -561
 }
 Input {
  inputs 0
  name Input
  xpos -516
  ypos -1216
 }
 Dot {
  name Dot15
  note_font "Bitstream Vera Sans"
  xpos -482
  ypos -1035
 }
set N7c8ae3d0 [stack 0]
 Dot {
  name Dot17
  note_font "Bitstream Vera Sans"
  xpos 154
  ypos -1035
 }
 Colorspace {
  colorspace_in {{Colorspace3.colorspace_out}}
  illuminant_in {{Colorspace3.illuminant_out}}
  primary_in {{Colorspace3.primary_out}}
  colorspace_out CIE-XYZ
  name Colorspace2
  label "XYZ to Output\ninverse"
  xpos 120
  ypos -896
 }
 Multiply {
  channels rgb
  value 100
  name Multiply13
  label "Lum to Linear\ninverse"
  note_font "Bitstream Vera Sans"
  xpos 120
  ypos -854
  disable {{Colorspace2.colorspace_in==31}}
 }
 Group {
  name ZCAM_JMh_Blink2
  label "JMh to XYZ\ninverse"
  note_font "Bitstream Vera Sans"
  xpos 120
  ypos -806
  addUserKnob {20 User}
  addUserKnob {41 referenceWhite T RefWhite.illuminant_in}
  addUserKnob {7 referenceLuminance -STARTLINE R 0 1000}
  referenceLuminance {{parent.reference_luminance}}
  addUserKnob {4 viewingConditions M {dark dim average}}
  viewingConditions {{ZCAM_JMh_Blink1.viewingConditions}}
  addUserKnob {7 backgroundLuminance -STARTLINE R 0 100}
  backgroundLuminance {{parent.background_luminance}}
  addUserKnob {6 discountIlluminant +STARTLINE}
  addUserKnob {6 invert +STARTLINE}
 }
  BackdropNode {
   inputs 0
   name BackdropNode1
   label "Helper Nodes"
   note_font "Bitstream Vera Sans"
   note_font_size 20
   xpos 991
   ypos 100
   bdwidth 146
   bdheight 250
  }
  Input {
   inputs 0
   name Input1
   xpos 828
   ypos 71
  }
  Dot {
   name Dot1
   note_font "Bitstream Vera Sans"
   xpos 862
   ypos 153
  }
set Nec13b620 [stack 0]
  Shuffle {
   red white
   green white
   blue white
   alpha white
   name Shuffle2
   label "\[value in]-->\[value out]"
   note_font "Bitstream Vera Sans"
   selected true
   xpos 1015
   ypos 144
  }
set Ncd7a6c10 [stack 0]
  Colorspace {
   colorspace_out CIE-XYZ
   name D65White
   note_font "Bitstream Vera Sans"
   xpos 1015
   ypos 243
   addUserKnob {20 User}
   addUserKnob {13 value}
   value {{colormatrix.0+colormatrix.1+colormatrix.2} {colormatrix.3+colormatrix.4+colormatrix.5} {colormatrix.6+colormatrix.7+colormatrix.8}}
  }
push $Ncd7a6c10
  Colorspace {
   illuminant_in {{parent.parent.white}}
   colorspace_out CIE-XYZ
   name RefWhite
   note_font "Bitstream Vera Sans"
   xpos 1015
   ypos 216
   addUserKnob {20 User}
   addUserKnob {13 value}
   value {{"\[python nuke.thisNode().knob('colormatrix').getValue(0)\\ +\\ nuke.thisNode().knob('colormatrix').getValue(1)\\ +\\ nuke.thisNode().knob('colormatrix').getValue(2)]"} {"\[python nuke.thisNode().knob('colormatrix').getValue(3) + nuke.thisNode().knob('colormatrix').getValue(4) + nuke.thisNode().knob('colormatrix').getValue(5)]"} {"\[python nuke.thisNode().knob('colormatrix').getValue(6) + nuke.thisNode().knob('colormatrix').getValue(7) + nuke.thisNode().knob('colormatrix').getValue(8)]"}}
  }
push $Nec13b620
  BlinkScript {
   inputs 3
   recompileCount 66
   ProgramGroup 1
   KernelDescription "2 \"ZCAM_JMh_Kernel\" iterate pixelWise ac1327942f16c15a4b75f54f652a97dc0f54381ec18fc95d13cdfae2cd779b6b 4 \"src\" Read Point \"refWhite\" Read Point \"d65White\" Read Point \"dst\" Write Point 11 \"direction\" Int 1 AAAAAA== \"referenceLuminance\" Float 1 AAAAAA== \"F\" Float 1 AAAAAA== \"F_s\" Float 1 AAAAAA== \"L_A\" Float 1 AAAAAA== \"F_b\" Float 1 AAAAAA== \"F_L\" Float 1 AAAAAA== \"adaptDegree\" Float 1 AAAAAA== \"CAT02_XYZ_to_LMS\" Float 9 AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA \"ZCAM_XYZ_to_LMS\" Float 9 AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA \"ZCAM_LMS_to_Izazbz\" Float 9 AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA 11 \"direction\" 1 1 \"referenceLuminance\" 1 1 \"F\" 1 1 \"F_s\" 1 1 \"L_A\" 1 1 \"F_b\" 1 1 \"F_L\" 1 1 \"adaptDegree\" 1 1 \"CAT02_XYZ_to_LMS\" 9 1 \"ZCAM_XYZ_to_LMS\" 9 1 \"ZCAM_LMS_to_Izazbz\" 9 1 7 \"cb\" Float 1 1 AAAAAA== \"cg\" Float 1 1 AAAAAA== \"c1\" Float 1 1 AAAAAA== \"c2\" Float 1 1 AAAAAA== \"c3\" Float 1 1 AAAAAA== \"eta\" Float 1 1 AAAAAA== \"rho\" Float 1 1 AAAAAA=="
   kernelSource "\nkernel ZCAM_JMh_Kernel : ImageComputationKernel<ePixelWise>\n\{\n  Image<eRead, eAccessPoint, eEdgeClamped> src; // the input image\n  Image<eRead, eAccessPoint, eEdgeClamped> refWhite; // reference white image\n  Image<eRead, eAccessPoint, eEdgeClamped> d65White; // D65 white image\n  Image<eWrite> dst; // the output image\n\n  param:\n    int direction;\n    float referenceLuminance;\n    float F;\n    float F_s;\n    float L_A;\n    float F_b;\n    float F_L;\n    float adaptDegree;\n    float3x3 CAT02_XYZ_to_LMS;\n    float3x3 ZCAM_XYZ_to_LMS;\n    float3x3 ZCAM_LMS_to_Izazbz;\n\n  local:\n    float cb;\n    float cg;\n    float c1;\n    float c2;\n    float c3;\n    float eta;\n    float rho;\n\n\n  void define()\n  \{\n\n  \}\n\n\n  void init()\n  \{\n    cb  = 1.15f;\n    cg  = 0.66f;\n    c1  = 3424.0f / pow(2.0f,12.0f);\n    c2  = 2413.0f / pow(2.0f, 7.0f);\n    c3  = 2392.0f / pow(2.0f, 7.0f);\n    eta = 2610.0f / pow(2.0f,14.0f);\n    rho = 1.7f * 2523.0f / pow(2.0f,5.0f);\n  \}\n\n\n  float3 vector_dot( float3x3 m, float3 v)\n  \{\n    float3 r = 1.0f;\n    for(int c = 0; c<3; c++)\n    \{\n      r\[c] = m\[c]\[0]*v.x + m\[c]\[1]*v.y + m\[c]\[2]*v.z;\n    \}\n\n    return r;\n  \}\n\n\n  float3 CAT_Zhai2018( float3 XYZ_b, float3 XYZ_wb, float3 XYZ_wd, float D_b, float D_d, float3x3 M)\n  \{\n    float3 XYZ_wo = 100.0f;\n    float3 RGB_b = vector_dot(M, XYZ_b);\n    float3 RGB_wb = vector_dot(M, XYZ_wb);\n    float3 RGB_wd = vector_dot(M, XYZ_wd);\n    float3 RGB_wo = vector_dot(M, XYZ_wo);\n    \n    float3 D_RGB_b = D_b * (XYZ_wb.y / XYZ_wo.y) * (RGB_wo / RGB_wb) + 1 - D_b;\n    float3 D_RGB_d = D_d * (XYZ_wd.y / XYZ_wo.y) * (RGB_wo / RGB_wd) + 1 - D_d;\n    float3 D_RGB = D_RGB_b / D_RGB_d;\n    \n    float3 RGB_d = D_RGB * RGB_b;\n    float3 XYZ_d = vector_dot(M.invert(), RGB_d);\n    \n    return XYZ_d;\n  \}\n\n\n  float3 XYZ_to_Izazbz( float3 XYZD65 )\n  \{\n    float3 XYZpD65 = XYZD65;\n    XYZpD65.x = cb * XYZD65.x - (cb - 1.0f) * XYZD65.z;\n    XYZpD65.y = cg * XYZD65.y - (cg - 1.0f) * XYZD65.x;\n    float3 LMS = vector_dot(ZCAM_XYZ_to_LMS, XYZpD65);\n    float3 LMSp = 0.0f;\n    LMSp.x = pow( ( c1 + c2 * pow((LMS.x/10000.0f),eta) ) / ( 1.0f + c3 * pow((LMS.x/10000.0f),eta) ), rho);\n    LMSp.y = pow( ( c1 + c2 * pow((LMS.y/10000.0f),eta) ) / ( 1.0f + c3 * pow((LMS.y/10000.0f),eta) ), rho);\n    LMSp.z = pow( ( c1 + c2 * pow((LMS.z/10000.0f),eta) ) / ( 1.0f + c3 * pow((LMS.z/10000.0f),eta) ), rho);\n    float3 Izazbz = vector_dot(ZCAM_LMS_to_Izazbz, LMSp);\n    return Izazbz;\n  \}\n\n\n  float degrees( float radians )\n  \{\n    return radians * 180.0f / PI;\n  \}\n\n\n  float radians( float degrees )\n  \{\n    return degrees / 180.0f * PI;\n  \}\n\n\n  float3 Izazbz_to_JMh( float3 Izazbz, float refWhiteIz )\n  \{\n    float3 JMh = 0.0f;\n\n    JMh.z = fmod(degrees(atan2(Izazbz.z,Izazbz.y))+360.0f,360.0f);\n    float ez = 1.015f + cos(radians(89.038f+JMh.z));\n    float Qz = 2700.0f * pow(Izazbz.x, (1.6f * F_s) / pow(F_b, 0.12f)) * pow(F_s, 2.2f) * pow(F_b, 0.5f) * pow(F_L, 0.2f);\n    float Qzw = 2700.0f * pow(refWhiteIz, (1.6f * F_s) / pow(F_b, 0.12f)) * pow(F_s, 2.2f) * pow(F_b, 0.5f) * pow(F_L, 0.2f);\n    JMh.x = 100.0f * (Qz / Qzw);\n    JMh.y = 100.0f * pow((pow(Izazbz.y, 2.0f) + pow(Izazbz.z, 2.0f)), 0.37f) * ((pow(ez, 0.068f) * pow(F_L, 0.2f)) / (pow(F_b, 0.1f) * pow(refWhiteIz, 0.78f)));\n\n    return JMh;\n  \}\n\n\n  float3 JMh_to_Izazbz( float3 JMh, float refWhiteIz)\n  \{\n    float Qzm = pow(F_s, 2.2f) * pow(F_b, 0.5f) * pow(F_L, 0.2f);\n    float Qzw = 2700.0f * pow(refWhiteIz, (1.6f * F_s) / pow(F_b, 0.12f)) * Qzm;\n    float Izp = pow(F_b, 0.12f) / (1.6f * F_s);\n    float Izd = 2700.0f * 100.0f * Qzm;\n    float ez = 1.015f + cos(radians(89.038f+JMh.z));\n    float hzr = radians(JMh.z);\n    float Czp = pow((JMh.y * pow(refWhiteIz, 0.78f) * pow(F_b, 0.1f)) / (100.0f * pow(ez, 0.068f) * pow(F_L, 0.2f)), 50.0f / 37.0f);\n\n    return float3( pow((JMh.x * Qzw) / Izd, Izp), Czp * cos(hzr), Czp * sin(hzr));\n  \}\n\n\n  float3 Izazbz_to_XYZ( float3 Izazbz )\n  \{\n    float3 LMSp = vector_dot(ZCAM_LMS_to_Izazbz.invert(), Izazbz);\n    float3 LMS = 0.0f;\n    LMS.x = 10000.0f*pow((c1-pow(LMSp.x,1.0f/rho)) / (c3*pow(LMSp.x,1.0f/rho)-c2),1.0f/eta);\n    LMS.y = 10000.0f*pow((c1-pow(LMSp.y,1.0f/rho)) / (c3*pow(LMSp.y,1.0f/rho)-c2),1.0f/eta);\n    LMS.z = 10000.0f*pow((c1-pow(LMSp.z,1.0f/rho)) / (c3*pow(LMSp.z,1.0f/rho)-c2),1.0f/eta);\n    float3 XYZpD65 = vector_dot(ZCAM_XYZ_to_LMS.invert(), LMS);\n    float3 XYZD65 = XYZpD65;\n    XYZD65.x = (XYZpD65.x+(cb-1.0f)*XYZpD65.z)/cb;\n    XYZD65.y = (XYZpD65.y+(cg-1.0f)*XYZD65.x)/cg;\n    return XYZD65;\n  \}\n\n\n  float3 XYZ_to_ZCAM_JMh( float3 XYZ, float3 refWhite, float3 d65White )\n  \{\n    float3 refWhiteIzazbz = XYZ_to_Izazbz(refWhite*referenceLuminance/refWhite.y);\n    return Izazbz_to_JMh(XYZ_to_Izazbz(CAT_Zhai2018(XYZ, refWhite, d65White, adaptDegree, adaptDegree, CAT02_XYZ_to_LMS)), refWhiteIzazbz.x);\n  \}\n\n\n  float3 ZCAM_JMh_to_XYZ( float3 JMh, float3 refWhite, float3 d65White )\n  \{\n    float3 refWhiteIzazbz = XYZ_to_Izazbz(refWhite*referenceLuminance/refWhite.y);\n    return CAT_Zhai2018(Izazbz_to_XYZ(JMh_to_Izazbz(JMh, refWhiteIzazbz.x)), d65White, refWhite, adaptDegree, adaptDegree, CAT02_XYZ_to_LMS);\n  \}\n\n\n  void process()\n  \{\n    SampleType(src) input = src();\n    SampleType(refWhite) inputRefWhite = refWhite();\n    SampleType(d65White) inputD65White = d65White();\n\n    float3 output = 0.0f;\n\n    if( direction == 0 )\n    \{\n      output = XYZ_to_ZCAM_JMh(float3(input.x, input.y, input.z), float3(inputRefWhite.x, inputRefWhite.y, inputRefWhite.z), float3(inputD65White.x, inputD65White.y, inputD65White.z));\n    \}\n    else\n    \{\n       output = ZCAM_JMh_to_XYZ(float3(input.x, input.y, input.z), float3(inputRefWhite.x, inputRefWhite.y, inputRefWhite.z), float3(inputD65White.x, inputD65White.y, inputD65White.z));\n    \}\n\n    dst() = float4(output.x, output.y, output.z, input.w);\n  \}\n\};\n"
   rebuild ""
   ZCAM_JMh_Kernel_direction {{parent.invert}}
   ZCAM_JMh_Kernel_referenceLuminance {{parent.referenceLuminance}}
   ZCAM_JMh_Kernel_F {{"\[python (0.8, 0.9, 1.0)\\\[\[numvalue viewingConditions]\\]]"}}
   ZCAM_JMh_Kernel_F_s {{"\[python (0.525, 0.59, 0.69)\\\[\[numvalue viewingConditions]\\]]"}}
   ZCAM_JMh_Kernel_L_A {{"referenceLuminance * backgroundLuminance / 100"}}
   ZCAM_JMh_Kernel_F_b {{sqrt(backgroundLuminance/referenceLuminance)}}
   ZCAM_JMh_Kernel_F_L {{"0.171*pow(ZCAM_JMh_Kernel_L_A, 1/3) * (1-exp(-48/9*ZCAM_JMh_Kernel_L_A))"}}
   ZCAM_JMh_Kernel_adaptDegree {{"parent.discountIlluminant ? 1 : ZCAM_JMh_Kernel_F * (1 - (1 / 3.6) * exp((-ZCAM_JMh_Kernel_L_A - 42) / 92))"}}
   ZCAM_JMh_Kernel_CAT02_XYZ_to_LMS {
       {0.7328 0.4296 -0.1624}
       {-0.7036 1.6975 0.0061}
       {0.003 0.0136 0.9834}
     }
   ZCAM_JMh_Kernel_ZCAM_XYZ_to_LMS {
       {0.41478972 0.579999 0.014648}
       {-0.20151 1.120649 0.0531008}
       {-0.0166008 0.2648 0.6684799}
     }
   ZCAM_JMh_Kernel_ZCAM_LMS_to_Izazbz {
       {0 {1-epsilon} 0}
       {3.524 -4.066708 0.542708}
       {0.199076 1.096799 -1.295875}
     }
   rebuild_finalise ""
   name BlinkScript1
   note_font "Bitstream Vera Sans"
   xpos 828
   ypos 221
   addUserKnob {20 User}
   addUserKnob {7 epsilon}
   epsilon 3.703522621e-11
  }
  Output {
   name Output1
   xpos 828
   ypos 335
  }
 end_group
 Dot {
  name Dot19
  note_font "Bitstream Vera Sans"
  xpos 154
  ypos -634
 }
set Nad645dc0 [stack 0]
 Dot {
  name Dot20
  note_font "Bitstream Vera Sans"
  xpos -70
  ypos -634
 }
set N13efc090 [stack 0]
 Dot {
  name Dot21
  note_font "Bitstream Vera Sans"
  xpos -209
  ypos -634
 }
 Expression {
  temp_name0 posX
  temp_expr0 b/360*(lookupResolution.z-1)
  temp_name1 posY
  temp_expr1 r/lookupNormJ*(lookupResolution.x-1)
  temp_name2 fractX
  temp_expr2 posX-floor(posX)
  temp_name3 fractY
  temp_expr3 posY-floor(posY)
  expr0 posX
  expr1 fractX
  expr2 posY
  expr3 fractY
  name Expression3
  label "calculate lookup coordinates"
  note_font "Bitstream Vera Sans"
  xpos -243
  ypos -609
  addUserKnob {20 User}
  addUserKnob {13 lookupResolution}
  lookupResolution {{parent.lut_size_Iz} {parent.lut_size_m} {parent.lut_size_h}}
  addUserKnob {7 lookupNormJ R 0 500}
  lookupNormJ {{pow(log(parent.ssts_luminance.2)/log(2),1.7)*4.5}}
  addUserKnob {7 lookupNormM R 0 200}
  lookupNormM 80
 }
 MergeExpression {
  inputs 2
  temp_name0 blPix
  temp_expr0 Aa(floor(Br),floor(Bb))
  temp_name1 brPix
  temp_expr1 Aa(ceil(Br),floor(Bb))
  temp_name2 trPix
  temp_expr2 Aa(ceil(Br),ceil(Bb))
  temp_name3 tlPix
  temp_expr3 Aa(floor(Br),ceil(Bb))
  channel0 none
  expr1 "lerp( lerp(blPix, brPix, Bg), lerp(tlPix, trPix, Bg), Ba)"
  channel2 none
  channel3 none
  name MergeExpression3
  label "Bilinear Interploation"
  xpos -243
  ypos -568
 }
set N4baf8110 [stack 0]
 Dot {
  name Dot22
  note_font "Bitstream Vera Sans"
  xpos -209
  ypos -483
 }
push $N13efc090
push $N4baf8110
 Merge2 {
  inputs 2
  operation divide
  name Merge7
  xpos -104
  ypos -564
 }
 Expression {
  expr0 (r<thr.r||lim.r<1.0001||r>thr.r+s.r)?r:thr.r+s.r*pow(-(pow((r-thr.r)/s.r,p)/(pow((r-thr.r)/s.r,p)-1)),1/p)
  expr1 (g<thr.g||lim.g<1.0001||g>thr.g+s.g)?g:thr.g+s.g*pow(-(pow((g-thr.g)/s.g,p)/(pow((g-thr.g)/s.g,p)-1)),1/p)
  expr2 (b<thr.b||lim.b<1.0001||b>thr.b+s.b)?b:thr.b+s.b*pow(-(pow((b-thr.b)/s.b,p)/(pow((b-thr.b)/s.b,p)-1)),1/p)
  name UnCompress1
  label Power(P)
  xpos -104
  ypos -529
  addUserKnob {20 Params_tab l Params}
  addUserKnob {18 thr}
  thr {{parent.compression.0}}
  addUserKnob {6 thr_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
  addUserKnob {18 lim}
  lim {{parent.compression.1}}
  addUserKnob {6 lim_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
  addUserKnob {18 s}
  s {{(lim-thr)/pow(pow((1-thr)/(lim-thr),-p)-1,1/p)} {(lim-thr)/pow(pow((1-thr)/(lim-thr),-p)-1,1/p)} {(lim-thr)/pow(pow((1-thr)/(lim-thr),-p)-1,1/p)}}
  addUserKnob {6 s_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
  addUserKnob {7 p R 1 5}
  p {{parent.compression.2}}
 }
 Merge2 {
  inputs 2
  operation multiply
  name Merge8
  xpos -104
  ypos -486
 }
push $Nad645dc0
 ShuffleCopy {
  inputs 2
  green green
  alpha alpha2
  name ShuffleCopy3
  label "Apply Compressed\nColourfulness (M)"
  note_font "Bitstream Vera Sans"
  xpos 120
  ypos -498
 }
 Dot {
  name Dot37
  note_font "Bitstream Vera Sans"
  xpos 154
  ypos -328
 }
set Nffcf5260 [stack 0]
 Group {
  name Group2
  label "Re-Generate Iz\nfrom J"
  xpos -47
  ypos -340
  addUserKnob {20 User}
  addUserKnob {41 referenceWhite -STARTLINE T Colorspace2.illuminant_in}
  addUserKnob {7 referenceLuminance -STARTLINE R 0 10000}
  referenceLuminance {{parent.reference_luminance}}
  addUserKnob {4 viewingConditions M {dark dim average}}
  addUserKnob {7 backgroundLuminance -STARTLINE R 0 200}
  backgroundLuminance {{parent.background_luminance}}
  addUserKnob {6 discountIlluminant +STARTLINE}
  addUserKnob {20 Factors}
  addUserKnob {7 F}
  F {{"\[python (0.8, 0.9, 1.0)\\\[\[numvalue viewingConditions]\\]]"}}
  addUserKnob {7 F_s}
  F_s {{"\[python (0.525, 0.59, 0.69)\\\[\[numvalue viewingConditions]\\]]"}}
  addUserKnob {7 L_A}
  L_A {{"referenceLuminance * backgroundLuminance / 100"}}
  addUserKnob {7 F_b}
  F_b {{sqrt(backgroundLuminance/referenceLuminance)}}
  addUserKnob {7 F_L}
  F_L {{"0.171*pow(L_A, 1/3) * (1-exp(-48/9*L_A))"}}
 }
  BackdropNode {
   inputs 0
   name BackdropNode7
   tile_color 0x666666ff
   label "Reference White"
   note_font_size 20
   xpos 27
   ypos -149
   bdwidth 177
   bdheight 144
  }
  Input {
   inputs 0
   name Input
   xpos -66
   ypos -264
  }
  Dot {
   name Dot1
   xpos -32
   ypos -184
  }
set N5e87db40 [stack 0]
  Dot {
   name Dot11
   xpos 114
   ypos -184
  }
  Shuffle {
   red white
   green white
   blue white
   alpha white
   name Shuffle2
   label "\[value in]-->\[value out]"
   note_font "Bitstream Vera Sans"
   xpos 80
   ypos -112
  }
  Colorspace {
   illuminant_in {{parent.parent.illuminant_in}}
   colorspace_out CIE-XYZ
   name Colorspace2
   xpos 80
   ypos -76
  }
  Expression {
   temp_name0 gain
   temp_expr0 parent.referenceLuminance/g
   expr0 r*gain
   expr1 g*gain
   expr2 b*gain
   name Expression0
   xpos 80
   ypos -50
  }
  Group {
   name XYZ_w_to_Izazbz
   xpos 80
   ypos -26
  }
   Input {
    inputs 0
    name Input1
    xpos 148
    ypos 197
   }
   Expression {
    temp_name0 cb
    temp_expr0 1.15
    temp_name1 cg
    temp_expr1 0.66
    expr0 "(cb*r) - ((cb-1)*b)"
    expr1 "(cg*g) - ((cg-1)*r)"
    expr2 b
    name Expression1
    label "XYZ (D65)\nto\nX'Y'Z (D65)"
    note_font "Bitstream Vera Sans"
    xpos 148
    ypos 237
   }
   ColorMatrix {
    matrix {
        {0.41478972 0.579999 0.014648}
        {-0.20151 1.120649 0.0531008}
        {-0.0166008 0.2648 0.6684799}
      }
    name ColorMatrix1
    label "X'Y'Z (D65)\nto\nLMS"
    note_font "Bitstream Vera Sans"
    xpos 148
    ypos 297
   }
   Expression {
    temp_name0 c1
    temp_expr0 "3424 / pow(2,12)"
    temp_name1 c2
    temp_expr1 "2413 / pow(2,7)"
    temp_name2 c3
    temp_expr2 "2392 / pow(2,7)"
    temp_name3 n
    temp_expr3 2610/pow(2,14)
    expr0 "pow( ( c1 + c2 * pow((r/10000),n) ) / ( 1 + c3 * pow((r/10000),n) ), (1.7 * 2523 / pow(2,5)))"
    expr1 "pow( ( c1 + c2 * pow((g/10000),n) ) / ( 1 + c3 * pow((g/10000),n) ), (1.7 * 2523 / pow(2,5)))"
    expr2 "pow( ( c1 + c2 * pow((b/10000),n) ) / ( 1 + c3 * pow((b/10000),n) ), (1.7 * 2523 / pow(2,5)))"
    name Expression2
    label "LMS\nto\nL'M'S'"
    note_font "Bitstream Vera Sans"
    xpos 148
    ypos 357
   }
   ColorMatrix {
    matrix {
        {0 {1-epsilon} 0}
        {3.524 -4.066708 0.542708}
        {0.199076 1.096799 -1.295875}
      }
    name ColorMatrix2
    label "L'M'S\nto\nIzazbz"
    note_font "Bitstream Vera Sans"
    xpos 148
    ypos 417
    addUserKnob {20 User}
    addUserKnob {7 epsilon}
    epsilon 3.703522621e-11
   }
   Output {
    name Output1
    xpos 148
    ypos 517
   }
  end_group
  Dot {
   name Dot2
   xpos 114
   ypos 53
  }
push $N5e87db40
  MergeExpression {
   inputs 2
   temp_name0 Qzm
   temp_expr0 "pow(parent.F_s, 2.2) * pow(parent.F_b, 0.5) * pow(parent.F_L, 0.2)"
   temp_name1 Qzw
   temp_expr1 "2700 * pow(Ar, (1.6 * parent.F_s) / pow(parent.F_b, 0.12)) * Qzm"
   temp_name2 Izp
   temp_expr2 "pow(parent.F_b, 0.12) / (1.6 * parent.F_s)"
   temp_name3 Izd
   temp_expr3 "2700 * 100 * Qzm"
   expr0 "pow((r * Qzw) / Izd, Izp)"
   channel1 none
   channel2 none
   channel3 none
   name MergeExpression3
   selected true
   xpos -66
   ypos 50
  }
  Output {
   name Output
   xpos -66
   ypos 117
  }
 end_group
 Group {
  name st2048_6
  label "Lum to PQ (ZCAM)\ninverse"
  xpos -47
  ypos -288
  addUserKnob {20 User}
  addUserKnob {4 direction M {"Luminance (Cd/sqm) -> ST.2048" "ST.2048 -> Luminance (Cd/sqm)"}}
  direction "ST.2048 -> Luminance (Cd/sqm)"
  addUserKnob {7 peakLuminance R 0 10000}
  peakLuminance 10000
  addUserKnob {26 ""}
  addUserKnob {26 m2_override_desc l "" +STARTLINE T "ZCAM uses a different exponent (rho) in its PQ function than ST.2084 (m2)"}
  addUserKnob {7 m2_override R 0 200}
  m2_override {{"1.7 * 2523 / pow(2,5)"}}
 }
  Input {
   inputs 0
   name Input1
   xpos 829
   ypos 200
  }
  Dot {
   name Dot17
   xpos 863
   ypos 240
  }
set N48d577e0 [stack 0]
  Dot {
   name Dot27
   xpos 916
   ypos 240
  }
  Expression {
   temp_name0 V_pr
   temp_expr0 "pow(r, 1/m_2)"
   temp_name1 V_pg
   temp_expr1 "pow(g, 1/m_2)"
   temp_name2 V_pb
   temp_expr2 "pow(b, 1/m_2)"
   expr0 "pow((max(0.0, V_pr - c_1) / (c_2 - c_3 * V_pr)), 1/m_1)*L_p"
   expr1 "pow((max(0.0, V_pg - c_1) / (c_2 - c_3 * V_pg)), 1/m_1)*L_p"
   expr2 "pow((max(0.0, V_pb - c_1) / (c_2 - c_3 * V_pb)), 1/m_1)*L_p"
   channel3 none
   name from_st2048
   selected true
   xpos 882
   ypos 285
   addUserKnob {20 User}
   addUserKnob {7 m_1}
   m_1 {{"2610 / 4096 * (1 / 4)"}}
   addUserKnob {7 m_2}
   m_2 {{parent.m2_override}}
   addUserKnob {7 c_1}
   c_1 {{"3424 / 4096"}}
   addUserKnob {7 c_2}
   c_2 {{"2413 / 4096 * 32"}}
   addUserKnob {7 c_3}
   c_3 {{"2392 / 4096 * 32"}}
   addUserKnob {7 L_p R 0 10000}
   L_p {{parent.peakLuminance}}
  }
push $N48d577e0
  Dot {
   name Dot26
   xpos 810
   ypos 240
  }
  Expression {
   temp_name0 Y_pr
   temp_expr0 "pow(r / L_p, m_1)"
   temp_name1 Y_pg
   temp_expr1 "pow(g / L_p, m_1)"
   temp_name2 Y_pb
   temp_expr2 "pow(b / L_p, m_1)"
   expr0 "pow((c_1 + c_2 * Y_pr) / (c_3 * Y_pr + 1), m_2)"
   expr1 "pow((c_1 + c_2 * Y_pg) / (c_3 * Y_pg + 1), m_2)"
   expr2 "pow((c_1 + c_2 * Y_pb) / (c_3 * Y_pb + 1), m_2)"
   channel3 none
   name to_st2084
   xpos 776
   ypos 286
   addUserKnob {20 User}
   addUserKnob {7 m_1}
   m_1 {{"2610 / 4096 * (1 / 4)"}}
   addUserKnob {7 m_2}
   m_2 {{parent.m2_override}}
   addUserKnob {7 c_1}
   c_1 {{"3424 / 4096"}}
   addUserKnob {7 c_2}
   c_2 {{"2413 / 4096 * 32"}}
   addUserKnob {7 c_3}
   c_3 {{"2392 / 4096 * 32"}}
   addUserKnob {7 L_p R 0 10000}
   L_p {{parent.peakLuminance}}
  }
  Switch {
   inputs 2
   which {{parent.direction}}
   name Switch2
   xpos 835
   ypos 347
  }
  Output {
   name Output1
   xpos 835
   ypos 447
  }
 end_group
 Multiply {
  channels rgb
  value 1.028552621
  name Multiply16
  label "re-apply luminance shift\nfrom cone fundamentals matrix\ninverse"
  note_font "Bitstream Vera Sans"
  xpos -47
  ypos -246
 }
 BlinkScript {
  recompileCount 35
  ProgramGroup 1
  KernelDescription "2 \"SSTSKernel\" iterate pixelWise 3292521f65973146de9ba2803e15c81b8610684f8dcbef3a3fc1382de44823f8 2 \"src\" Read Point \"dst\" Write Point 8 \"lumMid\" Float 1 AAAAAA== \"defaultMin\" Float 3 AAAAAAAAAAAAAAAAAAAAAA== \"defaultMid\" Float 3 AAAAAAAAAAAAAAAAAAAAAA== \"defaultMax\" Float 3 AAAAAAAAAAAAAAAAAAAAAA== \"coefsLow\" Float 6 AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA= \"coefsHigh\" Float 6 AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA= \"M1\" Float 9 AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA \"inverse\" Int 1 AAAAAA== 8 \"lumMid\" 1 1 \"defaultMin\" 3 1 \"defaultMid\" 3 1 \"defaultMax\" 3 1 \"coefsLow\" 1 6 \"coefsHigh\" 1 6 \"M1\" 9 1 \"inverse\" 1 1 4 \"expShift\" Float 1 1 AAAAAA== \"paramMin\" Float 3 1 AAAAAAAAAAAAAAAAAAAAAA== \"paramMid\" Float 3 1 AAAAAAAAAAAAAAAAAAAAAA== \"paramMax\" Float 3 1 AAAAAAAAAAAAAAAAAAAAAA=="
  kernelSource "kernel SSTSKernel : ImageComputationKernel<ePixelWise>\n\{\n  Image<eRead, eAccessPoint, eEdgeClamped> src; // the input image\n  Image<eWrite> dst; // the output image\n\n  param:\n    float lumMid;\n    float3 defaultMin;\n    float3 defaultMid;\n    float3 defaultMax;\n    float coefsLow\[6];\n    float coefsHigh\[6];\n    float3x3 M1;\n    int inverse;\n\n  local:\n    float expShift;\n    float3 paramMin;\n    float3 paramMid;\n    float3 paramMax;\n\n  \n  void define()\n  \{\n\n  \}\n\n  float3 vector_dot( float3 v, float3x3 m)\n  \{\n    float3 r = 1.0f;\n    for(int c = 0; c<3; c++)\n    \{\n      r\[c] = m\[c]\[0]*v.x + m\[c]\[1]*v.y + m\[c]\[2]*v.z;\n    \}\n\n    return r;\n  \}\n\n\n  float dot( float3 a, float3 b)\n  \{\n    return (a.x*b.x) + (a.y*b.y) + (a.z*b.z);\n  \}\n\n  \n  float ssts(float x, float3 minPt, float3 midPt, float3 maxPt)\n  \{\n    float HALF_MIN = 0.0000000596046448;\n\n    // Check for negatives or zero before taking the log. If negative or zero,\n    // set to HALF_MIN.\n    float logx = log10( max(x, HALF_MIN )); \n\n    float logy;\n\n    if( logx <= log10(minPt.x) )\n    \{ \n        logy = logx * minPt.z + ( log10(minPt.y) - minPt.z * log10(minPt.x) );\n    \}\n    else if(( logx > log10(minPt.x) ) && ( logx < log10(midPt.x) ))\n    \{\n        float knot_coord = 3.0f * (logx-log10(minPt.x)) / (log10(midPt.x) - log10(minPt.x));\n        int j = knot_coord;\n        float t = knot_coord - float(j);\n        float3 cf(coefsLow\[j], coefsLow\[j + 1], coefsLow\[j + 2]);\n        float3 monomials( t * t, t, 1.0f );\n        logy = dot(monomials, vector_dot( cf, M1));\n    \}\n    else if(( logx >= log10(midPt.x) ) && ( logx < log10(maxPt.x) ))\n    \{\n        float knot_coord = 3.0f * (logx-log10(midPt.x)) / (log10(maxPt.x) - log10(midPt.x));\n        int j = knot_coord;\n        float t = knot_coord - float(j);\n        float3 cf(coefsHigh\[j], coefsHigh\[j + 1], coefsHigh\[j + 2]); \n        float3 monomials(t * t, t, 1.0f);\n        logy = dot(monomials, vector_dot( cf, M1));\n    \}\n    else\n    \{\n        logy = logx * maxPt.z + ( log10(maxPt.y) - maxPt.z * log10(maxPt.x) );\n    \}\n\n    return pow(10.0f,logy);\n  \}\n\n  \n  float inv_ssts(float y, float3 minPt, float3 midPt, float3 maxPt)\n  \{\n    float KNOT_INC_LOW  = (log10(midPt.x) - log10(minPt.x)) / 3.0f;\n    float KNOT_INC_HIGH = (log10(maxPt.x) - log10(midPt.x)) / 3.0f;\n\n    // KNOT_Y is luminance of the spline at each knot\n    float KNOT_Y_LOW\[4];\n\n   for( int i = 0; i < 4; i++ )\n    \{\n      KNOT_Y_LOW\[i] = ( coefsLow\[i] + coefsLow\[i+1]) / 2.0f;\n    \};\n\n    float KNOT_Y_HIGH\[ 4];\n\n    for( int i = 0; i < 4; i++ )\n    \{\n      KNOT_Y_HIGH\[i] = ( coefsHigh\[i] + coefsHigh\[i+1]) / 2.0f;\n    \};\n\n    float logy = log10( max(y, 0.0000000001f));\n\n    float logx;\n\n    if( logy <= log10(minPt.y) )\n    \{\n        logx = log10(minPt.x);\n\n    \}\n    else if( (logy > log10(minPt.y)) && (logy <= log10(midPt.y)) )\n    \{\n        int j;\n        float3 cf = 0.0f;\n\n        if( logy > KNOT_Y_LOW\[0] && logy <= KNOT_Y_LOW\[1])\n        \{\n          cf.x = coefsLow\[0];\n          cf.y = coefsLow\[1];\n          cf.z = coefsLow\[2];\n          j = 0;\n        \}\n        else if( logy > KNOT_Y_LOW\[1] && logy <= KNOT_Y_LOW\[2])\n        \{\n          cf.x = coefsLow\[1];\n          cf.y = coefsLow\[2];\n          cf.z = coefsLow\[3];\n          j = 1;\n        \}\n        else if( logy > KNOT_Y_LOW\[2] && logy <= KNOT_Y_LOW\[3])\n        \{\n          cf.x = coefsLow\[2];\n          cf.y = coefsLow\[3];\n          cf.z = coefsLow\[4];\n          j = 2;\n        \} \n\n        float3 tmp = vector_dot( cf, M1 );\n\n        float a = tmp.x;\n        float b = tmp.y;\n        float c = tmp.z;\n        c = c - logy;\n\n        float d = sqrt( b * b - 4.0f * a * c);\n\n        float t = ( 2.0f * c) / ( -d - b);\n\n        logx = log10(minPt.x) + ( t + j) * KNOT_INC_LOW;\n\n    \}\n    else if( (logy > log10(midPt.y)) && (logy < log10(maxPt.y)) )\n    \{\n        int j;\n        float3 cf = 0.0f;\n\n        if( logy >= KNOT_Y_HIGH\[0] && logy <= KNOT_Y_HIGH\[1])\n        \{\n          cf.x = coefsHigh\[0];\n          cf.y = coefsHigh\[1];\n          cf.z = coefsHigh\[2];\n          j = 0;\n        \}\n        else if( logy > KNOT_Y_HIGH\[1] && logy <= KNOT_Y_HIGH\[2])\n        \{\n          cf.x = coefsHigh\[1];\n          cf.y = coefsHigh\[2];\n          cf.z = coefsHigh\[3];\n          j = 1;\n        \}\n        else if( logy > KNOT_Y_HIGH\[2] && logy <= KNOT_Y_HIGH\[3])\n        \{\n          cf.x = coefsHigh\[2];\n          cf.y = coefsHigh\[3];\n          cf.z = coefsHigh\[4];\n          j = 2;\n        \} \n\n        float3 tmp = vector_dot( cf, M1);\n\n        float a = tmp.x;\n        float b = tmp.y;\n        float c = tmp.z;\n        c = c - logy;\n\n        float d = sqrt( b * b - 4.0f * a * c);\n\n        float t = ( 2.0f * c) / ( -d - b);\n\n        logx = log10(midPt.x) + ( t + j) * KNOT_INC_HIGH;\n\n    \}\n    else\n    \{\n        logx = log10(maxPt.x);\n\n    \}\n\n    return pow(10.0f, logx);\n  \}\n\n\n  void init()\n  \{\n    paramMin = defaultMin;\n    paramMid = defaultMid;\n    paramMax = defaultMax;\n    expShift = log2(inv_ssts(lumMid, defaultMin, paramMid, defaultMax)) - log2(0.18f);\n    paramMin.x = pow(2.0f, (log(paramMin.x) / log(2.0f) - expShift));\n    paramMid.x = pow(2.0f, (log(0.18f     ) / log(2.0f) - expShift));\n    paramMax.x = pow(2.0f, (log(paramMax.x) / log(2.0f) - expShift));\n  \}\n\n\n  void process()\n  \{\n    SampleType(src) input = src();\n    float3 srcPixel(input.x, input.y, input.z);\n    float3 tsPixel = 0.0f;\n\n    if( inverse )\n    \{\n      tsPixel.x = inv_ssts(srcPixel.x, paramMin, paramMid, paramMax);\n      tsPixel.y = inv_ssts(srcPixel.y, paramMin, paramMid, paramMax);\n      tsPixel.z = inv_ssts(srcPixel.z, paramMin, paramMid, paramMax);\n    \}\n    else\n    \{\n      tsPixel.x = ssts(srcPixel.x, paramMin, paramMid, paramMax);\n      tsPixel.y = ssts(srcPixel.y, paramMin, paramMid, paramMax);\n      tsPixel.z = ssts(srcPixel.z, paramMin, paramMid, paramMax);\n    \}\n\n    dst() = float4(tsPixel.x, tsPixel.y, tsPixel.z, input.w);\n  \}\n\};\n"
  rebuild ""
  SSTSKernel_lumMid {{luminances.y}}
  SSTSKernel_defaultMin {{pow(2.,(log(MIN_PT.x)/log(2)))} {MIN_PT.y} {MIN_PT.z}}
  SSTSKernel_defaultMid {{pow(2.,(log(0.18)/log(2)))} {MID_PT.y} {MID_PT.z}}
  SSTSKernel_defaultMax {{pow(2.,(log(MAX_PT.x)/log(2)))} {MAX_PT.y} {MAX_PT.z}}
  SSTSKernel_coefsLow {{"(MIN_PT.z * (log10(MIN_PT.x)-0.5*knotIncLow)) + ( log10(MIN_PT.y) - MIN_PT.z * log10(MIN_PT.x))"} {"(MIN_PT.z * (log10(MIN_PT.x)+0.5*knotIncLow)) + ( log10(MIN_PT.y) - MIN_PT.z * log10(MIN_PT.x))"} {"log10(MIN_PT.y) + pctLow*(log10(MID_PT.y)-log10(MIN_PT.y))"} {"(MID_PT.z * (log10(MID_PT.x)-0.5*knotIncLow)) + ( log10(MID_PT.y) - MID_PT.z * log10(MID_PT.x))"} {"(MID_PT.z * (log10(MID_PT.x)+0.5*knotIncLow)) + ( log10(MID_PT.y) - MID_PT.z * log10(MID_PT.x))"} {SSTSKernel_coefsLow.4}}
  SSTSKernel_coefsHigh {{"(MID_PT.z * (log10(MID_PT.x)-0.5*knotIncHigh)) + ( log10(MID_PT.y) - MID_PT.z * log10(MID_PT.x))"} {"(MID_PT.z * (log10(MID_PT.x)+0.5*knotIncHigh)) + ( log10(MID_PT.y) - MID_PT.z * log10(MID_PT.x))"} {"log10(MID_PT.y) + pctHigh*(log10(MAX_PT.y)-log10(MID_PT.y))"} {"(MAX_PT.z * (log10(MAX_PT.x)-0.5*knotIncHigh)) + ( log10(MAX_PT.y) - MAX_PT.z * log10(MAX_PT.x))"} {"(MAX_PT.z * (log10(MAX_PT.x)+0.5*knotIncHigh)) + ( log10(MAX_PT.y) - MAX_PT.z * log10(MAX_PT.x))"} {SSTSKernel_coefsHigh.4}}
  SSTSKernel_M1 {
      {0.5 -1 0.5}
      {-1 1 0}
      {0.5 0.5 0}
    }
  SSTSKernel_inverse {{direction}}
  rebuild_finalise ""
  name SSTS_Blink3
  label inverse
  note_font "Bitstream Vera Sans"
  xpos -47
  ypos -186
  addUserKnob {20 User}
  addUserKnob {13 luminances}
  luminances {{parent.ssts_luminance.0} {parent.ssts_luminance.1} {parent.ssts_luminance.2}}
  addUserKnob {4 direction M {forward inverse}}
  direction inverse
  addUserKnob {20 SSTSParams}
  addUserKnob {13 MIN_PT}
  MIN_PT {{0.18*pow(2,minTable(log10(luminances.x)))} {luminances.x} 0}
  addUserKnob {13 MID_PT}
  MID_PT {0.18 4.8 1.55}
  addUserKnob {13 MAX_PT}
  MAX_PT {{0.18*pow(2,maxTable(log10(luminances.z)))} {luminances.z} 0}
  addUserKnob {7 knotIncLow}
  knotIncLow {{"(log10(MID_PT.x) - log10(MIN_PT.x)) / 3"}}
  addUserKnob {7 knotIncHigh}
  knotIncHigh {{"(log10(MAX_PT.x) - log10(MID_PT.x)) / 3"}}
  addUserKnob {7 pctLow}
  pctLow {{bendsLow(log(MIN_PT.x/0.18)/log(2))}}
  addUserKnob {7 pctHigh}
  pctHigh {{bendsHigh(log(MAX_PT.x/0.18)/log(2))}}
  addUserKnob {20 Tables}
  addUserKnob {7 minTable}
  minTable {{curve L l x-4 -15 x-1.69896996 -6.5}}
  addUserKnob {7 maxTable}
  maxTable {{curve L l x1.681241274 6.5 x4 18}}
  addUserKnob {7 bendsLow}
  bendsLow {{curve L l x-15 0.18 x-6.5 0.35}}
  addUserKnob {7 bendsHigh}
  bendsHigh {{curve l x6.5 0.89 x18 0.9}}
  addUserKnob {20 Constants}
  addUserKnob {7 MIN_STOP_SDR R -10 10}
  MIN_STOP_SDR -6.5
  addUserKnob {7 MAX_STOP_SDR R -10 10}
  MAX_STOP_SDR 6.5
  addUserKnob {7 MIN_STOP_RRT R -20 20}
  MIN_STOP_RRT -15
  addUserKnob {7 MAX_STOP_RRT R -20 20}
  MAX_STOP_RRT 18
  addUserKnob {7 MIN_LUM_SDR}
  MIN_LUM_SDR 0.02
  addUserKnob {7 MAX_LUM_SDR R 0 200}
  MAX_LUM_SDR 48
  addUserKnob {7 MIN_LUM_RRT}
  MIN_LUM_RRT 0.0001
  addUserKnob {7 MAX_LUM_RRT R 0 10000}
  MAX_LUM_RRT 10000
  addUserKnob {3 N_KNOTS_LOW}
  N_KNOTS_LOW 4
  addUserKnob {3 N_KNOTS_HIGH}
  N_KNOTS_HIGH 4
 }
 Multiply {
  channels rgb
  value {{parent.reference_luminance}}
  name Multiply15
  label "1/\[value parent.reference_luminance]\nLum to Exp\ninverse"
  note_font "Bitstream Vera Sans"
  xpos -47
  ypos -138
 }
 Multiply {
  channels rgb
  value 0.9722396415
  name Multiply14
  label "remove luminance shift\nfrom cone fundamentals matrix\ninverse"
  note_font "Bitstream Vera Sans"
  xpos -47
  ypos -78
 }
 Group {
  name st2048_5
  label "PQ (ZCAM) to Lum\ninverse"
  xpos -47
  ypos -18
  addUserKnob {20 User}
  addUserKnob {4 direction M {"Luminance (Cd/sqm) -> ST.2048" "ST.2048 -> Luminance (Cd/sqm)"}}
  addUserKnob {7 peakLuminance R 0 10000}
  peakLuminance 10000
  addUserKnob {26 ""}
  addUserKnob {26 m2_override_desc l "" +STARTLINE T "ZCAM uses a different exponent (rho) in its PQ function than ST.2084 (m2)"}
  addUserKnob {7 m2_override R 0 200}
  m2_override {{"1.7 * 2523 / pow(2,5)"}}
 }
  Input {
   inputs 0
   name Input1
   xpos 829
   ypos 200
  }
  Dot {
   name Dot17
   xpos 863
   ypos 240
  }
set Nee9dc350 [stack 0]
  Dot {
   name Dot27
   xpos 916
   ypos 240
  }
  Expression {
   temp_name0 V_pr
   temp_expr0 "pow(r, 1/m_2)"
   temp_name1 V_pg
   temp_expr1 "pow(g, 1/m_2)"
   temp_name2 V_pb
   temp_expr2 "pow(b, 1/m_2)"
   expr0 "pow((max(0.0, V_pr - c_1) / (c_2 - c_3 * V_pr)), 1/m_1)*L_p"
   expr1 "pow((max(0.0, V_pg - c_1) / (c_2 - c_3 * V_pg)), 1/m_1)*L_p"
   expr2 "pow((max(0.0, V_pb - c_1) / (c_2 - c_3 * V_pb)), 1/m_1)*L_p"
   channel3 none
   name from_st2048
   selected true
   xpos 882
   ypos 285
   addUserKnob {20 User}
   addUserKnob {7 m_1}
   m_1 {{"2610 / 4096 * (1 / 4)"}}
   addUserKnob {7 m_2}
   m_2 {{parent.m2_override}}
   addUserKnob {7 c_1}
   c_1 {{"3424 / 4096"}}
   addUserKnob {7 c_2}
   c_2 {{"2413 / 4096 * 32"}}
   addUserKnob {7 c_3}
   c_3 {{"2392 / 4096 * 32"}}
   addUserKnob {7 L_p R 0 10000}
   L_p {{parent.peakLuminance}}
  }
push $Nee9dc350
  Dot {
   name Dot26
   xpos 810
   ypos 240
  }
  Expression {
   temp_name0 Y_pr
   temp_expr0 "pow(r / L_p, m_1)"
   temp_name1 Y_pg
   temp_expr1 "pow(g / L_p, m_1)"
   temp_name2 Y_pb
   temp_expr2 "pow(b / L_p, m_1)"
   expr0 "pow((c_1 + c_2 * Y_pr) / (c_3 * Y_pr + 1), m_2)"
   expr1 "pow((c_1 + c_2 * Y_pg) / (c_3 * Y_pg + 1), m_2)"
   expr2 "pow((c_1 + c_2 * Y_pb) / (c_3 * Y_pb + 1), m_2)"
   channel3 none
   name to_st2084
   xpos 776
   ypos 286
   addUserKnob {20 User}
   addUserKnob {7 m_1}
   m_1 {{"2610 / 4096 * (1 / 4)"}}
   addUserKnob {7 m_2}
   m_2 {{parent.m2_override}}
   addUserKnob {7 c_1}
   c_1 {{"3424 / 4096"}}
   addUserKnob {7 c_2}
   c_2 {{"2413 / 4096 * 32"}}
   addUserKnob {7 c_3}
   c_3 {{"2392 / 4096 * 32"}}
   addUserKnob {7 L_p R 0 10000}
   L_p {{parent.peakLuminance}}
  }
  Switch {
   inputs 2
   which {{parent.direction}}
   name Switch2
   xpos 835
   ypos 347
  }
  Output {
   name Output1
   xpos 835
   ypos 447
  }
 end_group
push $Nffcf5260
 ShuffleCopy {
  inputs 2
  red red
  alpha alpha2
  name ShuffleCopy4
  note_font "Bitstream Vera Sans"
  xpos 120
  ypos -9
 }
 Dot {
  name Dot38
  note_font "Bitstream Vera Sans"
  xpos 154
  ypos 36
 }
set Nc4c36f60 [stack 0]
push $Nc4c36f60
 Dot {
  name Dot6
  note_font "Bitstream Vera Sans"
  xpos 517
  ypos 36
 }
 Dot {
  name Dot36
  note_font "Bitstream Vera Sans"
  xpos 517
  ypos -597
 }
 Dot {
  name Dot28
  note_font "Bitstream Vera Sans"
  xpos 627
  ypos -597
 }
set Ndedfa5b0 [stack 0]
 Group {
  name st2048_7
  label "PQ (ZCAM) to Lum"
  xpos 593
  ypos -489
  addUserKnob {20 User}
  addUserKnob {4 direction M {"Luminance (Cd/sqm) -> ST.2048" "ST.2048 -> Luminance (Cd/sqm)"}}
  direction "ST.2048 -> Luminance (Cd/sqm)"
  addUserKnob {7 peakLuminance R 0 10000}
  peakLuminance 10000
  addUserKnob {26 ""}
  addUserKnob {26 m2_override_desc l "" +STARTLINE T "ZCAM uses a different exponent (rho) in its PQ function than ST.2084 (m2)"}
  addUserKnob {7 m2_override R 0 200}
  m2_override {{"1.7 * 2523 / pow(2,5)"}}
 }
  Input {
   inputs 0
   name Input1
   xpos 829
   ypos 200
  }
  Dot {
   name Dot17
   xpos 863
   ypos 240
  }
set N7c87c550 [stack 0]
  Dot {
   name Dot27
   xpos 916
   ypos 240
  }
  Expression {
   temp_name0 V_pr
   temp_expr0 "pow(r, 1/m_2)"
   temp_name1 V_pg
   temp_expr1 "pow(g, 1/m_2)"
   temp_name2 V_pb
   temp_expr2 "pow(b, 1/m_2)"
   expr0 "pow((max(0.0, V_pr - c_1) / (c_2 - c_3 * V_pr)), 1/m_1)*L_p"
   expr1 "pow((max(0.0, V_pg - c_1) / (c_2 - c_3 * V_pg)), 1/m_1)*L_p"
   expr2 "pow((max(0.0, V_pb - c_1) / (c_2 - c_3 * V_pb)), 1/m_1)*L_p"
   channel3 none
   name from_st2048
   selected true
   xpos 882
   ypos 285
   addUserKnob {20 User}
   addUserKnob {7 m_1}
   m_1 {{"2610 / 4096 * (1 / 4)"}}
   addUserKnob {7 m_2}
   m_2 {{parent.m2_override}}
   addUserKnob {7 c_1}
   c_1 {{"3424 / 4096"}}
   addUserKnob {7 c_2}
   c_2 {{"2413 / 4096 * 32"}}
   addUserKnob {7 c_3}
   c_3 {{"2392 / 4096 * 32"}}
   addUserKnob {7 L_p R 0 10000}
   L_p {{parent.peakLuminance}}
  }
push $N7c87c550
  Dot {
   name Dot26
   xpos 810
   ypos 240
  }
  Expression {
   temp_name0 Y_pr
   temp_expr0 "pow(r / L_p, m_1)"
   temp_name1 Y_pg
   temp_expr1 "pow(g / L_p, m_1)"
   temp_name2 Y_pb
   temp_expr2 "pow(b / L_p, m_1)"
   expr0 "pow((c_1 + c_2 * Y_pr) / (c_3 * Y_pr + 1), m_2)"
   expr1 "pow((c_1 + c_2 * Y_pg) / (c_3 * Y_pg + 1), m_2)"
   expr2 "pow((c_1 + c_2 * Y_pb) / (c_3 * Y_pb + 1), m_2)"
   channel3 none
   name to_st2084
   xpos 776
   ypos 286
   addUserKnob {20 User}
   addUserKnob {7 m_1}
   m_1 {{"2610 / 4096 * (1 / 4)"}}
   addUserKnob {7 m_2}
   m_2 {{parent.m2_override}}
   addUserKnob {7 c_1}
   c_1 {{"3424 / 4096"}}
   addUserKnob {7 c_2}
   c_2 {{"2413 / 4096 * 32"}}
   addUserKnob {7 c_3}
   c_3 {{"2392 / 4096 * 32"}}
   addUserKnob {7 L_p R 0 10000}
   L_p {{parent.peakLuminance}}
  }
  Switch {
   inputs 2
   which {{parent.direction}}
   name Switch2
   xpos 835
   ypos 347
  }
  Output {
   name Output1
   xpos 835
   ypos 447
  }
 end_group
 Multiply {
  channels rgb
  value 1.028552621
  name Multiply18
  label "remove luminance shift\nfrom cone fundamentals matrix"
  note_font "Bitstream Vera Sans"
  xpos 593
  ypos -457
 }
 Multiply {
  channels rgb
  value {{1/parent.reference_luminance}}
  name Multiply19
  label "1/\[value parent.reference_luminance]\nLum to Exp"
  note_font "Bitstream Vera Sans"
  xpos 593
  ypos -409
 }
 BlinkScript {
  recompileCount 35
  ProgramGroup 1
  KernelDescription "2 \"SSTSKernel\" iterate pixelWise 3292521f65973146de9ba2803e15c81b8610684f8dcbef3a3fc1382de44823f8 2 \"src\" Read Point \"dst\" Write Point 8 \"lumMid\" Float 1 AAAAAA== \"defaultMin\" Float 3 AAAAAAAAAAAAAAAAAAAAAA== \"defaultMid\" Float 3 AAAAAAAAAAAAAAAAAAAAAA== \"defaultMax\" Float 3 AAAAAAAAAAAAAAAAAAAAAA== \"coefsLow\" Float 6 AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA= \"coefsHigh\" Float 6 AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA= \"M1\" Float 9 AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA \"inverse\" Int 1 AAAAAA== 8 \"lumMid\" 1 1 \"defaultMin\" 3 1 \"defaultMid\" 3 1 \"defaultMax\" 3 1 \"coefsLow\" 1 6 \"coefsHigh\" 1 6 \"M1\" 9 1 \"inverse\" 1 1 4 \"expShift\" Float 1 1 AAAAAA== \"paramMin\" Float 3 1 AAAAAAAAAAAAAAAAAAAAAA== \"paramMid\" Float 3 1 AAAAAAAAAAAAAAAAAAAAAA== \"paramMax\" Float 3 1 AAAAAAAAAAAAAAAAAAAAAA=="
  kernelSource "kernel SSTSKernel : ImageComputationKernel<ePixelWise>\n\{\n  Image<eRead, eAccessPoint, eEdgeClamped> src; // the input image\n  Image<eWrite> dst; // the output image\n\n  param:\n    float lumMid;\n    float3 defaultMin;\n    float3 defaultMid;\n    float3 defaultMax;\n    float coefsLow\[6];\n    float coefsHigh\[6];\n    float3x3 M1;\n    int inverse;\n\n  local:\n    float expShift;\n    float3 paramMin;\n    float3 paramMid;\n    float3 paramMax;\n\n  \n  void define()\n  \{\n\n  \}\n\n  float3 vector_dot( float3 v, float3x3 m)\n  \{\n    float3 r = 1.0f;\n    for(int c = 0; c<3; c++)\n    \{\n      r\[c] = m\[c]\[0]*v.x + m\[c]\[1]*v.y + m\[c]\[2]*v.z;\n    \}\n\n    return r;\n  \}\n\n\n  float dot( float3 a, float3 b)\n  \{\n    return (a.x*b.x) + (a.y*b.y) + (a.z*b.z);\n  \}\n\n  \n  float ssts(float x, float3 minPt, float3 midPt, float3 maxPt)\n  \{\n    float HALF_MIN = 0.0000000596046448;\n\n    // Check for negatives or zero before taking the log. If negative or zero,\n    // set to HALF_MIN.\n    float logx = log10( max(x, HALF_MIN )); \n\n    float logy;\n\n    if( logx <= log10(minPt.x) )\n    \{ \n        logy = logx * minPt.z + ( log10(minPt.y) - minPt.z * log10(minPt.x) );\n    \}\n    else if(( logx > log10(minPt.x) ) && ( logx < log10(midPt.x) ))\n    \{\n        float knot_coord = 3.0f * (logx-log10(minPt.x)) / (log10(midPt.x) - log10(minPt.x));\n        int j = knot_coord;\n        float t = knot_coord - float(j);\n        float3 cf(coefsLow\[j], coefsLow\[j + 1], coefsLow\[j + 2]);\n        float3 monomials( t * t, t, 1.0f );\n        logy = dot(monomials, vector_dot( cf, M1));\n    \}\n    else if(( logx >= log10(midPt.x) ) && ( logx < log10(maxPt.x) ))\n    \{\n        float knot_coord = 3.0f * (logx-log10(midPt.x)) / (log10(maxPt.x) - log10(midPt.x));\n        int j = knot_coord;\n        float t = knot_coord - float(j);\n        float3 cf(coefsHigh\[j], coefsHigh\[j + 1], coefsHigh\[j + 2]); \n        float3 monomials(t * t, t, 1.0f);\n        logy = dot(monomials, vector_dot( cf, M1));\n    \}\n    else\n    \{\n        logy = logx * maxPt.z + ( log10(maxPt.y) - maxPt.z * log10(maxPt.x) );\n    \}\n\n    return pow(10.0f,logy);\n  \}\n\n  \n  float inv_ssts(float y, float3 minPt, float3 midPt, float3 maxPt)\n  \{\n    float KNOT_INC_LOW  = (log10(midPt.x) - log10(minPt.x)) / 3.0f;\n    float KNOT_INC_HIGH = (log10(maxPt.x) - log10(midPt.x)) / 3.0f;\n\n    // KNOT_Y is luminance of the spline at each knot\n    float KNOT_Y_LOW\[4];\n\n   for( int i = 0; i < 4; i++ )\n    \{\n      KNOT_Y_LOW\[i] = ( coefsLow\[i] + coefsLow\[i+1]) / 2.0f;\n    \};\n\n    float KNOT_Y_HIGH\[ 4];\n\n    for( int i = 0; i < 4; i++ )\n    \{\n      KNOT_Y_HIGH\[i] = ( coefsHigh\[i] + coefsHigh\[i+1]) / 2.0f;\n    \};\n\n    float logy = log10( max(y, 0.0000000001f));\n\n    float logx;\n\n    if( logy <= log10(minPt.y) )\n    \{\n        logx = log10(minPt.x);\n\n    \}\n    else if( (logy > log10(minPt.y)) && (logy <= log10(midPt.y)) )\n    \{\n        int j;\n        float3 cf = 0.0f;\n\n        if( logy > KNOT_Y_LOW\[0] && logy <= KNOT_Y_LOW\[1])\n        \{\n          cf.x = coefsLow\[0];\n          cf.y = coefsLow\[1];\n          cf.z = coefsLow\[2];\n          j = 0;\n        \}\n        else if( logy > KNOT_Y_LOW\[1] && logy <= KNOT_Y_LOW\[2])\n        \{\n          cf.x = coefsLow\[1];\n          cf.y = coefsLow\[2];\n          cf.z = coefsLow\[3];\n          j = 1;\n        \}\n        else if( logy > KNOT_Y_LOW\[2] && logy <= KNOT_Y_LOW\[3])\n        \{\n          cf.x = coefsLow\[2];\n          cf.y = coefsLow\[3];\n          cf.z = coefsLow\[4];\n          j = 2;\n        \} \n\n        float3 tmp = vector_dot( cf, M1 );\n\n        float a = tmp.x;\n        float b = tmp.y;\n        float c = tmp.z;\n        c = c - logy;\n\n        float d = sqrt( b * b - 4.0f * a * c);\n\n        float t = ( 2.0f * c) / ( -d - b);\n\n        logx = log10(minPt.x) + ( t + j) * KNOT_INC_LOW;\n\n    \}\n    else if( (logy > log10(midPt.y)) && (logy < log10(maxPt.y)) )\n    \{\n        int j;\n        float3 cf = 0.0f;\n\n        if( logy >= KNOT_Y_HIGH\[0] && logy <= KNOT_Y_HIGH\[1])\n        \{\n          cf.x = coefsHigh\[0];\n          cf.y = coefsHigh\[1];\n          cf.z = coefsHigh\[2];\n          j = 0;\n        \}\n        else if( logy > KNOT_Y_HIGH\[1] && logy <= KNOT_Y_HIGH\[2])\n        \{\n          cf.x = coefsHigh\[1];\n          cf.y = coefsHigh\[2];\n          cf.z = coefsHigh\[3];\n          j = 1;\n        \}\n        else if( logy > KNOT_Y_HIGH\[2] && logy <= KNOT_Y_HIGH\[3])\n        \{\n          cf.x = coefsHigh\[2];\n          cf.y = coefsHigh\[3];\n          cf.z = coefsHigh\[4];\n          j = 2;\n        \} \n\n        float3 tmp = vector_dot( cf, M1);\n\n        float a = tmp.x;\n        float b = tmp.y;\n        float c = tmp.z;\n        c = c - logy;\n\n        float d = sqrt( b * b - 4.0f * a * c);\n\n        float t = ( 2.0f * c) / ( -d - b);\n\n        logx = log10(midPt.x) + ( t + j) * KNOT_INC_HIGH;\n\n    \}\n    else\n    \{\n        logx = log10(maxPt.x);\n\n    \}\n\n    return pow(10.0f, logx);\n  \}\n\n\n  void init()\n  \{\n    paramMin = defaultMin;\n    paramMid = defaultMid;\n    paramMax = defaultMax;\n    expShift = log2(inv_ssts(lumMid, defaultMin, paramMid, defaultMax)) - log2(0.18f);\n    paramMin.x = pow(2.0f, (log(paramMin.x) / log(2.0f) - expShift));\n    paramMid.x = pow(2.0f, (log(0.18f     ) / log(2.0f) - expShift));\n    paramMax.x = pow(2.0f, (log(paramMax.x) / log(2.0f) - expShift));\n  \}\n\n\n  void process()\n  \{\n    SampleType(src) input = src();\n    float3 srcPixel(input.x, input.y, input.z);\n    float3 tsPixel = 0.0f;\n\n    if( inverse )\n    \{\n      tsPixel.x = inv_ssts(srcPixel.x, paramMin, paramMid, paramMax);\n      tsPixel.y = inv_ssts(srcPixel.y, paramMin, paramMid, paramMax);\n      tsPixel.z = inv_ssts(srcPixel.z, paramMin, paramMid, paramMax);\n    \}\n    else\n    \{\n      tsPixel.x = ssts(srcPixel.x, paramMin, paramMid, paramMax);\n      tsPixel.y = ssts(srcPixel.y, paramMin, paramMid, paramMax);\n      tsPixel.z = ssts(srcPixel.z, paramMin, paramMid, paramMax);\n    \}\n\n    dst() = float4(tsPixel.x, tsPixel.y, tsPixel.z, input.w);\n  \}\n\};\n"
  rebuild ""
  SSTSKernel_lumMid {{luminances.y}}
  SSTSKernel_defaultMin {{pow(2.,(log(MIN_PT.x)/log(2)))} {MIN_PT.y} {MIN_PT.z}}
  SSTSKernel_defaultMid {{pow(2.,(log(0.18)/log(2)))} {MID_PT.y} {MID_PT.z}}
  SSTSKernel_defaultMax {{pow(2.,(log(MAX_PT.x)/log(2)))} {MAX_PT.y} {MAX_PT.z}}
  SSTSKernel_coefsLow {{"(MIN_PT.z * (log10(MIN_PT.x)-0.5*knotIncLow)) + ( log10(MIN_PT.y) - MIN_PT.z * log10(MIN_PT.x))"} {"(MIN_PT.z * (log10(MIN_PT.x)+0.5*knotIncLow)) + ( log10(MIN_PT.y) - MIN_PT.z * log10(MIN_PT.x))"} {"log10(MIN_PT.y) + pctLow*(log10(MID_PT.y)-log10(MIN_PT.y))"} {"(MID_PT.z * (log10(MID_PT.x)-0.5*knotIncLow)) + ( log10(MID_PT.y) - MID_PT.z * log10(MID_PT.x))"} {"(MID_PT.z * (log10(MID_PT.x)+0.5*knotIncLow)) + ( log10(MID_PT.y) - MID_PT.z * log10(MID_PT.x))"} {SSTSKernel_coefsLow.4}}
  SSTSKernel_coefsHigh {{"(MID_PT.z * (log10(MID_PT.x)-0.5*knotIncHigh)) + ( log10(MID_PT.y) - MID_PT.z * log10(MID_PT.x))"} {"(MID_PT.z * (log10(MID_PT.x)+0.5*knotIncHigh)) + ( log10(MID_PT.y) - MID_PT.z * log10(MID_PT.x))"} {"log10(MID_PT.y) + pctHigh*(log10(MAX_PT.y)-log10(MID_PT.y))"} {"(MAX_PT.z * (log10(MAX_PT.x)-0.5*knotIncHigh)) + ( log10(MAX_PT.y) - MAX_PT.z * log10(MAX_PT.x))"} {"(MAX_PT.z * (log10(MAX_PT.x)+0.5*knotIncHigh)) + ( log10(MAX_PT.y) - MAX_PT.z * log10(MAX_PT.x))"} {SSTSKernel_coefsHigh.4}}
  SSTSKernel_M1 {
      {0.5 -1 0.5}
      {-1 1 0}
      {0.5 0.5 0}
    }
  SSTSKernel_inverse {{direction}}
  rebuild_finalise ""
  name SSTS_Blink4
  note_font "Bitstream Vera Sans"
  xpos 593
  ypos -361
  addUserKnob {20 User}
  addUserKnob {13 luminances}
  luminances {{parent.ssts_luminance.0} {parent.ssts_luminance.1} {parent.ssts_luminance.2}}
  addUserKnob {4 direction M {forward inverse}}
  addUserKnob {20 SSTSParams}
  addUserKnob {13 MIN_PT}
  MIN_PT {{0.18*pow(2,minTable(log10(luminances.x)))} {luminances.x} 0}
  addUserKnob {13 MID_PT}
  MID_PT {0.18 4.8 1.55}
  addUserKnob {13 MAX_PT}
  MAX_PT {{0.18*pow(2,maxTable(log10(luminances.z)))} {luminances.z} 0}
  addUserKnob {7 knotIncLow}
  knotIncLow {{"(log10(MID_PT.x) - log10(MIN_PT.x)) / 3"}}
  addUserKnob {7 knotIncHigh}
  knotIncHigh {{"(log10(MAX_PT.x) - log10(MID_PT.x)) / 3"}}
  addUserKnob {7 pctLow}
  pctLow {{bendsLow(log(MIN_PT.x/0.18)/log(2))}}
  addUserKnob {7 pctHigh}
  pctHigh {{bendsHigh(log(MAX_PT.x/0.18)/log(2))}}
  addUserKnob {20 Tables}
  addUserKnob {7 minTable}
  minTable {{curve L l x-4 -15 x-1.69896996 -6.5}}
  addUserKnob {7 maxTable}
  maxTable {{curve L l x1.681241274 6.5 x4 18}}
  addUserKnob {7 bendsLow}
  bendsLow {{curve L l x-15 0.18 x-6.5 0.35}}
  addUserKnob {7 bendsHigh}
  bendsHigh {{curve l x6.5 0.89 x18 0.9}}
  addUserKnob {20 Constants}
  addUserKnob {7 MIN_STOP_SDR R -10 10}
  MIN_STOP_SDR -6.5
  addUserKnob {7 MAX_STOP_SDR R -10 10}
  MAX_STOP_SDR 6.5
  addUserKnob {7 MIN_STOP_RRT R -20 20}
  MIN_STOP_RRT -15
  addUserKnob {7 MAX_STOP_RRT R -20 20}
  MAX_STOP_RRT 18
  addUserKnob {7 MIN_LUM_SDR}
  MIN_LUM_SDR 0.02
  addUserKnob {7 MAX_LUM_SDR R 0 200}
  MAX_LUM_SDR 48
  addUserKnob {7 MIN_LUM_RRT}
  MIN_LUM_RRT 0.0001
  addUserKnob {7 MAX_LUM_RRT R 0 10000}
  MAX_LUM_RRT 10000
  addUserKnob {3 N_KNOTS_LOW}
  N_KNOTS_LOW 4
  addUserKnob {3 N_KNOTS_HIGH}
  N_KNOTS_HIGH 4
 }
set N73dff140 [stack 0]
 Add {
  channels rgb
  value {{-parent.ssts_luminance.1}}
  name Add2
  label "mids to zero"
  note_font "Bitstream Vera Sans"
  xpos 703
  ypos -361
 }
 Multiply {
  channels rgb
  value {{1/parent.ssts_luminance.1}}
  name Multiply20
  label "1/\[value parent.ssts_luminance.1]\nnormalise mids"
  note_font "Bitstream Vera Sans"
  xpos 703
  ypos -323
 }
 Clamp {
  channels rgb
  name Clamp3
  label 0-1
  note_font "Bitstream Vera Sans"
  xpos 703
  ypos -273
 }
 Dot {
  name Dot31
  note_font "Bitstream Vera Sans"
  xpos 737
  ypos -187
 }
push $Ndedfa5b0
 Dot {
  name Dot32
  note_font "Bitstream Vera Sans"
  xpos 846
  ypos -597
 }
push $N73dff140
 Multiply {
  channels rgb
  value 0.9722396415
  name Multiply21
  label "re-apply luminance shift\nfrom cone fundamentals matrix"
  note_font "Bitstream Vera Sans"
  xpos 593
  ypos -325
 }
 Group {
  name st2048_8
  label "Lum to PQ (ZCAM)"
  xpos 593
  ypos -277
  addUserKnob {20 User}
  addUserKnob {4 direction M {"Luminance (Cd/sqm) -> ST.2048" "ST.2048 -> Luminance (Cd/sqm)"}}
  addUserKnob {7 peakLuminance R 0 10000}
  peakLuminance 10000
  addUserKnob {26 ""}
  addUserKnob {26 m2_override_desc l "" +STARTLINE T "ZCAM uses a different exponent (rho) in its PQ function than ST.2084 (m2)"}
  addUserKnob {7 m2_override R 0 200}
  m2_override {{"1.7 * 2523 / pow(2,5)"}}
 }
  Input {
   inputs 0
   name Input1
   xpos 829
   ypos 200
  }
  Dot {
   name Dot17
   xpos 863
   ypos 240
  }
set N532667b0 [stack 0]
  Dot {
   name Dot27
   xpos 916
   ypos 240
  }
  Expression {
   temp_name0 V_pr
   temp_expr0 "pow(r, 1/m_2)"
   temp_name1 V_pg
   temp_expr1 "pow(g, 1/m_2)"
   temp_name2 V_pb
   temp_expr2 "pow(b, 1/m_2)"
   expr0 "pow((max(0.0, V_pr - c_1) / (c_2 - c_3 * V_pr)), 1/m_1)*L_p"
   expr1 "pow((max(0.0, V_pg - c_1) / (c_2 - c_3 * V_pg)), 1/m_1)*L_p"
   expr2 "pow((max(0.0, V_pb - c_1) / (c_2 - c_3 * V_pb)), 1/m_1)*L_p"
   channel3 none
   name from_st2048
   selected true
   xpos 882
   ypos 285
   addUserKnob {20 User}
   addUserKnob {7 m_1}
   m_1 {{"2610 / 4096 * (1 / 4)"}}
   addUserKnob {7 m_2}
   m_2 {{parent.m2_override}}
   addUserKnob {7 c_1}
   c_1 {{"3424 / 4096"}}
   addUserKnob {7 c_2}
   c_2 {{"2413 / 4096 * 32"}}
   addUserKnob {7 c_3}
   c_3 {{"2392 / 4096 * 32"}}
   addUserKnob {7 L_p R 0 10000}
   L_p {{parent.peakLuminance}}
  }
push $N532667b0
  Dot {
   name Dot26
   xpos 810
   ypos 240
  }
  Expression {
   temp_name0 Y_pr
   temp_expr0 "pow(r / L_p, m_1)"
   temp_name1 Y_pg
   temp_expr1 "pow(g / L_p, m_1)"
   temp_name2 Y_pb
   temp_expr2 "pow(b / L_p, m_1)"
   expr0 "pow((c_1 + c_2 * Y_pr) / (c_3 * Y_pr + 1), m_2)"
   expr1 "pow((c_1 + c_2 * Y_pg) / (c_3 * Y_pg + 1), m_2)"
   expr2 "pow((c_1 + c_2 * Y_pb) / (c_3 * Y_pb + 1), m_2)"
   channel3 none
   name to_st2084
   xpos 776
   ypos 286
   addUserKnob {20 User}
   addUserKnob {7 m_1}
   m_1 {{"2610 / 4096 * (1 / 4)"}}
   addUserKnob {7 m_2}
   m_2 {{parent.m2_override}}
   addUserKnob {7 c_1}
   c_1 {{"3424 / 4096"}}
   addUserKnob {7 c_2}
   c_2 {{"2413 / 4096 * 32"}}
   addUserKnob {7 c_3}
   c_3 {{"2392 / 4096 * 32"}}
   addUserKnob {7 L_p R 0 10000}
   L_p {{parent.peakLuminance}}
  }
  Switch {
   inputs 2
   which {{parent.direction}}
   name Switch2
   xpos 835
   ypos 347
  }
  Output {
   name Output1
   xpos 835
   ypos 447
  }
 end_group
 Dot {
  name Dot33
  note_font "Bitstream Vera Sans"
  xpos 627
  ypos -225
 }
 Merge2 {
  inputs 2
  operation minus
  name Merge9
  label "diff tonescale"
  note_font "Bitstream Vera Sans"
  xpos 812
  ypos -234
 }
 Merge2 {
  inputs 2
  operation multiply
  name Merge10
  label "remove toe"
  note_font "Bitstream Vera Sans"
  xpos 812
  ypos -196
 }
 Multiply {
  channels rgb
  value {{parent.desatHighlights}}
  name Multiply22
  label "desat scale"
  note_font "Bitstream Vera Sans"
  xpos 812
  ypos -158
 }
 Dot {
  name Dot34
  note_font "Bitstream Vera Sans"
  xpos 846
  ypos -122
 }
set N24e7f5e0 [stack 0]
 Multiply {
  channels rgb
  value 0.01
  name Multiply23
  label "highlight boost scale"
  note_font "Bitstream Vera Sans"
  xpos 697
  ypos -131
 }
 Shuffle {
  green black
  blue black
  alpha black
  name Shuffle4
  label "\[value in]-->\[value out]"
  note_font "Bitstream Vera Sans"
  xpos 697
  ypos -20
 }
 Dot {
  name Dot35
  note_font "Bitstream Vera Sans"
  xpos 731
  ypos 92
 }
 Merge2 {
  inputs 2
  operation minus
  name Merge11
  label "boost desat highlights\ninverse"
  note_font "Bitstream Vera Sans"
  xpos 120
  ypos 77
 }
push $N24e7f5e0
 Group {
  name SoftclipExpression1
  label "avoid divide by zero"
  note_font "Bitstream Vera Sans"
  xpos 812
  ypos -91
  addUserKnob {20 User}
  addUserKnob {18 clip_to}
  clip_to 1
  addUserKnob {6 clip_to_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
  addUserKnob {6 clip_to_panelDropped_1 l "panel dropped state" -STARTLINE +HIDDEN}
  addUserKnob {6 clip_to_panelDropped_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
  addUserKnob {18 threshold}
  threshold 0.8
  addUserKnob {6 threshold_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
  addUserKnob {6 threshold_panelDropped_1 l "panel dropped state" -STARTLINE +HIDDEN}
  addUserKnob {6 threshold_panelDropped_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
  addUserKnob {6 threshold_panelDropped_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
  addUserKnob {6 threshold_panelDropped_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
  addUserKnob {6 threshold_panelDropped_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
  addUserKnob {6 threshold_panelDropped_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
  addUserKnob {6 threshold_panelDropped_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
  addUserKnob {6 threshold_panelDropped_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
  addUserKnob {6 threshold_panelDropped_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
  addUserKnob {6 threshold_panelDropped_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
  addUserKnob {6 threshold_panelDropped_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
  addUserKnob {6 threshold_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
  addUserKnob {4 direction M {forward inverse}}
  addUserKnob {7 mix}
  mix 1
 }
  Input {
   inputs 0
   name Input1
   xpos -284
   ypos 135
  }
  Multiply {
   value {{1/parent.clip_to.r} {1/parent.clip_to.g} {1/parent.clip_to.b} 1}
   name Multiply1
   note_font "Bitstream Vera Sans"
   xpos -284
   ypos 159
  }
set Nb0cda040 [stack 0]
  Expression {
   temp_name0 one_minus_e
   temp_expr0 "1 - pow(10,-15)"
   temp_name1 maxr
   temp_expr1 "(pow(threshold.r, 2) - 2 * threshold.r * one_minus_e + one_minus_e ) / ( 1 - one_minus_e )"
   temp_name2 maxg
   temp_expr2 "(pow(threshold.g, 2) - 2 * threshold.g * one_minus_e + one_minus_e ) / ( 1 - one_minus_e )"
   temp_name3 maxb
   temp_expr3 "(pow(threshold.b, 2) - 2 * threshold.b * one_minus_e + one_minus_e ) / ( 1 - one_minus_e )"
   expr0 " threshold.r < 1 ? r >= 1 ? maxr : r > threshold.r ? (pow(threshold.r, 2) - 2 * threshold.r * r + r ) / ( 1 - r ) : r : r"
   expr1 " threshold.g < 1 ? g >= 1 ? maxg : g > threshold.g ? (pow(threshold.g, 2) - 2 * threshold.g * g + g ) / ( 1 - g ) : g : g"
   expr2 " threshold.b < 1 ? b >= 1 ? maxb : b > threshold.b ? (pow(threshold.b, 2) - 2 * threshold.b * b + b ) / ( 1 - b ) : b : b"
   expr3 a
   mix {{parent.mix}}
   name Expression2
   label inverse
   xpos -222
   ypos 257
   addUserKnob {20 User}
   addUserKnob {18 threshold}
   threshold {{parent.threshold.r} {parent.threshold.g} {parent.threshold.b}}
   addUserKnob {6 threshold_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
   addUserKnob {6 threshold_panelDropped_1 l "panel dropped state" -STARTLINE +HIDDEN}
   addUserKnob {6 threshold_panelDropped_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
   addUserKnob {6 threshold_panelDropped_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
   addUserKnob {6 threshold_panelDropped_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
   addUserKnob {6 threshold_panelDropped_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
   addUserKnob {6 threshold_panelDropped_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
   addUserKnob {6 threshold_panelDropped_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
   addUserKnob {6 threshold_panelDropped_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
   addUserKnob {6 threshold_panelDropped_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
   addUserKnob {6 threshold_panelDropped_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
   addUserKnob {6 threshold_panelDropped_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
   addUserKnob {6 threshold_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
  }
push $Nb0cda040
  Expression {
   expr0 "threshold.r < 1 ? r > threshold.r ? ( -1 / (( r - threshold.r ) / ( 1 - threshold.r ) +1 ) +1 ) * ( 1 - threshold.r ) + threshold.r : r : r"
   expr1 "threshold.g < 1 ? g > threshold.g ? ( -1 / (( g - threshold.g ) / ( 1 - threshold.g ) +1 ) +1 ) * ( 1 - threshold.g ) + threshold.g : g : g"
   expr2 "threshold.b < 1 ? b > threshold.b ? ( -1 / (( b - threshold.b ) / ( 1 - threshold.b ) +1 ) +1 ) * ( 1 - threshold.b ) + threshold.b : b : b"
   expr3 a
   mix {{parent.mix}}
   name Expression1
   label forward
   xpos -349
   ypos 258
   addUserKnob {20 User}
   addUserKnob {18 threshold_1 l threshold}
   threshold_1 {{parent.threshold.r} {parent.threshold.g} {parent.threshold.b}}
   addUserKnob {6 threshold_1_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
   addUserKnob {6 threshold_1_panelDropped_1 l "panel dropped state" -STARTLINE +HIDDEN}
   addUserKnob {6 threshold_1_panelDropped_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
   addUserKnob {6 threshold_1_panelDropped_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
   addUserKnob {6 threshold_1_panelDropped_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
   addUserKnob {6 threshold_1_panelDropped_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
   addUserKnob {6 threshold_1_panelDropped_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
   addUserKnob {6 threshold_1_panelDropped_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
   addUserKnob {6 threshold_1_panelDropped_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
   addUserKnob {6 threshold_1_panelDropped_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
   addUserKnob {6 threshold_1_panelDropped_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
   addUserKnob {6 threshold_1_panelDropped_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
   addUserKnob {6 threshold_1_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
  }
  Switch {
   inputs 2
   which {{parent.direction}}
   name Switch2
   note_font "Bitstream Vera Sans"
   xpos -287
   ypos 356
  }
  Multiply {
   value {{parent.clip_to.r} {parent.clip_to.g} {parent.clip_to.b} 1}
   name Multiply2
   note_font "Bitstream Vera Sans"
   xpos -287
   ypos 380
  }
  Output {
   name Output1
   xpos -287
   ypos 463
  }
 end_group
 Invert {
  channels rgb
  name Invert2
  note_font "Bitstream Vera Sans"
  xpos 812
  ypos -50
 }
 Shuffle {
  red white
  green red
  blue white
  alpha white
  name Shuffle1
  label "\[value in]-->\[value out]"
  note_font "Bitstream Vera Sans"
  xpos 812
  ypos -26
 }
 Dot {
  name Dot39
  note_font "Bitstream Vera Sans"
  xpos 846
  ypos 166
 }
 Merge2 {
  inputs 2
  operation divide
  name Merge12
  label "highlight de-sat\ninverse"
  note_font "Bitstream Vera Sans"
  xpos 120
  ypos 151
 }
 Group {
  name ZCAM_IzMh_Blink2
  label "XYZ to IzMh\ninverse"
  note_font "Bitstream Vera Sans"
  xpos 120
  ypos 325
  addUserKnob {20 User}
  addUserKnob {41 referenceWhite T RefWhite.illuminant_in}
  addUserKnob {7 referenceLuminance -STARTLINE R 0 1000}
  referenceLuminance {{parent.reference_luminance}}
  addUserKnob {4 viewingConditions M {dark dim average}}
  addUserKnob {7 backgroundLuminance -STARTLINE R 0 100}
  backgroundLuminance {{parent.background_luminance}}
  addUserKnob {6 discountIlluminant +STARTLINE}
  addUserKnob {6 invert +STARTLINE}
  invert true
 }
  BackdropNode {
   inputs 0
   name BackdropNode1
   label "Helper Nodes"
   note_font "Bitstream Vera Sans"
   note_font_size 20
   xpos 991
   ypos 100
   bdwidth 146
   bdheight 250
  }
  Input {
   inputs 0
   name Input1
   xpos 828
   ypos 71
  }
  Dot {
   name Dot1
   note_font "Bitstream Vera Sans"
   xpos 862
   ypos 153
  }
set Na2f9b00 [stack 0]
  Shuffle {
   red white
   green white
   blue white
   alpha white
   name Shuffle2
   label "\[value in]-->\[value out]"
   note_font "Bitstream Vera Sans"
   xpos 1015
   ypos 144
  }
set Nade49820 [stack 0]
  Colorspace {
   colorspace_out CIE-XYZ
   name D65White
   note_font "Bitstream Vera Sans"
   xpos 1015
   ypos 243
   addUserKnob {20 User}
   addUserKnob {13 value}
   value {{colormatrix.0+colormatrix.1+colormatrix.2} {colormatrix.3+colormatrix.4+colormatrix.5} {colormatrix.6+colormatrix.7+colormatrix.8}}
  }
push $Nade49820
  Colorspace {
   illuminant_in {{parent.parent.illuminant_in}}
   colorspace_out CIE-XYZ
   name RefWhite
   note_font "Bitstream Vera Sans"
   xpos 1015
   ypos 216
   addUserKnob {20 User}
   addUserKnob {13 value}
   value {{"\[python nuke.thisNode().knob('colormatrix').getValue(0)\\ +\\ nuke.thisNode().knob('colormatrix').getValue(1)\\ +\\ nuke.thisNode().knob('colormatrix').getValue(2)]"} {"\[python nuke.thisNode().knob('colormatrix').getValue(3) + nuke.thisNode().knob('colormatrix').getValue(4) + nuke.thisNode().knob('colormatrix').getValue(5)]"} {"\[python nuke.thisNode().knob('colormatrix').getValue(6) + nuke.thisNode().knob('colormatrix').getValue(7) + nuke.thisNode().knob('colormatrix').getValue(8)]"}}
  }
push $Na2f9b00
  BlinkScript {
   inputs 3
   recompileCount 69
   ProgramGroup 1
   KernelDescription "2 \"ZCAM_JMh_Kernel\" iterate pixelWise 7a6b681048dc899573cfa509e7d53e05469125c187c95579679329797bfbd64a 4 \"src\" Read Point \"refWhite\" Read Point \"d65White\" Read Point \"dst\" Write Point 11 \"direction\" Int 1 AAAAAA== \"referenceLuminance\" Float 1 AAAAAA== \"F\" Float 1 AAAAAA== \"F_s\" Float 1 AAAAAA== \"L_A\" Float 1 AAAAAA== \"F_b\" Float 1 AAAAAA== \"F_L\" Float 1 AAAAAA== \"adaptDegree\" Float 1 AAAAAA== \"CAT02_XYZ_to_LMS\" Float 9 AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA \"ZCAM_XYZ_to_LMS\" Float 9 AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA \"ZCAM_LMS_to_Izazbz\" Float 9 AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA 11 \"direction\" 1 1 \"referenceLuminance\" 1 1 \"F\" 1 1 \"F_s\" 1 1 \"L_A\" 1 1 \"F_b\" 1 1 \"F_L\" 1 1 \"adaptDegree\" 1 1 \"CAT02_XYZ_to_LMS\" 9 1 \"ZCAM_XYZ_to_LMS\" 9 1 \"ZCAM_LMS_to_Izazbz\" 9 1 7 \"cb\" Float 1 1 AAAAAA== \"cg\" Float 1 1 AAAAAA== \"c1\" Float 1 1 AAAAAA== \"c2\" Float 1 1 AAAAAA== \"c3\" Float 1 1 AAAAAA== \"eta\" Float 1 1 AAAAAA== \"rho\" Float 1 1 AAAAAA=="
   kernelSource "\nkernel ZCAM_JMh_Kernel : ImageComputationKernel<ePixelWise>\n\{\n  Image<eRead, eAccessPoint, eEdgeClamped> src; // the input image\n  Image<eRead, eAccessPoint, eEdgeClamped> refWhite; // reference white image\n  Image<eRead, eAccessPoint, eEdgeClamped> d65White; // D65 white image\n  Image<eWrite> dst; // the output image\n\n  param:\n    int direction;\n    float referenceLuminance;\n    float F;\n    float F_s;\n    float L_A;\n    float F_b;\n    float F_L;\n    float adaptDegree;\n    float3x3 CAT02_XYZ_to_LMS;\n    float3x3 ZCAM_XYZ_to_LMS;\n    float3x3 ZCAM_LMS_to_Izazbz;\n\n  local:\n    float cb;\n    float cg;\n    float c1;\n    float c2;\n    float c3;\n    float eta;\n    float rho;\n\n\n  void define()\n  \{\n\n  \}\n\n\n  void init()\n  \{\n    cb  = 1.15f;\n    cg  = 0.66f;\n    c1  = 3424.0f / pow(2.0f,12.0f);\n    c2  = 2413.0f / pow(2.0f, 7.0f);\n    c3  = 2392.0f / pow(2.0f, 7.0f);\n    eta = 2610.0f / pow(2.0f,14.0f);\n    rho = 1.7f * 2523.0f / pow(2.0f,5.0f);\n  \}\n\n\n  float3 vector_dot( float3x3 m, float3 v)\n  \{\n    float3 r = 1.0f;\n    for(int c = 0; c<3; c++)\n    \{\n      r\[c] = m\[c]\[0]*v.x + m\[c]\[1]*v.y + m\[c]\[2]*v.z;\n    \}\n\n    return r;\n  \}\n\n\n  float3 CAT_Zhai2018( float3 XYZ_b, float3 XYZ_wb, float3 XYZ_wd, float D_b, float D_d, float3x3 M)\n  \{\n    float3 XYZ_wo = 100.0f;\n    float3 RGB_b = vector_dot(M, XYZ_b);\n    float3 RGB_wb = vector_dot(M, XYZ_wb);\n    float3 RGB_wd = vector_dot(M, XYZ_wd);\n    float3 RGB_wo = vector_dot(M, XYZ_wo);\n    \n    float3 D_RGB_b = D_b * (XYZ_wb.y / XYZ_wo.y) * (RGB_wo / RGB_wb) + 1 - D_b;\n    float3 D_RGB_d = D_d * (XYZ_wd.y / XYZ_wo.y) * (RGB_wo / RGB_wd) + 1 - D_d;\n    float3 D_RGB = D_RGB_b / D_RGB_d;\n    \n    float3 RGB_d = D_RGB * RGB_b;\n    float3 XYZ_d = vector_dot(M.invert(), RGB_d);\n    \n    return XYZ_d;\n  \}\n\n\n  float3 XYZ_to_Izazbz( float3 XYZD65 )\n  \{\n    float3 XYZpD65 = XYZD65;\n    XYZpD65.x = cb * XYZD65.x - (cb - 1.0f) * XYZD65.z;\n    XYZpD65.y = cg * XYZD65.y - (cg - 1.0f) * XYZD65.x;\n    float3 LMS = vector_dot(ZCAM_XYZ_to_LMS, XYZpD65);\n    float3 LMSp = 0.0f;\n    LMSp.x = pow( ( c1 + c2 * pow((LMS.x/10000.0f),eta) ) / ( 1.0f + c3 * pow((LMS.x/10000.0f),eta) ), rho);\n    LMSp.y = pow( ( c1 + c2 * pow((LMS.y/10000.0f),eta) ) / ( 1.0f + c3 * pow((LMS.y/10000.0f),eta) ), rho);\n    LMSp.z = pow( ( c1 + c2 * pow((LMS.z/10000.0f),eta) ) / ( 1.0f + c3 * pow((LMS.z/10000.0f),eta) ), rho);\n    float3 Izazbz = vector_dot(ZCAM_LMS_to_Izazbz, LMSp);\n    return Izazbz;\n  \}\n\n\n  float degrees( float radians )\n  \{\n    return radians * 180.0f / PI;\n  \}\n\n\n  float radians( float degrees )\n  \{\n    return degrees / 180.0f * PI;\n  \}\n\n\n  float3 Izazbz_to_IzMh( float3 Izazbz, float refWhiteIz )\n  \{\n    float3 IzMh = 0.0f;\n\n    IzMh.z = fmod(degrees(atan2(Izazbz.z,Izazbz.y))+360.0f,360.0f);\n    float ez = 1.015f + cos(radians(89.038f+IzMh.z));\n    IzMh.x = Izazbz.x;\n    IzMh.y = 100.0f * pow((pow(Izazbz.y, 2.0f) + pow(Izazbz.z, 2.0f)), 0.37f) * ((pow(ez, 0.068f) * pow(F_L, 0.2f)) / (pow(F_b, 0.1f) * pow(refWhiteIz, 0.78f)));\n\n    return IzMh;\n  \}\n\n\n  float3 IzMh_to_Izazbz( float3 IzMh, float refWhiteIz)\n  \{\n    float ez = 1.015f + cos(radians(89.038f+IzMh.z));\n    float hzr = radians(IzMh.z);\n    float Czp = pow((IzMh.y * pow(refWhiteIz, 0.78f) * pow(F_b, 0.1f)) / (100.0f * pow(ez, 0.068f) * pow(F_L, 0.2f)), 50.0f / 37.0f);\n\n    return float3( IzMh.x, Czp * cos(hzr), Czp * sin(hzr));\n  \}\n\n\n  float3 Izazbz_to_XYZ( float3 Izazbz )\n  \{\n    float3 LMSp = vector_dot(ZCAM_LMS_to_Izazbz.invert(), Izazbz);\n    float3 LMS = 0.0f;\n    LMS.x = 10000.0f*pow((c1-pow(LMSp.x,1.0f/rho)) / (c3*pow(LMSp.x,1.0f/rho)-c2),1.0f/eta);\n    LMS.y = 10000.0f*pow((c1-pow(LMSp.y,1.0f/rho)) / (c3*pow(LMSp.y,1.0f/rho)-c2),1.0f/eta);\n    LMS.z = 10000.0f*pow((c1-pow(LMSp.z,1.0f/rho)) / (c3*pow(LMSp.z,1.0f/rho)-c2),1.0f/eta);\n    float3 XYZpD65 = vector_dot(ZCAM_XYZ_to_LMS.invert(), LMS);\n    float3 XYZD65 = XYZpD65;\n    XYZD65.x = (XYZpD65.x+(cb-1.0f)*XYZpD65.z)/cb;\n    XYZD65.y = (XYZpD65.y+(cg-1.0f)*XYZD65.x)/cg;\n    return XYZD65;\n  \}\n\n\n  float3 XYZ_to_ZCAM_IzMh( float3 XYZ, float3 refWhite, float3 d65White )\n  \{\n    float3 refWhiteIzazbz = XYZ_to_Izazbz(refWhite*referenceLuminance/refWhite.y);\n    return Izazbz_to_IzMh(XYZ_to_Izazbz(CAT_Zhai2018(XYZ, refWhite, d65White, adaptDegree, adaptDegree, CAT02_XYZ_to_LMS)), refWhiteIzazbz.x);\n  \}\n\n\n  float3 ZCAM_IzMh_to_XYZ( float3 JMh, float3 refWhite, float3 d65White )\n  \{\n    float3 refWhiteIzazbz = XYZ_to_Izazbz(refWhite*referenceLuminance/refWhite.y);\n    return CAT_Zhai2018(Izazbz_to_XYZ(IzMh_to_Izazbz(JMh, refWhiteIzazbz.x)), d65White, refWhite, adaptDegree, adaptDegree, CAT02_XYZ_to_LMS);\n  \}\n\n\n  void process()\n  \{\n    SampleType(src) input = src();\n    SampleType(refWhite) inputRefWhite = refWhite();\n    SampleType(d65White) inputD65White = d65White();\n\n    float3 output = 0.0f;\n\n    if( direction == 0 )\n    \{\n      output = XYZ_to_ZCAM_IzMh(float3(input.x, input.y, input.z), float3(inputRefWhite.x, inputRefWhite.y, inputRefWhite.z), float3(inputD65White.x, inputD65White.y, inputD65White.z));\n    \}\n    else\n    \{\n       output = ZCAM_IzMh_to_XYZ(float3(input.x, input.y, input.z), float3(inputRefWhite.x, inputRefWhite.y, inputRefWhite.z), float3(inputD65White.x, inputD65White.y, inputD65White.z));\n    \}\n\n    dst() = float4(output.x, output.y, output.z, input.w);\n  \}\n\};\n"
   rebuild ""
   ZCAM_JMh_Kernel_direction {{parent.invert}}
   ZCAM_JMh_Kernel_referenceLuminance {{parent.referenceLuminance}}
   ZCAM_JMh_Kernel_F {{"\[python (0.8, 0.9, 1.0)\\\[\[numvalue viewingConditions]\\]]"}}
   ZCAM_JMh_Kernel_F_s {{"\[python (0.525, 0.59, 0.69)\\\[\[numvalue viewingConditions]\\]]"}}
   ZCAM_JMh_Kernel_L_A {{"referenceLuminance * backgroundLuminance / 100"}}
   ZCAM_JMh_Kernel_F_b {{sqrt(backgroundLuminance/referenceLuminance)}}
   ZCAM_JMh_Kernel_F_L {{"0.171*pow(ZCAM_JMh_Kernel_L_A, 1/3) * (1-exp(-48/9*ZCAM_JMh_Kernel_L_A))"}}
   ZCAM_JMh_Kernel_adaptDegree {{"parent.discountIlluminant ? 1 : ZCAM_JMh_Kernel_F * (1 - (1 / 3.6) * exp((-ZCAM_JMh_Kernel_L_A - 42) / 92))"}}
   ZCAM_JMh_Kernel_CAT02_XYZ_to_LMS {
       {0.7328 0.4296 -0.1624}
       {-0.7036 1.6975 0.0061}
       {0.003 0.0136 0.9834}
     }
   ZCAM_JMh_Kernel_ZCAM_XYZ_to_LMS {
       {0.41478972 0.579999 0.014648}
       {-0.20151 1.120649 0.0531008}
       {-0.0166008 0.2648 0.6684799}
     }
   ZCAM_JMh_Kernel_ZCAM_LMS_to_Izazbz {
       {0 {1-epsilon} 0}
       {3.524 -4.066708 0.542708}
       {0.199076 1.096799 -1.295875}
     }
   rebuild_finalise ""
   name BlinkScript1
   note_font "Bitstream Vera Sans"
   xpos 828
   ypos 221
   addUserKnob {20 User}
   addUserKnob {7 epsilon}
   epsilon 3.703522621e-11
  }
  Output {
   name Output1
   xpos 828
   ypos 335
  }
 end_group
 Multiply {
  channels rgb
  value {{1/parent.reference_luminance}}
  name Multiply17
  label "x\[value parent.reference_luminance]\nRel. Exp. to Cd/sqm\ninverse"
  xpos 120
  ypos 398
  disable {{"Colorspace4.colorspace_out == 31"}}
 }
 Colorspace {
  colorspace_in CIE-XYZ
  colorspace_out {{Colorspace1.colorspace_in}}
  illuminant_out {{Colorspace1.illuminant_in}}
  primary_out {{Colorspace1.primary_in}}
  name Colorspace4
  label "Input -> XYZ"
  xpos 120
  ypos 450
 }
 Dot {
  name Dot30
  note_font "Bitstream Vera Sans"
  xpos 154
  ypos 549
 }
 Dot {
  name Dot29
  note_font "Bitstream Vera Sans"
  xpos -461
  ypos 549
 }
push $Nda68db50
 Dot {
  name Dot18
  note_font "Bitstream Vera Sans"
  xpos -659
  ypos 109
 }
push $N7c8ae3d0
 Dot {
  name Dot16
  note_font "Bitstream Vera Sans"
  xpos -1114
  ypos -1035
 }
 Clamp {
  channels rgb
  minimum -65504
  minimum_enable false
  maximum 65504
  name Clamp1
  label "Clamp inf to\n+/-half max"
  note_font "Bitstream Vera Sans"
  xpos -1148
  ypos -909
 }
 Colorspace {
  illuminant_in ACES
  primary_in ACES
  colorspace_out CIE-XYZ
  name Colorspace1
  label "Input -> XYZ"
  xpos -1148
  ypos -859
 }
 Multiply {
  channels rgb
  value {{parent.reference_luminance}}
  name Multiply1
  label "x\[value parent.reference_luminance]\nRel. Exp. to Cd/sqm"
  xpos -1148
  ypos -818
  disable {{"Colorspace1.colorspace_in == 31"}}
 }
 Group {
  name ZCAM_IzMh_Blink1
  label "XYZ to IzMh"
  note_font "Bitstream Vera Sans"
  xpos -1148
  ypos -768
  addUserKnob {20 User}
  addUserKnob {41 referenceWhite T RefWhite.illuminant_in}
  addUserKnob {7 referenceLuminance -STARTLINE R 0 1000}
  referenceLuminance {{parent.reference_luminance}}
  addUserKnob {4 viewingConditions M {dark dim average}}
  addUserKnob {7 backgroundLuminance -STARTLINE R 0 100}
  backgroundLuminance {{parent.background_luminance}}
  addUserKnob {6 discountIlluminant +STARTLINE}
  addUserKnob {6 invert +STARTLINE}
 }
  BackdropNode {
   inputs 0
   name BackdropNode1
   label "Helper Nodes"
   note_font "Bitstream Vera Sans"
   note_font_size 20
   xpos 991
   ypos 100
   bdwidth 146
   bdheight 250
  }
  Input {
   inputs 0
   name Input1
   xpos 828
   ypos 71
  }
  Dot {
   name Dot1
   note_font "Bitstream Vera Sans"
   xpos 862
   ypos 153
  }
set N435f26f0 [stack 0]
  Shuffle {
   red white
   green white
   blue white
   alpha white
   name Shuffle2
   label "\[value in]-->\[value out]"
   note_font "Bitstream Vera Sans"
   selected true
   xpos 1015
   ypos 144
  }
set Ndaf9c640 [stack 0]
  Colorspace {
   colorspace_out CIE-XYZ
   name D65White
   note_font "Bitstream Vera Sans"
   xpos 1015
   ypos 243
   addUserKnob {20 User}
   addUserKnob {13 value}
   value {{colormatrix.0+colormatrix.1+colormatrix.2} {colormatrix.3+colormatrix.4+colormatrix.5} {colormatrix.6+colormatrix.7+colormatrix.8}}
  }
push $Ndaf9c640
  Colorspace {
   illuminant_in {{parent.parent.illuminant_in}}
   colorspace_out CIE-XYZ
   name RefWhite
   note_font "Bitstream Vera Sans"
   xpos 1015
   ypos 216
   addUserKnob {20 User}
   addUserKnob {13 value}
   value {{"\[python nuke.thisNode().knob('colormatrix').getValue(0)\\ +\\ nuke.thisNode().knob('colormatrix').getValue(1)\\ +\\ nuke.thisNode().knob('colormatrix').getValue(2)]"} {"\[python nuke.thisNode().knob('colormatrix').getValue(3) + nuke.thisNode().knob('colormatrix').getValue(4) + nuke.thisNode().knob('colormatrix').getValue(5)]"} {"\[python nuke.thisNode().knob('colormatrix').getValue(6) + nuke.thisNode().knob('colormatrix').getValue(7) + nuke.thisNode().knob('colormatrix').getValue(8)]"}}
  }
push $N435f26f0
  BlinkScript {
   inputs 3
   recompileCount 69
   ProgramGroup 1
   KernelDescription "2 \"ZCAM_JMh_Kernel\" iterate pixelWise 7a6b681048dc899573cfa509e7d53e05469125c187c95579679329797bfbd64a 4 \"src\" Read Point \"refWhite\" Read Point \"d65White\" Read Point \"dst\" Write Point 11 \"direction\" Int 1 AAAAAA== \"referenceLuminance\" Float 1 AAAAAA== \"F\" Float 1 AAAAAA== \"F_s\" Float 1 AAAAAA== \"L_A\" Float 1 AAAAAA== \"F_b\" Float 1 AAAAAA== \"F_L\" Float 1 AAAAAA== \"adaptDegree\" Float 1 AAAAAA== \"CAT02_XYZ_to_LMS\" Float 9 AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA \"ZCAM_XYZ_to_LMS\" Float 9 AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA \"ZCAM_LMS_to_Izazbz\" Float 9 AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA 11 \"direction\" 1 1 \"referenceLuminance\" 1 1 \"F\" 1 1 \"F_s\" 1 1 \"L_A\" 1 1 \"F_b\" 1 1 \"F_L\" 1 1 \"adaptDegree\" 1 1 \"CAT02_XYZ_to_LMS\" 9 1 \"ZCAM_XYZ_to_LMS\" 9 1 \"ZCAM_LMS_to_Izazbz\" 9 1 7 \"cb\" Float 1 1 AAAAAA== \"cg\" Float 1 1 AAAAAA== \"c1\" Float 1 1 AAAAAA== \"c2\" Float 1 1 AAAAAA== \"c3\" Float 1 1 AAAAAA== \"eta\" Float 1 1 AAAAAA== \"rho\" Float 1 1 AAAAAA=="
   kernelSource "\nkernel ZCAM_JMh_Kernel : ImageComputationKernel<ePixelWise>\n\{\n  Image<eRead, eAccessPoint, eEdgeClamped> src; // the input image\n  Image<eRead, eAccessPoint, eEdgeClamped> refWhite; // reference white image\n  Image<eRead, eAccessPoint, eEdgeClamped> d65White; // D65 white image\n  Image<eWrite> dst; // the output image\n\n  param:\n    int direction;\n    float referenceLuminance;\n    float F;\n    float F_s;\n    float L_A;\n    float F_b;\n    float F_L;\n    float adaptDegree;\n    float3x3 CAT02_XYZ_to_LMS;\n    float3x3 ZCAM_XYZ_to_LMS;\n    float3x3 ZCAM_LMS_to_Izazbz;\n\n  local:\n    float cb;\n    float cg;\n    float c1;\n    float c2;\n    float c3;\n    float eta;\n    float rho;\n\n\n  void define()\n  \{\n\n  \}\n\n\n  void init()\n  \{\n    cb  = 1.15f;\n    cg  = 0.66f;\n    c1  = 3424.0f / pow(2.0f,12.0f);\n    c2  = 2413.0f / pow(2.0f, 7.0f);\n    c3  = 2392.0f / pow(2.0f, 7.0f);\n    eta = 2610.0f / pow(2.0f,14.0f);\n    rho = 1.7f * 2523.0f / pow(2.0f,5.0f);\n  \}\n\n\n  float3 vector_dot( float3x3 m, float3 v)\n  \{\n    float3 r = 1.0f;\n    for(int c = 0; c<3; c++)\n    \{\n      r\[c] = m\[c]\[0]*v.x + m\[c]\[1]*v.y + m\[c]\[2]*v.z;\n    \}\n\n    return r;\n  \}\n\n\n  float3 CAT_Zhai2018( float3 XYZ_b, float3 XYZ_wb, float3 XYZ_wd, float D_b, float D_d, float3x3 M)\n  \{\n    float3 XYZ_wo = 100.0f;\n    float3 RGB_b = vector_dot(M, XYZ_b);\n    float3 RGB_wb = vector_dot(M, XYZ_wb);\n    float3 RGB_wd = vector_dot(M, XYZ_wd);\n    float3 RGB_wo = vector_dot(M, XYZ_wo);\n    \n    float3 D_RGB_b = D_b * (XYZ_wb.y / XYZ_wo.y) * (RGB_wo / RGB_wb) + 1 - D_b;\n    float3 D_RGB_d = D_d * (XYZ_wd.y / XYZ_wo.y) * (RGB_wo / RGB_wd) + 1 - D_d;\n    float3 D_RGB = D_RGB_b / D_RGB_d;\n    \n    float3 RGB_d = D_RGB * RGB_b;\n    float3 XYZ_d = vector_dot(M.invert(), RGB_d);\n    \n    return XYZ_d;\n  \}\n\n\n  float3 XYZ_to_Izazbz( float3 XYZD65 )\n  \{\n    float3 XYZpD65 = XYZD65;\n    XYZpD65.x = cb * XYZD65.x - (cb - 1.0f) * XYZD65.z;\n    XYZpD65.y = cg * XYZD65.y - (cg - 1.0f) * XYZD65.x;\n    float3 LMS = vector_dot(ZCAM_XYZ_to_LMS, XYZpD65);\n    float3 LMSp = 0.0f;\n    LMSp.x = pow( ( c1 + c2 * pow((LMS.x/10000.0f),eta) ) / ( 1.0f + c3 * pow((LMS.x/10000.0f),eta) ), rho);\n    LMSp.y = pow( ( c1 + c2 * pow((LMS.y/10000.0f),eta) ) / ( 1.0f + c3 * pow((LMS.y/10000.0f),eta) ), rho);\n    LMSp.z = pow( ( c1 + c2 * pow((LMS.z/10000.0f),eta) ) / ( 1.0f + c3 * pow((LMS.z/10000.0f),eta) ), rho);\n    float3 Izazbz = vector_dot(ZCAM_LMS_to_Izazbz, LMSp);\n    return Izazbz;\n  \}\n\n\n  float degrees( float radians )\n  \{\n    return radians * 180.0f / PI;\n  \}\n\n\n  float radians( float degrees )\n  \{\n    return degrees / 180.0f * PI;\n  \}\n\n\n  float3 Izazbz_to_IzMh( float3 Izazbz, float refWhiteIz )\n  \{\n    float3 IzMh = 0.0f;\n\n    IzMh.z = fmod(degrees(atan2(Izazbz.z,Izazbz.y))+360.0f,360.0f);\n    float ez = 1.015f + cos(radians(89.038f+IzMh.z));\n    IzMh.x = Izazbz.x;\n    IzMh.y = 100.0f * pow((pow(Izazbz.y, 2.0f) + pow(Izazbz.z, 2.0f)), 0.37f) * ((pow(ez, 0.068f) * pow(F_L, 0.2f)) / (pow(F_b, 0.1f) * pow(refWhiteIz, 0.78f)));\n\n    return IzMh;\n  \}\n\n\n  float3 IzMh_to_Izazbz( float3 IzMh, float refWhiteIz)\n  \{\n    float ez = 1.015f + cos(radians(89.038f+IzMh.z));\n    float hzr = radians(IzMh.z);\n    float Czp = pow((IzMh.y * pow(refWhiteIz, 0.78f) * pow(F_b, 0.1f)) / (100.0f * pow(ez, 0.068f) * pow(F_L, 0.2f)), 50.0f / 37.0f);\n\n    return float3( IzMh.x, Czp * cos(hzr), Czp * sin(hzr));\n  \}\n\n\n  float3 Izazbz_to_XYZ( float3 Izazbz )\n  \{\n    float3 LMSp = vector_dot(ZCAM_LMS_to_Izazbz.invert(), Izazbz);\n    float3 LMS = 0.0f;\n    LMS.x = 10000.0f*pow((c1-pow(LMSp.x,1.0f/rho)) / (c3*pow(LMSp.x,1.0f/rho)-c2),1.0f/eta);\n    LMS.y = 10000.0f*pow((c1-pow(LMSp.y,1.0f/rho)) / (c3*pow(LMSp.y,1.0f/rho)-c2),1.0f/eta);\n    LMS.z = 10000.0f*pow((c1-pow(LMSp.z,1.0f/rho)) / (c3*pow(LMSp.z,1.0f/rho)-c2),1.0f/eta);\n    float3 XYZpD65 = vector_dot(ZCAM_XYZ_to_LMS.invert(), LMS);\n    float3 XYZD65 = XYZpD65;\n    XYZD65.x = (XYZpD65.x+(cb-1.0f)*XYZpD65.z)/cb;\n    XYZD65.y = (XYZpD65.y+(cg-1.0f)*XYZD65.x)/cg;\n    return XYZD65;\n  \}\n\n\n  float3 XYZ_to_ZCAM_IzMh( float3 XYZ, float3 refWhite, float3 d65White )\n  \{\n    float3 refWhiteIzazbz = XYZ_to_Izazbz(refWhite*referenceLuminance/refWhite.y);\n    return Izazbz_to_IzMh(XYZ_to_Izazbz(CAT_Zhai2018(XYZ, refWhite, d65White, adaptDegree, adaptDegree, CAT02_XYZ_to_LMS)), refWhiteIzazbz.x);\n  \}\n\n\n  float3 ZCAM_IzMh_to_XYZ( float3 JMh, float3 refWhite, float3 d65White )\n  \{\n    float3 refWhiteIzazbz = XYZ_to_Izazbz(refWhite*referenceLuminance/refWhite.y);\n    return CAT_Zhai2018(Izazbz_to_XYZ(IzMh_to_Izazbz(JMh, refWhiteIzazbz.x)), d65White, refWhite, adaptDegree, adaptDegree, CAT02_XYZ_to_LMS);\n  \}\n\n\n  void process()\n  \{\n    SampleType(src) input = src();\n    SampleType(refWhite) inputRefWhite = refWhite();\n    SampleType(d65White) inputD65White = d65White();\n\n    float3 output = 0.0f;\n\n    if( direction == 0 )\n    \{\n      output = XYZ_to_ZCAM_IzMh(float3(input.x, input.y, input.z), float3(inputRefWhite.x, inputRefWhite.y, inputRefWhite.z), float3(inputD65White.x, inputD65White.y, inputD65White.z));\n    \}\n    else\n    \{\n       output = ZCAM_IzMh_to_XYZ(float3(input.x, input.y, input.z), float3(inputRefWhite.x, inputRefWhite.y, inputRefWhite.z), float3(inputD65White.x, inputD65White.y, inputD65White.z));\n    \}\n\n    dst() = float4(output.x, output.y, output.z, input.w);\n  \}\n\};\n"
   rebuild ""
   ZCAM_JMh_Kernel_direction {{parent.invert}}
   ZCAM_JMh_Kernel_referenceLuminance {{parent.referenceLuminance}}
   ZCAM_JMh_Kernel_F {{"\[python (0.8, 0.9, 1.0)\\\[\[numvalue viewingConditions]\\]]"}}
   ZCAM_JMh_Kernel_F_s {{"\[python (0.525, 0.59, 0.69)\\\[\[numvalue viewingConditions]\\]]"}}
   ZCAM_JMh_Kernel_L_A {{"referenceLuminance * backgroundLuminance / 100"}}
   ZCAM_JMh_Kernel_F_b {{sqrt(backgroundLuminance/referenceLuminance)}}
   ZCAM_JMh_Kernel_F_L {{"0.171*pow(ZCAM_JMh_Kernel_L_A, 1/3) * (1-exp(-48/9*ZCAM_JMh_Kernel_L_A))"}}
   ZCAM_JMh_Kernel_adaptDegree {{"parent.discountIlluminant ? 1 : ZCAM_JMh_Kernel_F * (1 - (1 / 3.6) * exp((-ZCAM_JMh_Kernel_L_A - 42) / 92))"}}
   ZCAM_JMh_Kernel_CAT02_XYZ_to_LMS {
       {0.7328 0.4296 -0.1624}
       {-0.7036 1.6975 0.0061}
       {0.003 0.0136 0.9834}
     }
   ZCAM_JMh_Kernel_ZCAM_XYZ_to_LMS {
       {0.41478972 0.579999 0.014648}
       {-0.20151 1.120649 0.0531008}
       {-0.0166008 0.2648 0.6684799}
     }
   ZCAM_JMh_Kernel_ZCAM_LMS_to_Izazbz {
       {0 {1-epsilon} 0}
       {3.524 -4.066708 0.542708}
       {0.199076 1.096799 -1.295875}
     }
   rebuild_finalise ""
   name BlinkScript1
   note_font "Bitstream Vera Sans"
   xpos 828
   ypos 221
   addUserKnob {20 User}
   addUserKnob {7 epsilon}
   epsilon 3.703522621e-11
  }
  Output {
   name Output1
   xpos 828
   ypos 335
  }
 end_group
 Dot {
  name Dot5
  note_font "Bitstream Vera Sans"
  xpos -1114
  ypos -603
 }
set Nb0c19060 [stack 0]
 Dot {
  name Dot11
  note_font "Bitstream Vera Sans"
  xpos -1224
  ypos -603
 }
set N94ed0560 [stack 0]
 Dot {
  name Dot10
  note_font "Bitstream Vera Sans"
  xpos -1542
  ypos -603
 }
set Neffd4120 [stack 0]
 Group {
  name st2048_1
  label "PQ (ZCAM) to Lum"
  xpos -1576
  ypos -522
  addUserKnob {20 User}
  addUserKnob {4 direction M {"Luminance (Cd/sqm) -> ST.2048" "ST.2048 -> Luminance (Cd/sqm)"}}
  direction "ST.2048 -> Luminance (Cd/sqm)"
  addUserKnob {7 peakLuminance R 0 10000}
  peakLuminance 10000
  addUserKnob {26 ""}
  addUserKnob {26 m2_override_desc l "" +STARTLINE T "ZCAM uses a different exponent (rho) in its PQ function than ST.2084 (m2)"}
  addUserKnob {7 m2_override R 0 200}
  m2_override {{"1.7 * 2523 / pow(2,5)"}}
 }
  Input {
   inputs 0
   name Input1
   xpos 829
   ypos 200
  }
  Dot {
   name Dot17
   xpos 863
   ypos 240
  }
set N480f5370 [stack 0]
  Dot {
   name Dot27
   xpos 916
   ypos 240
  }
  Expression {
   temp_name0 V_pr
   temp_expr0 "pow(r, 1/m_2)"
   temp_name1 V_pg
   temp_expr1 "pow(g, 1/m_2)"
   temp_name2 V_pb
   temp_expr2 "pow(b, 1/m_2)"
   expr0 "pow((max(0.0, V_pr - c_1) / (c_2 - c_3 * V_pr)), 1/m_1)*L_p"
   expr1 "pow((max(0.0, V_pg - c_1) / (c_2 - c_3 * V_pg)), 1/m_1)*L_p"
   expr2 "pow((max(0.0, V_pb - c_1) / (c_2 - c_3 * V_pb)), 1/m_1)*L_p"
   channel3 none
   name from_st2048
   selected true
   xpos 882
   ypos 285
   addUserKnob {20 User}
   addUserKnob {7 m_1}
   m_1 {{"2610 / 4096 * (1 / 4)"}}
   addUserKnob {7 m_2}
   m_2 {{parent.m2_override}}
   addUserKnob {7 c_1}
   c_1 {{"3424 / 4096"}}
   addUserKnob {7 c_2}
   c_2 {{"2413 / 4096 * 32"}}
   addUserKnob {7 c_3}
   c_3 {{"2392 / 4096 * 32"}}
   addUserKnob {7 L_p R 0 10000}
   L_p {{parent.peakLuminance}}
  }
push $N480f5370
  Dot {
   name Dot26
   xpos 810
   ypos 240
  }
  Expression {
   temp_name0 Y_pr
   temp_expr0 "pow(r / L_p, m_1)"
   temp_name1 Y_pg
   temp_expr1 "pow(g / L_p, m_1)"
   temp_name2 Y_pb
   temp_expr2 "pow(b / L_p, m_1)"
   expr0 "pow((c_1 + c_2 * Y_pr) / (c_3 * Y_pr + 1), m_2)"
   expr1 "pow((c_1 + c_2 * Y_pg) / (c_3 * Y_pg + 1), m_2)"
   expr2 "pow((c_1 + c_2 * Y_pb) / (c_3 * Y_pb + 1), m_2)"
   channel3 none
   name to_st2084
   xpos 776
   ypos 286
   addUserKnob {20 User}
   addUserKnob {7 m_1}
   m_1 {{"2610 / 4096 * (1 / 4)"}}
   addUserKnob {7 m_2}
   m_2 {{parent.m2_override}}
   addUserKnob {7 c_1}
   c_1 {{"3424 / 4096"}}
   addUserKnob {7 c_2}
   c_2 {{"2413 / 4096 * 32"}}
   addUserKnob {7 c_3}
   c_3 {{"2392 / 4096 * 32"}}
   addUserKnob {7 L_p R 0 10000}
   L_p {{parent.peakLuminance}}
  }
  Switch {
   inputs 2
   which {{parent.direction}}
   name Switch2
   xpos 835
   ypos 347
  }
  Output {
   name Output1
   xpos 835
   ypos 447
  }
 end_group
 Multiply {
  channels rgb
  value 1.028552621
  name Multiply8
  label "remove luminance shift\nfrom cone fundamentals matrix"
  note_font "Bitstream Vera Sans"
  xpos -1576
  ypos -490
 }
 Multiply {
  channels rgb
  value {{1/parent.reference_luminance}}
  name Multiply2
  label "1/\[value parent.reference_luminance]\nLum to Exp"
  note_font "Bitstream Vera Sans"
  xpos -1576
  ypos -442
 }
 BlinkScript {
  recompileCount 35
  ProgramGroup 1
  KernelDescription "2 \"SSTSKernel\" iterate pixelWise 3292521f65973146de9ba2803e15c81b8610684f8dcbef3a3fc1382de44823f8 2 \"src\" Read Point \"dst\" Write Point 8 \"lumMid\" Float 1 AAAAAA== \"defaultMin\" Float 3 AAAAAAAAAAAAAAAAAAAAAA== \"defaultMid\" Float 3 AAAAAAAAAAAAAAAAAAAAAA== \"defaultMax\" Float 3 AAAAAAAAAAAAAAAAAAAAAA== \"coefsLow\" Float 6 AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA= \"coefsHigh\" Float 6 AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA= \"M1\" Float 9 AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA \"inverse\" Int 1 AAAAAA== 8 \"lumMid\" 1 1 \"defaultMin\" 3 1 \"defaultMid\" 3 1 \"defaultMax\" 3 1 \"coefsLow\" 1 6 \"coefsHigh\" 1 6 \"M1\" 9 1 \"inverse\" 1 1 4 \"expShift\" Float 1 1 AAAAAA== \"paramMin\" Float 3 1 AAAAAAAAAAAAAAAAAAAAAA== \"paramMid\" Float 3 1 AAAAAAAAAAAAAAAAAAAAAA== \"paramMax\" Float 3 1 AAAAAAAAAAAAAAAAAAAAAA=="
  kernelSource "kernel SSTSKernel : ImageComputationKernel<ePixelWise>\n\{\n  Image<eRead, eAccessPoint, eEdgeClamped> src; // the input image\n  Image<eWrite> dst; // the output image\n\n  param:\n    float lumMid;\n    float3 defaultMin;\n    float3 defaultMid;\n    float3 defaultMax;\n    float coefsLow\[6];\n    float coefsHigh\[6];\n    float3x3 M1;\n    int inverse;\n\n  local:\n    float expShift;\n    float3 paramMin;\n    float3 paramMid;\n    float3 paramMax;\n\n  \n  void define()\n  \{\n\n  \}\n\n  float3 vector_dot( float3 v, float3x3 m)\n  \{\n    float3 r = 1.0f;\n    for(int c = 0; c<3; c++)\n    \{\n      r\[c] = m\[c]\[0]*v.x + m\[c]\[1]*v.y + m\[c]\[2]*v.z;\n    \}\n\n    return r;\n  \}\n\n\n  float dot( float3 a, float3 b)\n  \{\n    return (a.x*b.x) + (a.y*b.y) + (a.z*b.z);\n  \}\n\n  \n  float ssts(float x, float3 minPt, float3 midPt, float3 maxPt)\n  \{\n    float HALF_MIN = 0.0000000596046448;\n\n    // Check for negatives or zero before taking the log. If negative or zero,\n    // set to HALF_MIN.\n    float logx = log10( max(x, HALF_MIN )); \n\n    float logy;\n\n    if( logx <= log10(minPt.x) )\n    \{ \n        logy = logx * minPt.z + ( log10(minPt.y) - minPt.z * log10(minPt.x) );\n    \}\n    else if(( logx > log10(minPt.x) ) && ( logx < log10(midPt.x) ))\n    \{\n        float knot_coord = 3.0f * (logx-log10(minPt.x)) / (log10(midPt.x) - log10(minPt.x));\n        int j = knot_coord;\n        float t = knot_coord - float(j);\n        float3 cf(coefsLow\[j], coefsLow\[j + 1], coefsLow\[j + 2]);\n        float3 monomials( t * t, t, 1.0f );\n        logy = dot(monomials, vector_dot( cf, M1));\n    \}\n    else if(( logx >= log10(midPt.x) ) && ( logx < log10(maxPt.x) ))\n    \{\n        float knot_coord = 3.0f * (logx-log10(midPt.x)) / (log10(maxPt.x) - log10(midPt.x));\n        int j = knot_coord;\n        float t = knot_coord - float(j);\n        float3 cf(coefsHigh\[j], coefsHigh\[j + 1], coefsHigh\[j + 2]); \n        float3 monomials(t * t, t, 1.0f);\n        logy = dot(monomials, vector_dot( cf, M1));\n    \}\n    else\n    \{\n        logy = logx * maxPt.z + ( log10(maxPt.y) - maxPt.z * log10(maxPt.x) );\n    \}\n\n    return pow(10.0f,logy);\n  \}\n\n  \n  float inv_ssts(float y, float3 minPt, float3 midPt, float3 maxPt)\n  \{\n    float KNOT_INC_LOW  = (log10(midPt.x) - log10(minPt.x)) / 3.0f;\n    float KNOT_INC_HIGH = (log10(maxPt.x) - log10(midPt.x)) / 3.0f;\n\n    // KNOT_Y is luminance of the spline at each knot\n    float KNOT_Y_LOW\[4];\n\n   for( int i = 0; i < 4; i++ )\n    \{\n      KNOT_Y_LOW\[i] = ( coefsLow\[i] + coefsLow\[i+1]) / 2.0f;\n    \};\n\n    float KNOT_Y_HIGH\[ 4];\n\n    for( int i = 0; i < 4; i++ )\n    \{\n      KNOT_Y_HIGH\[i] = ( coefsHigh\[i] + coefsHigh\[i+1]) / 2.0f;\n    \};\n\n    float logy = log10( max(y, 0.0000000001f));\n\n    float logx;\n\n    if( logy <= log10(minPt.y) )\n    \{\n        logx = log10(minPt.x);\n\n    \}\n    else if( (logy > log10(minPt.y)) && (logy <= log10(midPt.y)) )\n    \{\n        int j;\n        float3 cf = 0.0f;\n\n        if( logy > KNOT_Y_LOW\[0] && logy <= KNOT_Y_LOW\[1])\n        \{\n          cf.x = coefsLow\[0];\n          cf.y = coefsLow\[1];\n          cf.z = coefsLow\[2];\n          j = 0;\n        \}\n        else if( logy > KNOT_Y_LOW\[1] && logy <= KNOT_Y_LOW\[2])\n        \{\n          cf.x = coefsLow\[1];\n          cf.y = coefsLow\[2];\n          cf.z = coefsLow\[3];\n          j = 1;\n        \}\n        else if( logy > KNOT_Y_LOW\[2] && logy <= KNOT_Y_LOW\[3])\n        \{\n          cf.x = coefsLow\[2];\n          cf.y = coefsLow\[3];\n          cf.z = coefsLow\[4];\n          j = 2;\n        \} \n\n        float3 tmp = vector_dot( cf, M1 );\n\n        float a = tmp.x;\n        float b = tmp.y;\n        float c = tmp.z;\n        c = c - logy;\n\n        float d = sqrt( b * b - 4.0f * a * c);\n\n        float t = ( 2.0f * c) / ( -d - b);\n\n        logx = log10(minPt.x) + ( t + j) * KNOT_INC_LOW;\n\n    \}\n    else if( (logy > log10(midPt.y)) && (logy < log10(maxPt.y)) )\n    \{\n        int j;\n        float3 cf = 0.0f;\n\n        if( logy >= KNOT_Y_HIGH\[0] && logy <= KNOT_Y_HIGH\[1])\n        \{\n          cf.x = coefsHigh\[0];\n          cf.y = coefsHigh\[1];\n          cf.z = coefsHigh\[2];\n          j = 0;\n        \}\n        else if( logy > KNOT_Y_HIGH\[1] && logy <= KNOT_Y_HIGH\[2])\n        \{\n          cf.x = coefsHigh\[1];\n          cf.y = coefsHigh\[2];\n          cf.z = coefsHigh\[3];\n          j = 1;\n        \}\n        else if( logy > KNOT_Y_HIGH\[2] && logy <= KNOT_Y_HIGH\[3])\n        \{\n          cf.x = coefsHigh\[2];\n          cf.y = coefsHigh\[3];\n          cf.z = coefsHigh\[4];\n          j = 2;\n        \} \n\n        float3 tmp = vector_dot( cf, M1);\n\n        float a = tmp.x;\n        float b = tmp.y;\n        float c = tmp.z;\n        c = c - logy;\n\n        float d = sqrt( b * b - 4.0f * a * c);\n\n        float t = ( 2.0f * c) / ( -d - b);\n\n        logx = log10(midPt.x) + ( t + j) * KNOT_INC_HIGH;\n\n    \}\n    else\n    \{\n        logx = log10(maxPt.x);\n\n    \}\n\n    return pow(10.0f, logx);\n  \}\n\n\n  void init()\n  \{\n    paramMin = defaultMin;\n    paramMid = defaultMid;\n    paramMax = defaultMax;\n    expShift = log2(inv_ssts(lumMid, defaultMin, paramMid, defaultMax)) - log2(0.18f);\n    paramMin.x = pow(2.0f, (log(paramMin.x) / log(2.0f) - expShift));\n    paramMid.x = pow(2.0f, (log(0.18f     ) / log(2.0f) - expShift));\n    paramMax.x = pow(2.0f, (log(paramMax.x) / log(2.0f) - expShift));\n  \}\n\n\n  void process()\n  \{\n    SampleType(src) input = src();\n    float3 srcPixel(input.x, input.y, input.z);\n    float3 tsPixel = 0.0f;\n\n    if( inverse )\n    \{\n      tsPixel.x = inv_ssts(srcPixel.x, paramMin, paramMid, paramMax);\n      tsPixel.y = inv_ssts(srcPixel.y, paramMin, paramMid, paramMax);\n      tsPixel.z = inv_ssts(srcPixel.z, paramMin, paramMid, paramMax);\n    \}\n    else\n    \{\n      tsPixel.x = ssts(srcPixel.x, paramMin, paramMid, paramMax);\n      tsPixel.y = ssts(srcPixel.y, paramMin, paramMid, paramMax);\n      tsPixel.z = ssts(srcPixel.z, paramMin, paramMid, paramMax);\n    \}\n\n    dst() = float4(tsPixel.x, tsPixel.y, tsPixel.z, input.w);\n  \}\n\};\n"
  rebuild ""
  SSTSKernel_lumMid {{luminances.y}}
  SSTSKernel_defaultMin {{pow(2.,(log(MIN_PT.x)/log(2)))} {MIN_PT.y} {MIN_PT.z}}
  SSTSKernel_defaultMid {{pow(2.,(log(0.18)/log(2)))} {MID_PT.y} {MID_PT.z}}
  SSTSKernel_defaultMax {{pow(2.,(log(MAX_PT.x)/log(2)))} {MAX_PT.y} {MAX_PT.z}}
  SSTSKernel_coefsLow {{"(MIN_PT.z * (log10(MIN_PT.x)-0.5*knotIncLow)) + ( log10(MIN_PT.y) - MIN_PT.z * log10(MIN_PT.x))"} {"(MIN_PT.z * (log10(MIN_PT.x)+0.5*knotIncLow)) + ( log10(MIN_PT.y) - MIN_PT.z * log10(MIN_PT.x))"} {"log10(MIN_PT.y) + pctLow*(log10(MID_PT.y)-log10(MIN_PT.y))"} {"(MID_PT.z * (log10(MID_PT.x)-0.5*knotIncLow)) + ( log10(MID_PT.y) - MID_PT.z * log10(MID_PT.x))"} {"(MID_PT.z * (log10(MID_PT.x)+0.5*knotIncLow)) + ( log10(MID_PT.y) - MID_PT.z * log10(MID_PT.x))"} {SSTSKernel_coefsLow.4}}
  SSTSKernel_coefsHigh {{"(MID_PT.z * (log10(MID_PT.x)-0.5*knotIncHigh)) + ( log10(MID_PT.y) - MID_PT.z * log10(MID_PT.x))"} {"(MID_PT.z * (log10(MID_PT.x)+0.5*knotIncHigh)) + ( log10(MID_PT.y) - MID_PT.z * log10(MID_PT.x))"} {"log10(MID_PT.y) + pctHigh*(log10(MAX_PT.y)-log10(MID_PT.y))"} {"(MAX_PT.z * (log10(MAX_PT.x)-0.5*knotIncHigh)) + ( log10(MAX_PT.y) - MAX_PT.z * log10(MAX_PT.x))"} {"(MAX_PT.z * (log10(MAX_PT.x)+0.5*knotIncHigh)) + ( log10(MAX_PT.y) - MAX_PT.z * log10(MAX_PT.x))"} {SSTSKernel_coefsHigh.4}}
  SSTSKernel_M1 {
      {0.5 -1 0.5}
      {-1 1 0}
      {0.5 0.5 0}
    }
  SSTSKernel_inverse {{direction}}
  rebuild_finalise ""
  name SSTS_Blink1
  note_font "Bitstream Vera Sans"
  xpos -1576
  ypos -394
  addUserKnob {20 User}
  addUserKnob {13 luminances}
  luminances {{parent.ssts_luminance.0} {parent.ssts_luminance.1} {parent.ssts_luminance.2}}
  addUserKnob {4 direction M {forward inverse}}
  addUserKnob {20 SSTSParams}
  addUserKnob {13 MIN_PT}
  MIN_PT {{0.18*pow(2,minTable(log10(luminances.x)))} {luminances.x} 0}
  addUserKnob {13 MID_PT}
  MID_PT {0.18 4.8 1.55}
  addUserKnob {13 MAX_PT}
  MAX_PT {{0.18*pow(2,maxTable(log10(luminances.z)))} {luminances.z} 0}
  addUserKnob {7 knotIncLow}
  knotIncLow {{"(log10(MID_PT.x) - log10(MIN_PT.x)) / 3"}}
  addUserKnob {7 knotIncHigh}
  knotIncHigh {{"(log10(MAX_PT.x) - log10(MID_PT.x)) / 3"}}
  addUserKnob {7 pctLow}
  pctLow {{bendsLow(log(MIN_PT.x/0.18)/log(2))}}
  addUserKnob {7 pctHigh}
  pctHigh {{bendsHigh(log(MAX_PT.x/0.18)/log(2))}}
  addUserKnob {20 Tables}
  addUserKnob {7 minTable}
  minTable {{curve L l x-4 -15 x-1.69896996 -6.5}}
  addUserKnob {7 maxTable}
  maxTable {{curve L l x1.681241274 6.5 x4 18}}
  addUserKnob {7 bendsLow}
  bendsLow {{curve L l x-15 0.18 x-6.5 0.35}}
  addUserKnob {7 bendsHigh}
  bendsHigh {{curve l x6.5 0.89 x18 0.9}}
  addUserKnob {20 Constants}
  addUserKnob {7 MIN_STOP_SDR R -10 10}
  MIN_STOP_SDR -6.5
  addUserKnob {7 MAX_STOP_SDR R -10 10}
  MAX_STOP_SDR 6.5
  addUserKnob {7 MIN_STOP_RRT R -20 20}
  MIN_STOP_RRT -15
  addUserKnob {7 MAX_STOP_RRT R -20 20}
  MAX_STOP_RRT 18
  addUserKnob {7 MIN_LUM_SDR}
  MIN_LUM_SDR 0.02
  addUserKnob {7 MAX_LUM_SDR R 0 200}
  MAX_LUM_SDR 48
  addUserKnob {7 MIN_LUM_RRT}
  MIN_LUM_RRT 0.0001
  addUserKnob {7 MAX_LUM_RRT R 0 10000}
  MAX_LUM_RRT 10000
  addUserKnob {3 N_KNOTS_LOW}
  N_KNOTS_LOW 4
  addUserKnob {3 N_KNOTS_HIGH}
  N_KNOTS_HIGH 4
 }
set N90ab1ab0 [stack 0]
 Add {
  channels rgb
  value {{-parent.ssts_luminance.1}}
  name Add1
  label "mids to zero"
  note_font "Bitstream Vera Sans"
  xpos -1686
  ypos -394
 }
 Multiply {
  channels rgb
  value {{1/parent.ssts_luminance.1}}
  name Multiply7
  label "1/\[value parent.ssts_luminance.1]\nnormalise mids"
  note_font "Bitstream Vera Sans"
  xpos -1686
  ypos -356
 }
 Clamp {
  channels rgb
  name Clamp2
  label 0-1
  note_font "Bitstream Vera Sans"
  xpos -1686
  ypos -306
 }
 Dot {
  name Dot14
  note_font "Bitstream Vera Sans"
  xpos -1652
  ypos -220
 }
push $Neffd4120
 Dot {
  name Dot7
  note_font "Bitstream Vera Sans"
  xpos -1791
  ypos -603
 }
push $N90ab1ab0
 Multiply {
  channels rgb
  value 0.9722396415
  name Multiply9
  label "re-apply luminance shift\nfrom cone fundamentals matrix"
  note_font "Bitstream Vera Sans"
  xpos -1576
  ypos -358
 }
 Group {
  name st2048_2
  label "Lum to PQ (ZCAM)"
  xpos -1576
  ypos -310
  addUserKnob {20 User}
  addUserKnob {4 direction M {"Luminance (Cd/sqm) -> ST.2048" "ST.2048 -> Luminance (Cd/sqm)"}}
  addUserKnob {7 peakLuminance R 0 10000}
  peakLuminance 10000
  addUserKnob {26 ""}
  addUserKnob {26 m2_override_desc l "" +STARTLINE T "ZCAM uses a different exponent (rho) in its PQ function than ST.2084 (m2)"}
  addUserKnob {7 m2_override R 0 200}
  m2_override {{"1.7 * 2523 / pow(2,5)"}}
 }
  Input {
   inputs 0
   name Input1
   xpos 829
   ypos 200
  }
  Dot {
   name Dot17
   xpos 863
   ypos 240
  }
set N3c3f8c80 [stack 0]
  Dot {
   name Dot27
   xpos 916
   ypos 240
  }
  Expression {
   temp_name0 V_pr
   temp_expr0 "pow(r, 1/m_2)"
   temp_name1 V_pg
   temp_expr1 "pow(g, 1/m_2)"
   temp_name2 V_pb
   temp_expr2 "pow(b, 1/m_2)"
   expr0 "pow((max(0.0, V_pr - c_1) / (c_2 - c_3 * V_pr)), 1/m_1)*L_p"
   expr1 "pow((max(0.0, V_pg - c_1) / (c_2 - c_3 * V_pg)), 1/m_1)*L_p"
   expr2 "pow((max(0.0, V_pb - c_1) / (c_2 - c_3 * V_pb)), 1/m_1)*L_p"
   channel3 none
   name from_st2048
   selected true
   xpos 882
   ypos 285
   addUserKnob {20 User}
   addUserKnob {7 m_1}
   m_1 {{"2610 / 4096 * (1 / 4)"}}
   addUserKnob {7 m_2}
   m_2 {{parent.m2_override}}
   addUserKnob {7 c_1}
   c_1 {{"3424 / 4096"}}
   addUserKnob {7 c_2}
   c_2 {{"2413 / 4096 * 32"}}
   addUserKnob {7 c_3}
   c_3 {{"2392 / 4096 * 32"}}
   addUserKnob {7 L_p R 0 10000}
   L_p {{parent.peakLuminance}}
  }
push $N3c3f8c80
  Dot {
   name Dot26
   xpos 810
   ypos 240
  }
  Expression {
   temp_name0 Y_pr
   temp_expr0 "pow(r / L_p, m_1)"
   temp_name1 Y_pg
   temp_expr1 "pow(g / L_p, m_1)"
   temp_name2 Y_pb
   temp_expr2 "pow(b / L_p, m_1)"
   expr0 "pow((c_1 + c_2 * Y_pr) / (c_3 * Y_pr + 1), m_2)"
   expr1 "pow((c_1 + c_2 * Y_pg) / (c_3 * Y_pg + 1), m_2)"
   expr2 "pow((c_1 + c_2 * Y_pb) / (c_3 * Y_pb + 1), m_2)"
   channel3 none
   name to_st2084
   xpos 776
   ypos 286
   addUserKnob {20 User}
   addUserKnob {7 m_1}
   m_1 {{"2610 / 4096 * (1 / 4)"}}
   addUserKnob {7 m_2}
   m_2 {{parent.m2_override}}
   addUserKnob {7 c_1}
   c_1 {{"3424 / 4096"}}
   addUserKnob {7 c_2}
   c_2 {{"2413 / 4096 * 32"}}
   addUserKnob {7 c_3}
   c_3 {{"2392 / 4096 * 32"}}
   addUserKnob {7 L_p R 0 10000}
   L_p {{parent.peakLuminance}}
  }
  Switch {
   inputs 2
   which {{parent.direction}}
   name Switch2
   xpos 835
   ypos 347
  }
  Output {
   name Output1
   xpos 835
   ypos 447
  }
 end_group
 Dot {
  name Dot9
  note_font "Bitstream Vera Sans"
  xpos -1542
  ypos -258
 }
 Merge2 {
  inputs 2
  operation minus
  name Merge3
  label "diff tonescale"
  note_font "Bitstream Vera Sans"
  xpos -1825
  ypos -267
 }
 Merge2 {
  inputs 2
  operation multiply
  name Merge6
  label "remove toe"
  note_font "Bitstream Vera Sans"
  xpos -1825
  ypos -229
 }
 Multiply {
  channels rgb
  value {{parent.desatHighlights}}
  name Multiply4
  label "desat scale"
  note_font "Bitstream Vera Sans"
  xpos -1825
  ypos -191
 }
 Dot {
  name Dot8
  note_font "Bitstream Vera Sans"
  xpos -1791
  ypos -155
 }
set N124e8e70 [stack 0]
 Group {
  name SoftclipExpression2
  label "avoid negative values for M"
  note_font "Bitstream Vera Sans"
  xpos -1825
  ypos -88
  addUserKnob {20 User}
  addUserKnob {18 clip_to}
  clip_to 1
  addUserKnob {6 clip_to_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
  addUserKnob {6 clip_to_panelDropped_1 l "panel dropped state" -STARTLINE +HIDDEN}
  addUserKnob {6 clip_to_panelDropped_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
  addUserKnob {18 threshold}
  threshold 0.8
  addUserKnob {6 threshold_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
  addUserKnob {6 threshold_panelDropped_1 l "panel dropped state" -STARTLINE +HIDDEN}
  addUserKnob {6 threshold_panelDropped_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
  addUserKnob {6 threshold_panelDropped_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
  addUserKnob {6 threshold_panelDropped_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
  addUserKnob {6 threshold_panelDropped_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
  addUserKnob {6 threshold_panelDropped_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
  addUserKnob {6 threshold_panelDropped_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
  addUserKnob {6 threshold_panelDropped_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
  addUserKnob {6 threshold_panelDropped_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
  addUserKnob {6 threshold_panelDropped_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
  addUserKnob {6 threshold_panelDropped_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
  addUserKnob {6 threshold_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
  addUserKnob {4 direction M {forward inverse}}
  addUserKnob {7 mix}
  mix 1
 }
  Input {
   inputs 0
   name Input1
   xpos -284
   ypos 135
  }
  Multiply {
   value {{1/parent.clip_to.r} {1/parent.clip_to.g} {1/parent.clip_to.b} 1}
   name Multiply1
   note_font "Bitstream Vera Sans"
   xpos -284
   ypos 159
  }
set N437f7200 [stack 0]
  Expression {
   temp_name0 one_minus_e
   temp_expr0 "1 - pow(10,-15)"
   temp_name1 maxr
   temp_expr1 "(pow(threshold.r, 2) - 2 * threshold.r * one_minus_e + one_minus_e ) / ( 1 - one_minus_e )"
   temp_name2 maxg
   temp_expr2 "(pow(threshold.g, 2) - 2 * threshold.g * one_minus_e + one_minus_e ) / ( 1 - one_minus_e )"
   temp_name3 maxb
   temp_expr3 "(pow(threshold.b, 2) - 2 * threshold.b * one_minus_e + one_minus_e ) / ( 1 - one_minus_e )"
   expr0 " threshold.r < 1 ? r >= 1 ? maxr : r > threshold.r ? (pow(threshold.r, 2) - 2 * threshold.r * r + r ) / ( 1 - r ) : r : r"
   expr1 " threshold.g < 1 ? g >= 1 ? maxg : g > threshold.g ? (pow(threshold.g, 2) - 2 * threshold.g * g + g ) / ( 1 - g ) : g : g"
   expr2 " threshold.b < 1 ? b >= 1 ? maxb : b > threshold.b ? (pow(threshold.b, 2) - 2 * threshold.b * b + b ) / ( 1 - b ) : b : b"
   expr3 a
   mix {{parent.mix}}
   name Expression2
   label inverse
   xpos -222
   ypos 257
   addUserKnob {20 User}
   addUserKnob {18 threshold}
   threshold {{parent.threshold.r} {parent.threshold.g} {parent.threshold.b}}
   addUserKnob {6 threshold_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
   addUserKnob {6 threshold_panelDropped_1 l "panel dropped state" -STARTLINE +HIDDEN}
   addUserKnob {6 threshold_panelDropped_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
   addUserKnob {6 threshold_panelDropped_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
   addUserKnob {6 threshold_panelDropped_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
   addUserKnob {6 threshold_panelDropped_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
   addUserKnob {6 threshold_panelDropped_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
   addUserKnob {6 threshold_panelDropped_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
   addUserKnob {6 threshold_panelDropped_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
   addUserKnob {6 threshold_panelDropped_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
   addUserKnob {6 threshold_panelDropped_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
   addUserKnob {6 threshold_panelDropped_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
   addUserKnob {6 threshold_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
  }
push $N437f7200
  Expression {
   expr0 "threshold.r < 1 ? r > threshold.r ? ( -1 / (( r - threshold.r ) / ( 1 - threshold.r ) +1 ) +1 ) * ( 1 - threshold.r ) + threshold.r : r : r"
   expr1 "threshold.g < 1 ? g > threshold.g ? ( -1 / (( g - threshold.g ) / ( 1 - threshold.g ) +1 ) +1 ) * ( 1 - threshold.g ) + threshold.g : g : g"
   expr2 "threshold.b < 1 ? b > threshold.b ? ( -1 / (( b - threshold.b ) / ( 1 - threshold.b ) +1 ) +1 ) * ( 1 - threshold.b ) + threshold.b : b : b"
   expr3 a
   mix {{parent.mix}}
   name Expression1
   label forward
   xpos -349
   ypos 258
   addUserKnob {20 User}
   addUserKnob {18 threshold_1 l threshold}
   threshold_1 {{parent.threshold.r} {parent.threshold.g} {parent.threshold.b}}
   addUserKnob {6 threshold_1_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
   addUserKnob {6 threshold_1_panelDropped_1 l "panel dropped state" -STARTLINE +HIDDEN}
   addUserKnob {6 threshold_1_panelDropped_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
   addUserKnob {6 threshold_1_panelDropped_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
   addUserKnob {6 threshold_1_panelDropped_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
   addUserKnob {6 threshold_1_panelDropped_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
   addUserKnob {6 threshold_1_panelDropped_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
   addUserKnob {6 threshold_1_panelDropped_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
   addUserKnob {6 threshold_1_panelDropped_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
   addUserKnob {6 threshold_1_panelDropped_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
   addUserKnob {6 threshold_1_panelDropped_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
   addUserKnob {6 threshold_1_panelDropped_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
   addUserKnob {6 threshold_1_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
  }
  Switch {
   inputs 2
   which {{parent.direction}}
   name Switch2
   note_font "Bitstream Vera Sans"
   xpos -287
   ypos 356
  }
  Multiply {
   value {{parent.clip_to.r} {parent.clip_to.g} {parent.clip_to.b} 1}
   name Multiply2
   note_font "Bitstream Vera Sans"
   xpos -287
   ypos 380
  }
  Output {
   name Output1
   xpos -287
   ypos 463
  }
 end_group
 Invert {
  channels rgb
  name Invert1
  note_font "Bitstream Vera Sans"
  xpos -1825
  ypos -52
 }
 Shuffle {
  red white
  green red
  blue white
  alpha white
  name Shuffle2
  label "\[value in]-->\[value out]"
  note_font "Bitstream Vera Sans"
  xpos -1825
  ypos -21
 }
push $N124e8e70
 Multiply {
  channels rgb
  value 0.01
  name Multiply6
  label "highlight boost scale"
  note_font "Bitstream Vera Sans"
  xpos -1733
  ypos -164
 }
 Shuffle {
  green black
  blue black
  alpha black
  name Shuffle3
  label "\[value in]-->\[value out]"
  note_font "Bitstream Vera Sans"
  xpos -1623
  ypos -164
 }
 Dot {
  name Dot12
  note_font "Bitstream Vera Sans"
  xpos -1422
  ypos -155
 }
 Dot {
  name Dot13
  note_font "Bitstream Vera Sans"
  xpos -1422
  ypos -560
 }
push $N94ed0560
 Merge2 {
  inputs 2
  operation plus
  name Merge5
  label "boost desat highlights"
  note_font "Bitstream Vera Sans"
  xpos -1258
  ypos -569
 }
 Group {
  name st2048_3
  label "PQ (ZCAM) to Lum"
  xpos -1258
  ypos -480
  addUserKnob {20 User}
  addUserKnob {4 direction M {"Luminance (Cd/sqm) -> ST.2048" "ST.2048 -> Luminance (Cd/sqm)"}}
  direction "ST.2048 -> Luminance (Cd/sqm)"
  addUserKnob {7 peakLuminance R 0 10000}
  peakLuminance 10000
  addUserKnob {26 ""}
  addUserKnob {26 m2_override_desc l "" +STARTLINE T "ZCAM uses a different exponent (rho) in its PQ function than ST.2084 (m2)"}
  addUserKnob {7 m2_override R 0 200}
  m2_override {{"1.7 * 2523 / pow(2,5)"}}
 }
  Input {
   inputs 0
   name Input1
   xpos 829
   ypos 200
  }
  Dot {
   name Dot17
   xpos 863
   ypos 240
  }
set Nff0f6e40 [stack 0]
  Dot {
   name Dot27
   xpos 916
   ypos 240
  }
  Expression {
   temp_name0 V_pr
   temp_expr0 "pow(r, 1/m_2)"
   temp_name1 V_pg
   temp_expr1 "pow(g, 1/m_2)"
   temp_name2 V_pb
   temp_expr2 "pow(b, 1/m_2)"
   expr0 "pow((max(0.0, V_pr - c_1) / (c_2 - c_3 * V_pr)), 1/m_1)*L_p"
   expr1 "pow((max(0.0, V_pg - c_1) / (c_2 - c_3 * V_pg)), 1/m_1)*L_p"
   expr2 "pow((max(0.0, V_pb - c_1) / (c_2 - c_3 * V_pb)), 1/m_1)*L_p"
   channel3 none
   name from_st2048
   selected true
   xpos 882
   ypos 285
   addUserKnob {20 User}
   addUserKnob {7 m_1}
   m_1 {{"2610 / 4096 * (1 / 4)"}}
   addUserKnob {7 m_2}
   m_2 {{parent.m2_override}}
   addUserKnob {7 c_1}
   c_1 {{"3424 / 4096"}}
   addUserKnob {7 c_2}
   c_2 {{"2413 / 4096 * 32"}}
   addUserKnob {7 c_3}
   c_3 {{"2392 / 4096 * 32"}}
   addUserKnob {7 L_p R 0 10000}
   L_p {{parent.peakLuminance}}
  }
push $Nff0f6e40
  Dot {
   name Dot26
   xpos 810
   ypos 240
  }
  Expression {
   temp_name0 Y_pr
   temp_expr0 "pow(r / L_p, m_1)"
   temp_name1 Y_pg
   temp_expr1 "pow(g / L_p, m_1)"
   temp_name2 Y_pb
   temp_expr2 "pow(b / L_p, m_1)"
   expr0 "pow((c_1 + c_2 * Y_pr) / (c_3 * Y_pr + 1), m_2)"
   expr1 "pow((c_1 + c_2 * Y_pg) / (c_3 * Y_pg + 1), m_2)"
   expr2 "pow((c_1 + c_2 * Y_pb) / (c_3 * Y_pb + 1), m_2)"
   channel3 none
   name to_st2084
   xpos 776
   ypos 286
   addUserKnob {20 User}
   addUserKnob {7 m_1}
   m_1 {{"2610 / 4096 * (1 / 4)"}}
   addUserKnob {7 m_2}
   m_2 {{parent.m2_override}}
   addUserKnob {7 c_1}
   c_1 {{"3424 / 4096"}}
   addUserKnob {7 c_2}
   c_2 {{"2413 / 4096 * 32"}}
   addUserKnob {7 c_3}
   c_3 {{"2392 / 4096 * 32"}}
   addUserKnob {7 L_p R 0 10000}
   L_p {{parent.peakLuminance}}
  }
  Switch {
   inputs 2
   which {{parent.direction}}
   name Switch2
   xpos 835
   ypos 347
  }
  Output {
   name Output1
   xpos 835
   ypos 447
  }
 end_group
 Multiply {
  channels rgb
  value 1.028552621
  name Multiply10
  label "remove luminance shift\nfrom cone fundamentals matrix"
  note_font "Bitstream Vera Sans"
  xpos -1258
  ypos -448
 }
 Multiply {
  channels rgb
  value {{1/parent.reference_luminance}}
  name Multiply11
  label "1/\[value parent.reference_luminance]\nLum to Exp"
  note_font "Bitstream Vera Sans"
  xpos -1258
  ypos -400
 }
 BlinkScript {
  recompileCount 35
  ProgramGroup 1
  KernelDescription "2 \"SSTSKernel\" iterate pixelWise 3292521f65973146de9ba2803e15c81b8610684f8dcbef3a3fc1382de44823f8 2 \"src\" Read Point \"dst\" Write Point 8 \"lumMid\" Float 1 AAAAAA== \"defaultMin\" Float 3 AAAAAAAAAAAAAAAAAAAAAA== \"defaultMid\" Float 3 AAAAAAAAAAAAAAAAAAAAAA== \"defaultMax\" Float 3 AAAAAAAAAAAAAAAAAAAAAA== \"coefsLow\" Float 6 AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA= \"coefsHigh\" Float 6 AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA= \"M1\" Float 9 AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA \"inverse\" Int 1 AAAAAA== 8 \"lumMid\" 1 1 \"defaultMin\" 3 1 \"defaultMid\" 3 1 \"defaultMax\" 3 1 \"coefsLow\" 1 6 \"coefsHigh\" 1 6 \"M1\" 9 1 \"inverse\" 1 1 4 \"expShift\" Float 1 1 AAAAAA== \"paramMin\" Float 3 1 AAAAAAAAAAAAAAAAAAAAAA== \"paramMid\" Float 3 1 AAAAAAAAAAAAAAAAAAAAAA== \"paramMax\" Float 3 1 AAAAAAAAAAAAAAAAAAAAAA=="
  kernelSource "kernel SSTSKernel : ImageComputationKernel<ePixelWise>\n\{\n  Image<eRead, eAccessPoint, eEdgeClamped> src; // the input image\n  Image<eWrite> dst; // the output image\n\n  param:\n    float lumMid;\n    float3 defaultMin;\n    float3 defaultMid;\n    float3 defaultMax;\n    float coefsLow\[6];\n    float coefsHigh\[6];\n    float3x3 M1;\n    int inverse;\n\n  local:\n    float expShift;\n    float3 paramMin;\n    float3 paramMid;\n    float3 paramMax;\n\n  \n  void define()\n  \{\n\n  \}\n\n  float3 vector_dot( float3 v, float3x3 m)\n  \{\n    float3 r = 1.0f;\n    for(int c = 0; c<3; c++)\n    \{\n      r\[c] = m\[c]\[0]*v.x + m\[c]\[1]*v.y + m\[c]\[2]*v.z;\n    \}\n\n    return r;\n  \}\n\n\n  float dot( float3 a, float3 b)\n  \{\n    return (a.x*b.x) + (a.y*b.y) + (a.z*b.z);\n  \}\n\n  \n  float ssts(float x, float3 minPt, float3 midPt, float3 maxPt)\n  \{\n    float HALF_MIN = 0.0000000596046448;\n\n    // Check for negatives or zero before taking the log. If negative or zero,\n    // set to HALF_MIN.\n    float logx = log10( max(x, HALF_MIN )); \n\n    float logy;\n\n    if( logx <= log10(minPt.x) )\n    \{ \n        logy = logx * minPt.z + ( log10(minPt.y) - minPt.z * log10(minPt.x) );\n    \}\n    else if(( logx > log10(minPt.x) ) && ( logx < log10(midPt.x) ))\n    \{\n        float knot_coord = 3.0f * (logx-log10(minPt.x)) / (log10(midPt.x) - log10(minPt.x));\n        int j = knot_coord;\n        float t = knot_coord - float(j);\n        float3 cf(coefsLow\[j], coefsLow\[j + 1], coefsLow\[j + 2]);\n        float3 monomials( t * t, t, 1.0f );\n        logy = dot(monomials, vector_dot( cf, M1));\n    \}\n    else if(( logx >= log10(midPt.x) ) && ( logx < log10(maxPt.x) ))\n    \{\n        float knot_coord = 3.0f * (logx-log10(midPt.x)) / (log10(maxPt.x) - log10(midPt.x));\n        int j = knot_coord;\n        float t = knot_coord - float(j);\n        float3 cf(coefsHigh\[j], coefsHigh\[j + 1], coefsHigh\[j + 2]); \n        float3 monomials(t * t, t, 1.0f);\n        logy = dot(monomials, vector_dot( cf, M1));\n    \}\n    else\n    \{\n        logy = logx * maxPt.z + ( log10(maxPt.y) - maxPt.z * log10(maxPt.x) );\n    \}\n\n    return pow(10.0f,logy);\n  \}\n\n  \n  float inv_ssts(float y, float3 minPt, float3 midPt, float3 maxPt)\n  \{\n    float KNOT_INC_LOW  = (log10(midPt.x) - log10(minPt.x)) / 3.0f;\n    float KNOT_INC_HIGH = (log10(maxPt.x) - log10(midPt.x)) / 3.0f;\n\n    // KNOT_Y is luminance of the spline at each knot\n    float KNOT_Y_LOW\[4];\n\n   for( int i = 0; i < 4; i++ )\n    \{\n      KNOT_Y_LOW\[i] = ( coefsLow\[i] + coefsLow\[i+1]) / 2.0f;\n    \};\n\n    float KNOT_Y_HIGH\[ 4];\n\n    for( int i = 0; i < 4; i++ )\n    \{\n      KNOT_Y_HIGH\[i] = ( coefsHigh\[i] + coefsHigh\[i+1]) / 2.0f;\n    \};\n\n    float logy = log10( max(y, 0.0000000001f));\n\n    float logx;\n\n    if( logy <= log10(minPt.y) )\n    \{\n        logx = log10(minPt.x);\n\n    \}\n    else if( (logy > log10(minPt.y)) && (logy <= log10(midPt.y)) )\n    \{\n        int j;\n        float3 cf = 0.0f;\n\n        if( logy > KNOT_Y_LOW\[0] && logy <= KNOT_Y_LOW\[1])\n        \{\n          cf.x = coefsLow\[0];\n          cf.y = coefsLow\[1];\n          cf.z = coefsLow\[2];\n          j = 0;\n        \}\n        else if( logy > KNOT_Y_LOW\[1] && logy <= KNOT_Y_LOW\[2])\n        \{\n          cf.x = coefsLow\[1];\n          cf.y = coefsLow\[2];\n          cf.z = coefsLow\[3];\n          j = 1;\n        \}\n        else if( logy > KNOT_Y_LOW\[2] && logy <= KNOT_Y_LOW\[3])\n        \{\n          cf.x = coefsLow\[2];\n          cf.y = coefsLow\[3];\n          cf.z = coefsLow\[4];\n          j = 2;\n        \} \n\n        float3 tmp = vector_dot( cf, M1 );\n\n        float a = tmp.x;\n        float b = tmp.y;\n        float c = tmp.z;\n        c = c - logy;\n\n        float d = sqrt( b * b - 4.0f * a * c);\n\n        float t = ( 2.0f * c) / ( -d - b);\n\n        logx = log10(minPt.x) + ( t + j) * KNOT_INC_LOW;\n\n    \}\n    else if( (logy > log10(midPt.y)) && (logy < log10(maxPt.y)) )\n    \{\n        int j;\n        float3 cf = 0.0f;\n\n        if( logy >= KNOT_Y_HIGH\[0] && logy <= KNOT_Y_HIGH\[1])\n        \{\n          cf.x = coefsHigh\[0];\n          cf.y = coefsHigh\[1];\n          cf.z = coefsHigh\[2];\n          j = 0;\n        \}\n        else if( logy > KNOT_Y_HIGH\[1] && logy <= KNOT_Y_HIGH\[2])\n        \{\n          cf.x = coefsHigh\[1];\n          cf.y = coefsHigh\[2];\n          cf.z = coefsHigh\[3];\n          j = 1;\n        \}\n        else if( logy > KNOT_Y_HIGH\[2] && logy <= KNOT_Y_HIGH\[3])\n        \{\n          cf.x = coefsHigh\[2];\n          cf.y = coefsHigh\[3];\n          cf.z = coefsHigh\[4];\n          j = 2;\n        \} \n\n        float3 tmp = vector_dot( cf, M1);\n\n        float a = tmp.x;\n        float b = tmp.y;\n        float c = tmp.z;\n        c = c - logy;\n\n        float d = sqrt( b * b - 4.0f * a * c);\n\n        float t = ( 2.0f * c) / ( -d - b);\n\n        logx = log10(midPt.x) + ( t + j) * KNOT_INC_HIGH;\n\n    \}\n    else\n    \{\n        logx = log10(maxPt.x);\n\n    \}\n\n    return pow(10.0f, logx);\n  \}\n\n\n  void init()\n  \{\n    paramMin = defaultMin;\n    paramMid = defaultMid;\n    paramMax = defaultMax;\n    expShift = log2(inv_ssts(lumMid, defaultMin, paramMid, defaultMax)) - log2(0.18f);\n    paramMin.x = pow(2.0f, (log(paramMin.x) / log(2.0f) - expShift));\n    paramMid.x = pow(2.0f, (log(0.18f     ) / log(2.0f) - expShift));\n    paramMax.x = pow(2.0f, (log(paramMax.x) / log(2.0f) - expShift));\n  \}\n\n\n  void process()\n  \{\n    SampleType(src) input = src();\n    float3 srcPixel(input.x, input.y, input.z);\n    float3 tsPixel = 0.0f;\n\n    if( inverse )\n    \{\n      tsPixel.x = inv_ssts(srcPixel.x, paramMin, paramMid, paramMax);\n      tsPixel.y = inv_ssts(srcPixel.y, paramMin, paramMid, paramMax);\n      tsPixel.z = inv_ssts(srcPixel.z, paramMin, paramMid, paramMax);\n    \}\n    else\n    \{\n      tsPixel.x = ssts(srcPixel.x, paramMin, paramMid, paramMax);\n      tsPixel.y = ssts(srcPixel.y, paramMin, paramMid, paramMax);\n      tsPixel.z = ssts(srcPixel.z, paramMin, paramMid, paramMax);\n    \}\n\n    dst() = float4(tsPixel.x, tsPixel.y, tsPixel.z, input.w);\n  \}\n\};\n"
  rebuild ""
  SSTSKernel_lumMid {{luminances.y}}
  SSTSKernel_defaultMin {{pow(2.,(log(MIN_PT.x)/log(2)))} {MIN_PT.y} {MIN_PT.z}}
  SSTSKernel_defaultMid {{pow(2.,(log(0.18)/log(2)))} {MID_PT.y} {MID_PT.z}}
  SSTSKernel_defaultMax {{pow(2.,(log(MAX_PT.x)/log(2)))} {MAX_PT.y} {MAX_PT.z}}
  SSTSKernel_coefsLow {{"(MIN_PT.z * (log10(MIN_PT.x)-0.5*knotIncLow)) + ( log10(MIN_PT.y) - MIN_PT.z * log10(MIN_PT.x))"} {"(MIN_PT.z * (log10(MIN_PT.x)+0.5*knotIncLow)) + ( log10(MIN_PT.y) - MIN_PT.z * log10(MIN_PT.x))"} {"log10(MIN_PT.y) + pctLow*(log10(MID_PT.y)-log10(MIN_PT.y))"} {"(MID_PT.z * (log10(MID_PT.x)-0.5*knotIncLow)) + ( log10(MID_PT.y) - MID_PT.z * log10(MID_PT.x))"} {"(MID_PT.z * (log10(MID_PT.x)+0.5*knotIncLow)) + ( log10(MID_PT.y) - MID_PT.z * log10(MID_PT.x))"} {SSTSKernel_coefsLow.4}}
  SSTSKernel_coefsHigh {{"(MID_PT.z * (log10(MID_PT.x)-0.5*knotIncHigh)) + ( log10(MID_PT.y) - MID_PT.z * log10(MID_PT.x))"} {"(MID_PT.z * (log10(MID_PT.x)+0.5*knotIncHigh)) + ( log10(MID_PT.y) - MID_PT.z * log10(MID_PT.x))"} {"log10(MID_PT.y) + pctHigh*(log10(MAX_PT.y)-log10(MID_PT.y))"} {"(MAX_PT.z * (log10(MAX_PT.x)-0.5*knotIncHigh)) + ( log10(MAX_PT.y) - MAX_PT.z * log10(MAX_PT.x))"} {"(MAX_PT.z * (log10(MAX_PT.x)+0.5*knotIncHigh)) + ( log10(MAX_PT.y) - MAX_PT.z * log10(MAX_PT.x))"} {SSTSKernel_coefsHigh.4}}
  SSTSKernel_M1 {
      {0.5 -1 0.5}
      {-1 1 0}
      {0.5 0.5 0}
    }
  SSTSKernel_inverse {{direction}}
  rebuild_finalise ""
  name SSTS_Blink2
  note_font "Bitstream Vera Sans"
  xpos -1258
  ypos -352
  addUserKnob {20 User}
  addUserKnob {13 luminances}
  luminances {{parent.ssts_luminance.0} {parent.ssts_luminance.1} {parent.ssts_luminance.2}}
  addUserKnob {4 direction M {forward inverse}}
  addUserKnob {20 SSTSParams}
  addUserKnob {13 MIN_PT}
  MIN_PT {{0.18*pow(2,minTable(log10(luminances.x)))} {luminances.x} 0}
  addUserKnob {13 MID_PT}
  MID_PT {0.18 4.8 1.55}
  addUserKnob {13 MAX_PT}
  MAX_PT {{0.18*pow(2,maxTable(log10(luminances.z)))} {luminances.z} 0}
  addUserKnob {7 knotIncLow}
  knotIncLow {{"(log10(MID_PT.x) - log10(MIN_PT.x)) / 3"}}
  addUserKnob {7 knotIncHigh}
  knotIncHigh {{"(log10(MAX_PT.x) - log10(MID_PT.x)) / 3"}}
  addUserKnob {7 pctLow}
  pctLow {{bendsLow(log(MIN_PT.x/0.18)/log(2))}}
  addUserKnob {7 pctHigh}
  pctHigh {{bendsHigh(log(MAX_PT.x/0.18)/log(2))}}
  addUserKnob {20 Tables}
  addUserKnob {7 minTable}
  minTable {{curve L l x-4 -15 x-1.69896996 -6.5}}
  addUserKnob {7 maxTable}
  maxTable {{curve L l x1.681241274 6.5 x4 18}}
  addUserKnob {7 bendsLow}
  bendsLow {{curve L l x-15 0.18 x-6.5 0.35}}
  addUserKnob {7 bendsHigh}
  bendsHigh {{curve l x6.5 0.89 x18 0.9}}
  addUserKnob {20 Constants}
  addUserKnob {7 MIN_STOP_SDR R -10 10}
  MIN_STOP_SDR -6.5
  addUserKnob {7 MAX_STOP_SDR R -10 10}
  MAX_STOP_SDR 6.5
  addUserKnob {7 MIN_STOP_RRT R -20 20}
  MIN_STOP_RRT -15
  addUserKnob {7 MAX_STOP_RRT R -20 20}
  MAX_STOP_RRT 18
  addUserKnob {7 MIN_LUM_SDR}
  MIN_LUM_SDR 0.02
  addUserKnob {7 MAX_LUM_SDR R 0 200}
  MAX_LUM_SDR 48
  addUserKnob {7 MIN_LUM_RRT}
  MIN_LUM_RRT 0.0001
  addUserKnob {7 MAX_LUM_RRT R 0 10000}
  MAX_LUM_RRT 10000
  addUserKnob {3 N_KNOTS_LOW}
  N_KNOTS_LOW 4
  addUserKnob {3 N_KNOTS_HIGH}
  N_KNOTS_HIGH 4
 }
 Multiply {
  channels rgb
  value 0.9722396415
  name Multiply12
  label "re-apply luminance shift\nfrom cone fundamentals matrix"
  note_font "Bitstream Vera Sans"
  xpos -1258
  ypos -316
 }
 Group {
  name st2048_4
  label "Lum to PQ (ZCAM)"
  xpos -1258
  ypos -268
  addUserKnob {20 User}
  addUserKnob {4 direction M {"Luminance (Cd/sqm) -> ST.2048" "ST.2048 -> Luminance (Cd/sqm)"}}
  addUserKnob {7 peakLuminance R 0 10000}
  peakLuminance 10000
  addUserKnob {26 ""}
  addUserKnob {26 m2_override_desc l "" +STARTLINE T "ZCAM uses a different exponent (rho) in its PQ function than ST.2084 (m2)"}
  addUserKnob {7 m2_override R 0 200}
  m2_override {{"1.7 * 2523 / pow(2,5)"}}
 }
  Input {
   inputs 0
   name Input1
   xpos 829
   ypos 200
  }
  Dot {
   name Dot17
   xpos 863
   ypos 240
  }
set Nfd4c86b0 [stack 0]
  Dot {
   name Dot27
   xpos 916
   ypos 240
  }
  Expression {
   temp_name0 V_pr
   temp_expr0 "pow(r, 1/m_2)"
   temp_name1 V_pg
   temp_expr1 "pow(g, 1/m_2)"
   temp_name2 V_pb
   temp_expr2 "pow(b, 1/m_2)"
   expr0 "pow((max(0.0, V_pr - c_1) / (c_2 - c_3 * V_pr)), 1/m_1)*L_p"
   expr1 "pow((max(0.0, V_pg - c_1) / (c_2 - c_3 * V_pg)), 1/m_1)*L_p"
   expr2 "pow((max(0.0, V_pb - c_1) / (c_2 - c_3 * V_pb)), 1/m_1)*L_p"
   channel3 none
   name from_st2048
   selected true
   xpos 882
   ypos 285
   addUserKnob {20 User}
   addUserKnob {7 m_1}
   m_1 {{"2610 / 4096 * (1 / 4)"}}
   addUserKnob {7 m_2}
   m_2 {{parent.m2_override}}
   addUserKnob {7 c_1}
   c_1 {{"3424 / 4096"}}
   addUserKnob {7 c_2}
   c_2 {{"2413 / 4096 * 32"}}
   addUserKnob {7 c_3}
   c_3 {{"2392 / 4096 * 32"}}
   addUserKnob {7 L_p R 0 10000}
   L_p {{parent.peakLuminance}}
  }
push $Nfd4c86b0
  Dot {
   name Dot26
   xpos 810
   ypos 240
  }
  Expression {
   temp_name0 Y_pr
   temp_expr0 "pow(r / L_p, m_1)"
   temp_name1 Y_pg
   temp_expr1 "pow(g / L_p, m_1)"
   temp_name2 Y_pb
   temp_expr2 "pow(b / L_p, m_1)"
   expr0 "pow((c_1 + c_2 * Y_pr) / (c_3 * Y_pr + 1), m_2)"
   expr1 "pow((c_1 + c_2 * Y_pg) / (c_3 * Y_pg + 1), m_2)"
   expr2 "pow((c_1 + c_2 * Y_pb) / (c_3 * Y_pb + 1), m_2)"
   channel3 none
   name to_st2084
   xpos 776
   ypos 286
   addUserKnob {20 User}
   addUserKnob {7 m_1}
   m_1 {{"2610 / 4096 * (1 / 4)"}}
   addUserKnob {7 m_2}
   m_2 {{parent.m2_override}}
   addUserKnob {7 c_1}
   c_1 {{"3424 / 4096"}}
   addUserKnob {7 c_2}
   c_2 {{"2413 / 4096 * 32"}}
   addUserKnob {7 c_3}
   c_3 {{"2392 / 4096 * 32"}}
   addUserKnob {7 L_p R 0 10000}
   L_p {{parent.peakLuminance}}
  }
  Switch {
   inputs 2
   which {{parent.direction}}
   name Switch2
   xpos 835
   ypos 347
  }
  Output {
   name Output1
   xpos 835
   ypos 447
  }
 end_group
 Group {
  name Group1
  label "Re-Generate J\nfrom Iz"
  xpos -1258
  ypos -236
  addUserKnob {20 User}
  addUserKnob {41 referenceWhite -STARTLINE T Colorspace2.illuminant_in}
  addUserKnob {7 referenceLuminance -STARTLINE R 0 10000}
  referenceLuminance {{parent.reference_luminance}}
  addUserKnob {4 viewingConditions M {dark dim average}}
  addUserKnob {7 backgroundLuminance -STARTLINE R 0 200}
  backgroundLuminance {{parent.background_luminance}}
  addUserKnob {6 discountIlluminant +STARTLINE}
  addUserKnob {20 Factors}
  addUserKnob {7 F}
  F {{"\[python (0.8, 0.9, 1.0)\\\[\[numvalue viewingConditions]\\]]"}}
  addUserKnob {7 F_s}
  F_s {{"\[python (0.525, 0.59, 0.69)\\\[\[numvalue viewingConditions]\\]]"}}
  addUserKnob {7 L_A}
  L_A {{"referenceLuminance * backgroundLuminance / 100"}}
  addUserKnob {7 F_b}
  F_b {{sqrt(backgroundLuminance/referenceLuminance)}}
  addUserKnob {7 F_L}
  F_L {{"0.171*pow(L_A, 1/3) * (1-exp(-48/9*L_A))"}}
 }
  BackdropNode {
   inputs 0
   name BackdropNode7
   tile_color 0x666666ff
   label "Reference White"
   note_font_size 20
   xpos 27
   ypos -149
   bdwidth 177
   bdheight 144
  }
  Input {
   inputs 0
   name Input
   xpos -66
   ypos -264
  }
  Dot {
   name Dot1
   xpos -32
   ypos -184
  }
set N564f56c0 [stack 0]
  Dot {
   name Dot11
   xpos 114
   ypos -184
  }
  Shuffle {
   red white
   green white
   blue white
   alpha white
   name Shuffle2
   label "\[value in]-->\[value out]"
   note_font "Bitstream Vera Sans"
   xpos 80
   ypos -112
  }
  Colorspace {
   illuminant_in {{parent.parent.illuminant_in}}
   colorspace_out CIE-XYZ
   name Colorspace2
   xpos 80
   ypos -76
  }
  Expression {
   temp_name0 gain
   temp_expr0 parent.referenceLuminance/g
   expr0 r*gain
   expr1 g*gain
   expr2 b*gain
   name Expression0
   xpos 80
   ypos -50
  }
  Group {
   name XYZ_w_to_Izazbz
   xpos 80
   ypos -26
  }
   Input {
    inputs 0
    name Input1
    xpos 148
    ypos 197
   }
   Expression {
    temp_name0 cb
    temp_expr0 1.15
    temp_name1 cg
    temp_expr1 0.66
    expr0 "(cb*r) - ((cb-1)*b)"
    expr1 "(cg*g) - ((cg-1)*r)"
    expr2 b
    name Expression1
    label "XYZ (D65)\nto\nX'Y'Z (D65)"
    note_font "Bitstream Vera Sans"
    xpos 148
    ypos 237
   }
   ColorMatrix {
    matrix {
        {0.41478972 0.579999 0.014648}
        {-0.20151 1.120649 0.0531008}
        {-0.0166008 0.2648 0.6684799}
      }
    name ColorMatrix1
    label "X'Y'Z (D65)\nto\nLMS"
    note_font "Bitstream Vera Sans"
    xpos 148
    ypos 297
   }
   Expression {
    temp_name0 c1
    temp_expr0 "3424 / pow(2,12)"
    temp_name1 c2
    temp_expr1 "2413 / pow(2,7)"
    temp_name2 c3
    temp_expr2 "2392 / pow(2,7)"
    temp_name3 n
    temp_expr3 2610/pow(2,14)
    expr0 "pow( ( c1 + c2 * pow((r/10000),n) ) / ( 1 + c3 * pow((r/10000),n) ), (1.7 * 2523 / pow(2,5)))"
    expr1 "pow( ( c1 + c2 * pow((g/10000),n) ) / ( 1 + c3 * pow((g/10000),n) ), (1.7 * 2523 / pow(2,5)))"
    expr2 "pow( ( c1 + c2 * pow((b/10000),n) ) / ( 1 + c3 * pow((b/10000),n) ), (1.7 * 2523 / pow(2,5)))"
    name Expression2
    label "LMS\nto\nL'M'S'"
    note_font "Bitstream Vera Sans"
    xpos 148
    ypos 357
   }
   ColorMatrix {
    matrix {
        {0 {1-epsilon} 0}
        {3.524 -4.066708 0.542708}
        {0.199076 1.096799 -1.295875}
      }
    name ColorMatrix2
    label "L'M'S\nto\nIzazbz"
    note_font "Bitstream Vera Sans"
    xpos 148
    ypos 417
    addUserKnob {20 User}
    addUserKnob {7 epsilon}
    epsilon 3.703522621e-11
   }
   Output {
    name Output1
    xpos 148
    ypos 517
   }
  end_group
  Dot {
   name Dot2
   xpos 114
   ypos 53
  }
push $N564f56c0
add_layer {zcam_1d zcam_1d.J zcam_1d.C zcam_1d.h zcam_1d.Q zcam_1d.M zcam_1d.H}
  MergeExpression {
   inputs 2
   temp_name0 Qz
   temp_expr0 "2700 * pow(Br, (1.6 * parent.F_s) / pow(parent.F_b, 0.12)) * pow(parent.F_s, 2.2) * pow(parent.F_b, 0.5) * pow(parent.F_L, 0.2)"
   temp_name1 Qzw
   temp_expr1 "2700 * pow(Ar, (1.6 * parent.F_s) / pow(parent.F_b, 0.12)) * pow(parent.F_s, 2.2) * pow(parent.F_b, 0.5) * pow(parent.F_L, 0.2)"
   temp_name2 j
   temp_expr2 100*(Qz/Qzw)
   channel0 {zcam_1d.J -zcam_1d.C -zcam_1d.h none}
   expr0 j
   channel1 {rgba.red -rgba.green -rgba.blue none}
   expr1 j
   channel2 none
   channel3 none
   name MergeExpression1
   selected true
   xpos -66
   ypos 50
  }
  Output {
   name Output
   xpos -66
   ypos 117
  }
 end_group
push $Nb0c19060
 ShuffleCopy {
  inputs 2
  red red
  alpha alpha2
  name ShuffleCopy1
  note_font "Bitstream Vera Sans"
  xpos -1148
  ypos -227
 }
 Merge2 {
  inputs 2
  operation multiply
  name Merge4
  label "highlight de-sat"
  note_font "Bitstream Vera Sans"
  xpos -1148
  ypos -21
 }
 Dot {
  name Dot1
  note_font "Bitstream Vera Sans"
  xpos -1114
  ypos 34
 }
set N87dc3ac0 [stack 0]
 Dot {
  name Dot2
  note_font "Bitstream Vera Sans"
  xpos -994
  ypos 34
 }
set N8d492150 [stack 0]
 Dot {
  name Dot3
  note_font "Bitstream Vera Sans"
  xpos -878
  ypos 34
 }
 Expression {
  temp_name0 posX
  temp_expr0 b/360*(lookupResolution.z-1)
  temp_name1 posY
  temp_expr1 r/lookupNormJ*(lookupResolution.x-1)
  temp_name2 fractX
  temp_expr2 posX-floor(posX)
  temp_name3 fractY
  temp_expr3 posY-floor(posY)
  expr0 posX
  expr1 fractX
  expr2 posY
  expr3 fractY
  name Expression2
  label "calculate lookup coordinates"
  note_font "Bitstream Vera Sans"
  xpos -912
  ypos 61
  addUserKnob {20 User}
  addUserKnob {13 lookupResolution}
  lookupResolution {{parent.lut_size_Iz} {parent.lut_size_m} {parent.lut_size_h}}
  addUserKnob {7 lookupNormJ R 0 500}
  lookupNormJ {{pow(log(parent.ssts_luminance.2)/log(2),1.7)*4.5}}
  addUserKnob {7 lookupNormM R 0 200}
  lookupNormM 80
 }
 MergeExpression {
  inputs 2
  temp_name0 blPix
  temp_expr0 Aa(floor(Br),floor(Bb))
  temp_name1 brPix
  temp_expr1 Aa(ceil(Br),floor(Bb))
  temp_name2 trPix
  temp_expr2 Aa(ceil(Br),ceil(Bb))
  temp_name3 tlPix
  temp_expr3 Aa(floor(Br),ceil(Bb))
  channel0 none
  expr1 "lerp( lerp(blPix, brPix, Bg), lerp(tlPix, trPix, Bg), Ba)"
  channel2 none
  channel3 none
  name MergeExpression1
  label "Bilinear Interploation"
  xpos -912
  ypos 102
 }
set N43ef5dc0 [stack 0]
 Dot {
  name Dot4
  note_font "Bitstream Vera Sans"
  xpos -878
  ypos 174
 }
push $N8d492150
push $N43ef5dc0
 Merge2 {
  inputs 2
  operation divide
  name Merge1
  xpos -1028
  ypos 106
 }
 Expression {
  expr0 (r<thr.r||lim.r<1.0001)?r:thr.r+s.r*((r-thr.r)/s.r)/(pow(1+pow((r-thr.r)/s.r,p),1/p))
  expr1 (g<thr.g||lim.g<1.0001)?g:thr.g+s.g*((g-thr.g)/s.g)/(pow(1+pow((g-thr.g)/s.g,p),1/p))
  expr2 (b<thr.b||lim.b<1.0001)?b:thr.b+s.b*((b-thr.b)/s.b)/(pow(1+pow((b-thr.b)/s.b,p),1/p))
  name Compress
  label Power(P)
  xpos -1028
  ypos 130
  addUserKnob {20 Params_tab l Params}
  addUserKnob {18 thr}
  thr {{parent.compression.0}}
  addUserKnob {6 thr_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
  addUserKnob {18 lim}
  lim {{parent.compression.1}}
  addUserKnob {6 lim_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
  addUserKnob {18 s}
  s {{(lim-thr)/pow(pow((1-thr)/(lim-thr),-p)-1,1/p)} {(lim-thr)/pow(pow((1-thr)/(lim-thr),-p)-1,1/p)} {(lim-thr)/pow(pow((1-thr)/(lim-thr),-p)-1,1/p)}}
  addUserKnob {6 s_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
  addUserKnob {7 p R 1 5}
  p {{parent.compression.2}}
 }
 Merge2 {
  inputs 2
  operation multiply
  name Merge2
  xpos -1028
  ypos 171
 }
push $N87dc3ac0
 ShuffleCopy {
  inputs 2
  green green
  alpha alpha2
  name ShuffleCopy2
  label "Apply Compressed\nColourfulness (M)"
  note_font "Bitstream Vera Sans"
  xpos -1148
  ypos 159
 }
 Group {
  name ZCAM_JMh_Blink1
  label "JMh to XYZ"
  note_font "Bitstream Vera Sans"
  xpos -1148
  ypos 340
  addUserKnob {20 User}
  addUserKnob {41 referenceWhite T RefWhite.illuminant_in}
  addUserKnob {7 referenceLuminance -STARTLINE R 0 1000}
  referenceLuminance {{parent.reference_luminance}}
  addUserKnob {4 viewingConditions M {dark dim average}}
  addUserKnob {7 backgroundLuminance -STARTLINE R 0 100}
  backgroundLuminance {{parent.background_luminance}}
  addUserKnob {6 discountIlluminant +STARTLINE}
  addUserKnob {6 invert +STARTLINE}
  invert true
 }
  BackdropNode {
   inputs 0
   name BackdropNode1
   label "Helper Nodes"
   note_font "Bitstream Vera Sans"
   note_font_size 20
   xpos 991
   ypos 100
   bdwidth 146
   bdheight 250
  }
  Input {
   inputs 0
   name Input1
   xpos 828
   ypos 71
  }
  Dot {
   name Dot1
   note_font "Bitstream Vera Sans"
   xpos 862
   ypos 153
  }
set Nec414880 [stack 0]
  Shuffle {
   red white
   green white
   blue white
   alpha white
   name Shuffle2
   label "\[value in]-->\[value out]"
   note_font "Bitstream Vera Sans"
   selected true
   xpos 1015
   ypos 144
  }
set Nec4197b0 [stack 0]
  Colorspace {
   colorspace_out CIE-XYZ
   name D65White
   note_font "Bitstream Vera Sans"
   xpos 1015
   ypos 243
   addUserKnob {20 User}
   addUserKnob {13 value}
   value {{colormatrix.0+colormatrix.1+colormatrix.2} {colormatrix.3+colormatrix.4+colormatrix.5} {colormatrix.6+colormatrix.7+colormatrix.8}}
  }
push $Nec4197b0
  Colorspace {
   illuminant_in {{parent.parent.white}}
   colorspace_out CIE-XYZ
   name RefWhite
   note_font "Bitstream Vera Sans"
   xpos 1015
   ypos 216
   addUserKnob {20 User}
   addUserKnob {13 value}
   value {{"\[python nuke.thisNode().knob('colormatrix').getValue(0)\\ +\\ nuke.thisNode().knob('colormatrix').getValue(1)\\ +\\ nuke.thisNode().knob('colormatrix').getValue(2)]"} {"\[python nuke.thisNode().knob('colormatrix').getValue(3) + nuke.thisNode().knob('colormatrix').getValue(4) + nuke.thisNode().knob('colormatrix').getValue(5)]"} {"\[python nuke.thisNode().knob('colormatrix').getValue(6) + nuke.thisNode().knob('colormatrix').getValue(7) + nuke.thisNode().knob('colormatrix').getValue(8)]"}}
  }
push $Nec414880
  BlinkScript {
   inputs 3
   recompileCount 66
   ProgramGroup 1
   KernelDescription "2 \"ZCAM_JMh_Kernel\" iterate pixelWise ac1327942f16c15a4b75f54f652a97dc0f54381ec18fc95d13cdfae2cd779b6b 4 \"src\" Read Point \"refWhite\" Read Point \"d65White\" Read Point \"dst\" Write Point 11 \"direction\" Int 1 AAAAAA== \"referenceLuminance\" Float 1 AAAAAA== \"F\" Float 1 AAAAAA== \"F_s\" Float 1 AAAAAA== \"L_A\" Float 1 AAAAAA== \"F_b\" Float 1 AAAAAA== \"F_L\" Float 1 AAAAAA== \"adaptDegree\" Float 1 AAAAAA== \"CAT02_XYZ_to_LMS\" Float 9 AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA \"ZCAM_XYZ_to_LMS\" Float 9 AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA \"ZCAM_LMS_to_Izazbz\" Float 9 AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA 11 \"direction\" 1 1 \"referenceLuminance\" 1 1 \"F\" 1 1 \"F_s\" 1 1 \"L_A\" 1 1 \"F_b\" 1 1 \"F_L\" 1 1 \"adaptDegree\" 1 1 \"CAT02_XYZ_to_LMS\" 9 1 \"ZCAM_XYZ_to_LMS\" 9 1 \"ZCAM_LMS_to_Izazbz\" 9 1 7 \"cb\" Float 1 1 AAAAAA== \"cg\" Float 1 1 AAAAAA== \"c1\" Float 1 1 AAAAAA== \"c2\" Float 1 1 AAAAAA== \"c3\" Float 1 1 AAAAAA== \"eta\" Float 1 1 AAAAAA== \"rho\" Float 1 1 AAAAAA=="
   kernelSource "\nkernel ZCAM_JMh_Kernel : ImageComputationKernel<ePixelWise>\n\{\n  Image<eRead, eAccessPoint, eEdgeClamped> src; // the input image\n  Image<eRead, eAccessPoint, eEdgeClamped> refWhite; // reference white image\n  Image<eRead, eAccessPoint, eEdgeClamped> d65White; // D65 white image\n  Image<eWrite> dst; // the output image\n\n  param:\n    int direction;\n    float referenceLuminance;\n    float F;\n    float F_s;\n    float L_A;\n    float F_b;\n    float F_L;\n    float adaptDegree;\n    float3x3 CAT02_XYZ_to_LMS;\n    float3x3 ZCAM_XYZ_to_LMS;\n    float3x3 ZCAM_LMS_to_Izazbz;\n\n  local:\n    float cb;\n    float cg;\n    float c1;\n    float c2;\n    float c3;\n    float eta;\n    float rho;\n\n\n  void define()\n  \{\n\n  \}\n\n\n  void init()\n  \{\n    cb  = 1.15f;\n    cg  = 0.66f;\n    c1  = 3424.0f / pow(2.0f,12.0f);\n    c2  = 2413.0f / pow(2.0f, 7.0f);\n    c3  = 2392.0f / pow(2.0f, 7.0f);\n    eta = 2610.0f / pow(2.0f,14.0f);\n    rho = 1.7f * 2523.0f / pow(2.0f,5.0f);\n  \}\n\n\n  float3 vector_dot( float3x3 m, float3 v)\n  \{\n    float3 r = 1.0f;\n    for(int c = 0; c<3; c++)\n    \{\n      r\[c] = m\[c]\[0]*v.x + m\[c]\[1]*v.y + m\[c]\[2]*v.z;\n    \}\n\n    return r;\n  \}\n\n\n  float3 CAT_Zhai2018( float3 XYZ_b, float3 XYZ_wb, float3 XYZ_wd, float D_b, float D_d, float3x3 M)\n  \{\n    float3 XYZ_wo = 100.0f;\n    float3 RGB_b = vector_dot(M, XYZ_b);\n    float3 RGB_wb = vector_dot(M, XYZ_wb);\n    float3 RGB_wd = vector_dot(M, XYZ_wd);\n    float3 RGB_wo = vector_dot(M, XYZ_wo);\n    \n    float3 D_RGB_b = D_b * (XYZ_wb.y / XYZ_wo.y) * (RGB_wo / RGB_wb) + 1 - D_b;\n    float3 D_RGB_d = D_d * (XYZ_wd.y / XYZ_wo.y) * (RGB_wo / RGB_wd) + 1 - D_d;\n    float3 D_RGB = D_RGB_b / D_RGB_d;\n    \n    float3 RGB_d = D_RGB * RGB_b;\n    float3 XYZ_d = vector_dot(M.invert(), RGB_d);\n    \n    return XYZ_d;\n  \}\n\n\n  float3 XYZ_to_Izazbz( float3 XYZD65 )\n  \{\n    float3 XYZpD65 = XYZD65;\n    XYZpD65.x = cb * XYZD65.x - (cb - 1.0f) * XYZD65.z;\n    XYZpD65.y = cg * XYZD65.y - (cg - 1.0f) * XYZD65.x;\n    float3 LMS = vector_dot(ZCAM_XYZ_to_LMS, XYZpD65);\n    float3 LMSp = 0.0f;\n    LMSp.x = pow( ( c1 + c2 * pow((LMS.x/10000.0f),eta) ) / ( 1.0f + c3 * pow((LMS.x/10000.0f),eta) ), rho);\n    LMSp.y = pow( ( c1 + c2 * pow((LMS.y/10000.0f),eta) ) / ( 1.0f + c3 * pow((LMS.y/10000.0f),eta) ), rho);\n    LMSp.z = pow( ( c1 + c2 * pow((LMS.z/10000.0f),eta) ) / ( 1.0f + c3 * pow((LMS.z/10000.0f),eta) ), rho);\n    float3 Izazbz = vector_dot(ZCAM_LMS_to_Izazbz, LMSp);\n    return Izazbz;\n  \}\n\n\n  float degrees( float radians )\n  \{\n    return radians * 180.0f / PI;\n  \}\n\n\n  float radians( float degrees )\n  \{\n    return degrees / 180.0f * PI;\n  \}\n\n\n  float3 Izazbz_to_JMh( float3 Izazbz, float refWhiteIz )\n  \{\n    float3 JMh = 0.0f;\n\n    JMh.z = fmod(degrees(atan2(Izazbz.z,Izazbz.y))+360.0f,360.0f);\n    float ez = 1.015f + cos(radians(89.038f+JMh.z));\n    float Qz = 2700.0f * pow(Izazbz.x, (1.6f * F_s) / pow(F_b, 0.12f)) * pow(F_s, 2.2f) * pow(F_b, 0.5f) * pow(F_L, 0.2f);\n    float Qzw = 2700.0f * pow(refWhiteIz, (1.6f * F_s) / pow(F_b, 0.12f)) * pow(F_s, 2.2f) * pow(F_b, 0.5f) * pow(F_L, 0.2f);\n    JMh.x = 100.0f * (Qz / Qzw);\n    JMh.y = 100.0f * pow((pow(Izazbz.y, 2.0f) + pow(Izazbz.z, 2.0f)), 0.37f) * ((pow(ez, 0.068f) * pow(F_L, 0.2f)) / (pow(F_b, 0.1f) * pow(refWhiteIz, 0.78f)));\n\n    return JMh;\n  \}\n\n\n  float3 JMh_to_Izazbz( float3 JMh, float refWhiteIz)\n  \{\n    float Qzm = pow(F_s, 2.2f) * pow(F_b, 0.5f) * pow(F_L, 0.2f);\n    float Qzw = 2700.0f * pow(refWhiteIz, (1.6f * F_s) / pow(F_b, 0.12f)) * Qzm;\n    float Izp = pow(F_b, 0.12f) / (1.6f * F_s);\n    float Izd = 2700.0f * 100.0f * Qzm;\n    float ez = 1.015f + cos(radians(89.038f+JMh.z));\n    float hzr = radians(JMh.z);\n    float Czp = pow((JMh.y * pow(refWhiteIz, 0.78f) * pow(F_b, 0.1f)) / (100.0f * pow(ez, 0.068f) * pow(F_L, 0.2f)), 50.0f / 37.0f);\n\n    return float3( pow((JMh.x * Qzw) / Izd, Izp), Czp * cos(hzr), Czp * sin(hzr));\n  \}\n\n\n  float3 Izazbz_to_XYZ( float3 Izazbz )\n  \{\n    float3 LMSp = vector_dot(ZCAM_LMS_to_Izazbz.invert(), Izazbz);\n    float3 LMS = 0.0f;\n    LMS.x = 10000.0f*pow((c1-pow(LMSp.x,1.0f/rho)) / (c3*pow(LMSp.x,1.0f/rho)-c2),1.0f/eta);\n    LMS.y = 10000.0f*pow((c1-pow(LMSp.y,1.0f/rho)) / (c3*pow(LMSp.y,1.0f/rho)-c2),1.0f/eta);\n    LMS.z = 10000.0f*pow((c1-pow(LMSp.z,1.0f/rho)) / (c3*pow(LMSp.z,1.0f/rho)-c2),1.0f/eta);\n    float3 XYZpD65 = vector_dot(ZCAM_XYZ_to_LMS.invert(), LMS);\n    float3 XYZD65 = XYZpD65;\n    XYZD65.x = (XYZpD65.x+(cb-1.0f)*XYZpD65.z)/cb;\n    XYZD65.y = (XYZpD65.y+(cg-1.0f)*XYZD65.x)/cg;\n    return XYZD65;\n  \}\n\n\n  float3 XYZ_to_ZCAM_JMh( float3 XYZ, float3 refWhite, float3 d65White )\n  \{\n    float3 refWhiteIzazbz = XYZ_to_Izazbz(refWhite*referenceLuminance/refWhite.y);\n    return Izazbz_to_JMh(XYZ_to_Izazbz(CAT_Zhai2018(XYZ, refWhite, d65White, adaptDegree, adaptDegree, CAT02_XYZ_to_LMS)), refWhiteIzazbz.x);\n  \}\n\n\n  float3 ZCAM_JMh_to_XYZ( float3 JMh, float3 refWhite, float3 d65White )\n  \{\n    float3 refWhiteIzazbz = XYZ_to_Izazbz(refWhite*referenceLuminance/refWhite.y);\n    return CAT_Zhai2018(Izazbz_to_XYZ(JMh_to_Izazbz(JMh, refWhiteIzazbz.x)), d65White, refWhite, adaptDegree, adaptDegree, CAT02_XYZ_to_LMS);\n  \}\n\n\n  void process()\n  \{\n    SampleType(src) input = src();\n    SampleType(refWhite) inputRefWhite = refWhite();\n    SampleType(d65White) inputD65White = d65White();\n\n    float3 output = 0.0f;\n\n    if( direction == 0 )\n    \{\n      output = XYZ_to_ZCAM_JMh(float3(input.x, input.y, input.z), float3(inputRefWhite.x, inputRefWhite.y, inputRefWhite.z), float3(inputD65White.x, inputD65White.y, inputD65White.z));\n    \}\n    else\n    \{\n       output = ZCAM_JMh_to_XYZ(float3(input.x, input.y, input.z), float3(inputRefWhite.x, inputRefWhite.y, inputRefWhite.z), float3(inputD65White.x, inputD65White.y, inputD65White.z));\n    \}\n\n    dst() = float4(output.x, output.y, output.z, input.w);\n  \}\n\};\n"
   rebuild ""
   ZCAM_JMh_Kernel_direction {{parent.invert}}
   ZCAM_JMh_Kernel_referenceLuminance {{parent.referenceLuminance}}
   ZCAM_JMh_Kernel_F {{"\[python (0.8, 0.9, 1.0)\\\[\[numvalue viewingConditions]\\]]"}}
   ZCAM_JMh_Kernel_F_s {{"\[python (0.525, 0.59, 0.69)\\\[\[numvalue viewingConditions]\\]]"}}
   ZCAM_JMh_Kernel_L_A {{"referenceLuminance * backgroundLuminance / 100"}}
   ZCAM_JMh_Kernel_F_b {{sqrt(backgroundLuminance/referenceLuminance)}}
   ZCAM_JMh_Kernel_F_L {{"0.171*pow(ZCAM_JMh_Kernel_L_A, 1/3) * (1-exp(-48/9*ZCAM_JMh_Kernel_L_A))"}}
   ZCAM_JMh_Kernel_adaptDegree {{"parent.discountIlluminant ? 1 : ZCAM_JMh_Kernel_F * (1 - (1 / 3.6) * exp((-ZCAM_JMh_Kernel_L_A - 42) / 92))"}}
   ZCAM_JMh_Kernel_CAT02_XYZ_to_LMS {
       {0.7328 0.4296 -0.1624}
       {-0.7036 1.6975 0.0061}
       {0.003 0.0136 0.9834}
     }
   ZCAM_JMh_Kernel_ZCAM_XYZ_to_LMS {
       {0.41478972 0.579999 0.014648}
       {-0.20151 1.120649 0.0531008}
       {-0.0166008 0.2648 0.6684799}
     }
   ZCAM_JMh_Kernel_ZCAM_LMS_to_Izazbz {
       {0 {1-epsilon} 0}
       {3.524 -4.066708 0.542708}
       {0.199076 1.096799 -1.295875}
     }
   rebuild_finalise ""
   name BlinkScript1
   note_font "Bitstream Vera Sans"
   xpos 828
   ypos 221
   addUserKnob {20 User}
   addUserKnob {7 epsilon}
   epsilon 3.703522621e-11
  }
  Output {
   name Output1
   xpos 828
   ypos 335
  }
 end_group
 Multiply {
  channels rgb
  value 0.01
  name Multiply5
  label "Lum to Linear"
  note_font "Bitstream Vera Sans"
  xpos -1148
  ypos 376
  disable {{Colorspace3.colorspace_out==31}}
 }
 Colorspace {
  colorspace_in CIE-XYZ
  colorspace_out BT1886
  name Colorspace3
  label "XYZ to Output"
  xpos -1148
  ypos 412
 }
 Clamp {
  channels rgb
  name Clamp6
  note_font "Bitstream Vera Sans"
  selected true
  xpos -1148
  ypos 444
 }
 Dot {
  name Dot26
  note_font "Bitstream Vera Sans"
  xpos -1114
  ypos 549
 }
 Dot {
  name Dot27
  note_font "Bitstream Vera Sans"
  xpos -502
  ypos 549
 }
 Switch {
  inputs 2
  which {{parent.invert}}
  name Switch1
  note_font "Bitstream Vera Sans"
  xpos -516
  ypos 588
 }
 Output {
  name Output
  xpos -516
  ypos 714
 }
end_group
